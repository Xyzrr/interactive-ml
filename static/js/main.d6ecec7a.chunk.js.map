{"version":3,"sources":["common/util/helpers.ts","interactive-ml/agents/QLearningAgent.ts","common/colors.ts","interactive-ml/components/Katex.tsx","interactive-ml/util/latex.ts","interactive-ml/components/BellmanUpdateKatex.tsx","interactive-ml/components/Button.tsx","interactive-ml/envs/NChain.ts","interactive-ml/Game.ts","interactive-ml/Scene.js","interactive-ml/scene-objects/AgentObject.ts","interactive-ml/scene-objects/ChainEnvironment.js","interactive-ml/scene-objects/CoinEmitter.ts","interactive-ml/scene-objects/NumberObject.js","interactive-ml/scene-objects/Table.ts","common/util/useWindowSize.js","interactive-ml/pages/QLearningPage.tsx","tetris/tetrominos.ts","interactive-ml/hooks/useStaging.tsx","snake/envs/SnakeEnv.ts","snake/components/SnakeRenderer.tsx","portfolio/pages/HomePage.tsx","tetris/EnemyGrid.ts","tetris/Renderer.ts","tetris/constants.ts","tetris/pages/TetrisPage.tsx","portfolio/pages/TestPage.tsx","text/components/TextEditor.styles.ts","text/components/ParagraphBlock.tsx","text/components/HeaderBlock.tsx","common/util/randomID.ts","text/components/TextEditor.tsx","text/pages/TextPage.tsx","clipboard/pages/ClipboardPage.styles.ts","clipboard/pages/ClipboardPage.tsx","App.tsx","serviceWorker.js","index.js"],"names":["argMax","array","map","x","i","reduce","r","a","array2D","rows","cols","val","row","push","slice","transpose","matrix","_","j","sleep","ms","Promise","resolve","setTimeout","resizeCanvas","canvasRef","width","height","current","window","devicePixelRatio","ctx","getContext","scale","QLearningAgent","options","gamma","lr","eps","epsDecay","qTable","updateData","this","env","zero2D","stateSpace","actionSpace","state","min","max","Math","random","length","floor","console","error","action","newState","reward","done","nextAction","currentQ","nextQ","darkGray","Color","rgb","gray","lightGray","green","darkGreen","blue","darkBlue","red","purple","yellow","brown","orange","QLearningColors","nextState","KatexDiv","styled","div","colors","toString","props","fontSize","Katex","html","katex","renderToString","expression","dangerouslySetInnerHTML","__html","colorbox","color","text","String","raw","hex","textcolor","BellmanUpdateKatex","data","actionString","nextActionString","Qsa","Qsa2","Qsan","Qsan2","style","position","left","top","y","toFixed","clickEffect","keyframes","ButtonDiv","React","forwardRef","ref","buttonRef","useRef","useImperativeHandle","click","animation","offsetWidth","onClick","NChainEnv","n","slip","small","large","episode_length","stepCount","slipped","log","info","Game","agent","prevState","lastReward","totalReward","lastAction","reset","undefined","step","update","finishEpisode","getAction","agentTakeAction","Scene","canvas","size","sceneObjects","requestAnimationFrame","render","bind","fillStyle","fillRect","forEach","obj","TWEEN","AgentObject","redness","newX","Tween","to","start","beginPath","arc","PI","fill","fade","ChainEnvironment","RADIUS","DIST","states","highlightedStates","strokeStyle","lineWidth","moveTo","lineTo","stroke","font","textAlign","fillText","index","CoinEmitter","coins","Set","end","delay","coin","opacity","fading","add","easing","Easing","Cubic","Out","onComplete","delete","NumberObject","precision","modifier","v","newVal","newValColor","newValOpacity","newValOffset","valOpacity","valOffset","activeTween","animated","animationDuration","stop","onStop","onAnimationFinish","Table","CELL_WIDTH","CELL_HEIGHT","numberObjects","highlightedCells","temp","newData","updateVal","cells","repositionNumbers","cell","col","rect","useWindowSize","isClient","getSize","useCallback","innerWidth","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","initialAgentOptions","glob","prepareForEnv","game","rewardNumberObject","envObject","coinEmitter","agentObject","tableObject","Page","QLearningPage","sceneRef","setStepCount","autoPlay","setOptions","stages","stage","setStage","e","keyCode","useStaging","alert","agentTookAction","leftButtonRef","rightButtonRef","handleKeyDown","preventDefault","document","move","clear","startX","angle","emit","cos","sin","highlightCells","highlightStates","onUpdate","path","label","background","SnakeEnv","boardSize","foodReward","deathReward","player","food","gather","shape","equal","sum","bufferSync","get","buffer","outOfBounds","tf","tail","head","collidedWithTail","currentPosition","actionUpdateMap","newPosition","concat","reshape","playerOnFood","randomizeFood","allButLast","playerOutOfBounds","newObservation","getObservation","foodEntry","reverse","playerEntries","updates","values","SnakeRendererDiv","desaturate","obs","snakeGlobals","stopRunning","disableInput","modelUpdating","SnakeRenderer","observation","setObservation","setTotalReward","updateModel","model","newObs","prediction","predict","nextRewardPrediction","targetActionScore","arraySync","set","fit","toTensor","epochs","runModel","print","newDone","runModelDebounced","then","compile","optimizer","loss","keyToActionMap","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","key","obsArray","className","snake","classNames","HomePageDiv","HomePageBackground","HomePage","themes","link","name","themeKey","location","hash","substr","choices","Object","keys","theme","href","jlstzOffsets","tetrominos","minos","offsets","rotateCoords","coords","result","coord","type","tetromino","getMinos","orientation","getColor","memoize","alpha","EnemyGrid","WIDTH_HEIGHT_RATIO","constants","GUTTER_WIDTH_RATIO","enemies","fullWidth","fullHeight","gapWidth","maxEnemyWidth","grid","enemyWidth","animatedEnemyWidth","yOffset","duration","Quadratic","InOut","enemyCount","compact","sideWidth","getSideWidth","enemyWidthWide","rowCap","sideCols","enemyHeight","gutterWidth","ceil","bestEnemyWidth","bestRowCount","bestColCount","enemyHeightTall","colCap","enemyWidthTall","newEnemies","getOptimalDimensions","setEnemyWidth","addNewEnemies","newGrid","offset","findEmptyColsLoop","getGutterWidth","findEmptyRowsLoop","expectedHeight","getGridExpectedHeight","enemy","has","gen","addPath","next","value","side","startJ","endJ","sidePath","right","l","updateYOffset","removeMissingEnemies","getGridCapacity","expand","enemyCoords","centerX","colsRight","colsLeft","addCoords","b","translate","activePiece","translation","activePieceIsColliding","field","pieceType","pos","Renderer","enemyGrid","enemyStates","playerState","unit","completeness","strokeRect","verticalCompleteness","centerY","topY","bottomY","horizontalCompleteness","leftX","rightX","ghost","MATRIX_ROWS","opts","borderCompleteness","showGrid","fieldOpacity","renderBorder","renderGrid","globalAlpha","renderLand","renderActivePiece","ghostPiece","testShift","moveToGround","nextPieces","held","margin","renderHoldSlot","hold","renderGameField","renderBagPreview","getHeight","frameWidth","frameHeight","renderGameFrame","getWidth","enemyState","animationType","animationProgress","cid","setMaxEnemyWidth","getEnemyCoordinates","entries","renderEnemy","clearRect","selfWidth","renderSelf","renderEnemies","serverState","clientID","playerStates","tween","predictedState","keyBindings","keyDown","TetrisPageDiv","playerInputs","go","Go","WebAssembly","instantiateStreaming","fetch","importObject","instance","run","goToJSPlayerState","s","jsToGoPlayerState","TetrisPage","everythingState","predictedStates","inputHistory","actionIndex","frameStartTime","serverTimeOffset","renderer","onKeyDown","sendInput","downTime","Date","now","lastTriggered","onKeyUp","startLocalGameEngine","socket","WebSocket","onopen","onmessage","m","parsedData","JSON","parse","messageType","id","time","produce","draft","everything","Error","newClientState","replaceIndex","stringify","predictingTime","inputs","lastPredictedState","updateGame","goResult","newPlayerState","reconcileServerState","updateFromServer","command","clientPlayerInput","serverPlayerInput","playerID","send","predictState","updateFromPrediction","rightKey","leftKey","downKey","msUntilNextUpdate","animate","renderEverything","TestPage","Wrapper","ParagraphBlock","block","nodeRef","content","HeaderBlock","Tag","level","randomID","TextEditor","blocks","setBlocks","onContentUpdate","selection","getSelection","anchorElement","focusElement","anchorNode","Element","parentElement","focusNode","anchorBlockNode","closest","focusBlockNode","blockID","blockIndex","innerHTML","old","convertDomToModel","contentEditable","suppressContentEditableWarning","onPaste","group","items","clipboardData","item","loggedObject","getData","asFile","getAsFile","asEntry","webkitGetAsEntry","getAsString","asString","kind","groupEnd","Component","TextPage","Input","textarea","ClipboardPage","placeholder","App","exact","component","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0PAAO,SAASA,EAAOC,GACrB,OAAOA,EAAMC,KAAI,SAACC,EAAGC,GAAJ,MAAU,CAACD,EAAGC,MAAIC,QAAO,SAACC,EAAGC,GAAJ,OAAWA,EAAE,GAAKD,EAAE,GAAKC,EAAID,KAAI,GAWtE,SAASE,EAAWC,EAAcC,EAAcC,GAGrD,IAFA,IAAIV,EAAQ,GACVW,EAAM,GACDF,KAAQE,EAAIC,KAAKF,GACxB,KAAOF,KAAQR,EAAMY,KAAKD,EAAIE,SAC9B,OAAOb,EAOF,SAASc,EAAUC,GACxB,OAAOA,EAAO,GAAGd,KAAI,SAACe,EAAGC,GAAJ,OAAUF,EAAOd,KAAI,SAACU,GAAD,OAASA,EAAIM,SAGlD,SAASC,EAAMC,GACpB,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,MAG/C,SAASI,EACdC,EACAC,EACAC,GAEA,GAAIF,EAAUG,QAAS,CACrBH,EAAUG,QAAQF,MAAQA,EAAQG,OAAOC,iBACzCL,EAAUG,QAAQD,OAASA,EAASE,OAAOC,iBAC3C,IAAMC,EAAMN,EAAUG,QAAQI,WAAW,MACrCD,GACFA,EAAIE,MAAMJ,OAAOC,iBAAkBD,OAAOC,mB,gCCzB3BI,E,WASnB,WAAYC,GAAe,yBAR3BC,WAQ0B,OAP1BC,QAO0B,OAN1BC,SAM0B,OAL1BC,cAK0B,OAJ1BC,YAI0B,OAF1BC,gBAE0B,EACxBN,EAAO,aACLC,MAAO,IACPC,GAAI,GACJC,IAAK,GACLC,SAAU,KACPJ,GAELO,KAAKN,MAAQD,EAAQC,MACrBM,KAAKL,GAAKF,EAAQE,GAClBK,KAAKJ,IAAMH,EAAQG,IACnBI,KAAKH,SAAWJ,EAAQI,S,iDAG1B,SAAcI,GACZD,KAAKF,ODrCF,SAAgB/B,EAAcC,GAGnC,IAFA,IAAIT,EAAQ,GACVW,EAAM,GACDF,KAAQE,EAAIC,KAAK,GACxB,KAAOJ,KAAQR,EAAMY,KAAKD,EAAIE,SAC9B,OAAOb,ECgCS2C,CAAOD,EAAIE,WAAaF,EAAIG,e,uBAG5C,SAAUC,GDxBL,IAAiBC,EAAaC,ECyBjC,GAAmB,MAAfP,KAAKF,OAKT,OAAIU,KAAKC,SAAWT,KAAKJ,KD9BLU,EC+BH,ED/BgBC,EC+BbP,KAAKF,OAAO,GAAGY,OD9B9BF,KAAKG,MAAMH,KAAKC,UAAYF,EAAMD,IAAQA,GCgCtChD,EAAO0C,KAAKF,OAAOO,IAP1BO,QAAQC,MAAM,mC,oBAWlB,SACER,EACAS,EACAC,EACAC,EACAC,GAEmB,MAAfjB,KAAKF,QAKTE,KAAKD,WAAa,CAChBM,QACAS,SACAnB,GAAIK,KAAKL,GACTqB,SACAC,OACAvB,MAAOM,KAAKN,MACZqB,WACAG,WAAY5D,EAAO0C,KAAKF,OAAOiB,IAC/BI,SAAUnB,KAAKF,OAAOO,GAAOS,GAC7BM,MAAOZ,KAAKD,IAAL,MAAAC,KAAI,YAAQR,KAAKF,OAAOiB,MAGjCf,KAAKF,OAAOO,GAAOS,IACjBd,KAAKL,IACJqB,GACEC,EAAO,EAAIjB,KAAKN,MAAQc,KAAKD,IAAL,MAAAC,KAAI,YAAQR,KAAKF,OAAOiB,MACjDf,KAAKF,OAAOO,GAAOS,KArBrBF,QAAQC,MAAM,mC,2BAwBlB,WACEb,KAAKJ,KAAOI,KAAKH,a,sBCxFRwB,EAAWC,IAAMC,IAAI,GAAI,GAAI,IAC7BC,EAAOF,IAAMC,IAAI,IAAK,IAAK,KAC3BE,EAAYH,IAAMC,IAAI,IAAK,IAAK,KAEhCG,GADgBJ,IAAMC,IAAI,IAAK,IAAK,KAC5BD,IAAMC,IAAI,IAAK,IAAK,MAC5BI,EAAYL,IAAMC,IAAI,GAAI,IAAK,KAC/BK,EAAON,IAAMC,IAAI,IAAK,IAAK,KAC3BM,EAAWP,IAAMC,IAAI,GAAI,IAAK,KAC9BO,EAAMR,IAAMC,IAAI,IAAK,IAAK,IAC1BQ,EAAST,IAAMC,IAAI,IAAK,IAAK,KAC7BS,EAASV,IAAMC,IAAI,IAAK,IAAK,KAC7BU,EAAQX,IAAMC,IAAI,IAAK,IAAK,KAC5BW,EAASZ,IAAMC,IAAI,IAAK,IAAK,GAK7BY,EAAkB,CAC7B9B,MAAO0B,EACPK,UAAWP,EACXb,OAAQgB,EACRlB,OAAQmB,EACRf,WAAYS,EACZR,SATqBG,IAAMC,IAAI,GAAI,GAAI,IAUvCH,MATqBE,IAAMC,IAAI,GAAI,GAAI,K,kBCXnCc,GAAWC,IAAOC,IAAV,+DACHC,EAAiBC,YACb,SAACC,GAAD,OAAWA,EAAMC,YAkBjBC,GAVqB,SAACF,GACnC,IAAMG,EAAOC,KAAMC,eAAeL,EAAMM,YACxC,OACE,kBAACX,GAAD,CACEM,SAAUD,EAAMC,UAAY,GAC5BM,wBAAyB,CAAEC,OAAQL,MCnB5BM,GAAW,SAACC,EAAcC,GAAf,OACtBC,OAAOC,IADgB,MAAD,kEACCH,EAAMI,MAAWH,IAE7BI,GAAY,SAACL,EAAcC,GAAf,OACvBC,OAAOC,IADiB,IAAD,mEACCH,EAAMI,MAAUH,ICyF3BK,GAlF+C,SAAChB,GAC7D,IAAMiB,EAAOjB,EAAM3C,WAEnB,GAAY,MAAR4D,EACF,OAAO,qCAET,IAAMC,EAAeD,EAAK7C,OACtBwC,OAAOC,IADU,sDAEjBD,OAAOC,IAFU,wDAGfM,EAAmBF,EAAKzC,WAC1BoC,OAAOC,IADc,sDAErBD,OAAOC,IAFc,wDAInBO,EAAMX,GACVX,EAAOrB,SACPmC,OAAOC,IAFY,IAAD,gCAEHE,GAAUjB,EAAOnC,MAAO,KAASoD,GAC9CjB,EAAO1B,OACP,OAGEiD,EAAOZ,GACXX,EAAOrB,SACPmC,OAAOC,IAFa,IAAD,gCAEJE,GAAUjB,EAAOnC,MAAOsD,EAAKtD,MAAMoC,YAAgBgB,GAChEjB,EAAO1B,OACP8C,KAGEI,EAAOb,GACXX,EAAOpB,MACPkC,OAAOC,IAFa,IAAD,oEAEAE,GAAUjB,EAAOtB,WAAY,MAAWuC,GACzDjB,EAAOJ,UACP,MACIqB,GAAUjB,EAAOtB,WAAY,QAE/B+C,EAAQd,GACZX,EAAOpB,MACPkC,OAAOC,IAFc,IAAD,gCAELE,GACbjB,EAAOJ,UACPuB,EAAK5C,SAAS0B,YACVgB,GAAUjB,EAAOtB,WAAY2C,EAAiBpB,cAGtD,OACE,yBACEyB,MAAO,CACLC,SAAU,QACVC,KAAM1B,EAAMyB,SAAS1G,EACrB4G,IAAK3B,EAAMyB,SAASG,IAGtB,kBAAC,GAAD,CACEtB,WAAYM,OAAOC,IAAT,6kBACOO,EAAmBA,EAAgBL,GAClDjB,EAAOxB,OACP,KACYgD,EAAUF,EAEtBC,EAAoBA,EAAUJ,EAAKhE,GAAM8D,GACzCjB,EAAOxB,OACP2C,EAAK3C,OAAOyB,YACPkB,EAAKjE,MAASuE,EAAWF,EAE9BA,EAAoBZ,GACpBX,EAAOrB,SACPwC,EAAKxC,SAASoD,QAAQ,IACjBZ,EAAKhE,GAAM8D,GAAUjB,EAAOxB,OAAQ2C,EAAK3C,OAAOyB,YACrDkB,EAAKjE,MACDyD,GAASX,EAAOpB,MAAOuC,EAAKvC,MAAMmD,QAAQ,IAASpB,GACvDX,EAAOrB,SACPwC,EAAKxC,SAASoD,QAAQ,IAGtBR,GACAJ,EAAKxC,SACLwC,EAAKhE,IAAMgE,EAAK3C,OAAS2C,EAAKjE,MAAQiE,EAAKvC,MAAQuC,EAAKxC,WACxDoD,QAAQ,QClFZC,GAAcC,YAAH,qJASXC,GAAYpC,IAAOC,IAAV,yLAOAiC,IA0CAG,OAAMC,YA7BoD,SACvElC,EACAmC,GAEA,IAAMC,EAAYH,IAAMI,OAAuB,MAU/C,OATAJ,IAAMK,oBAAoBH,GAAK,iBAAO,CACpCI,MAAO,WACDH,EAAU5F,UACZ4F,EAAU5F,QAAQgF,MAAMgB,UAAY,OAC/BJ,EAAU5F,QAAQiG,YACvBL,EAAU5F,QAAQgF,MAAMgB,UAAY,SAKxC,kBAACR,GAAD,CACER,MAAO,CACLE,KAAM1B,EAAMyB,SAAS1G,EACrB4G,IAAK3B,EAAMyB,SAASG,EACpBY,UAAW,QAEbE,QAAS1C,EAAM0C,QACfP,IAAKC,GAEL,kBAAC,GAAD,CAAOnC,SAAU,GAAIK,WAAYN,EAAMM,iBCzDxBqC,G,WAYnB,aAA6E,IAAjEC,EAAgE,uDAA5D,EAAGC,EAAyD,uDAAlD,GAAKC,EAA6C,uDAArC,EAAGC,EAAkC,uDAA1B,GAAIC,EAAsB,uDAAL,IAAK,yBAX5EJ,OAW4E,OAV5EC,UAU4E,OAT5EC,WAS4E,OAR5EC,WAQ4E,OAP5EC,oBAO4E,OAN5ErF,WAM4E,OAL5EsF,eAK4E,OAH5ExF,gBAG4E,OAF5EC,iBAE4E,EAC1EJ,KAAKsF,EAAIA,EACTtF,KAAKuF,KAAOA,EACZvF,KAAKwF,MAAQA,EACbxF,KAAKyF,MAAQA,EACbzF,KAAK0F,eAAiBA,EACtB1F,KAAKK,MAAQ,EACbL,KAAK2F,UAAY,EAEjB3F,KAAKG,WAAamF,EAClBtF,KAAKI,YAAc,E,wCAGrB,SAAKU,GACH,IAAI8E,GAAU,EACVpF,KAAKC,SAAWT,KAAKuF,OACvBzE,GAAUA,EACV8E,GAAU,GAEZ,IAAI5E,EAAS,EAcb,OAbIF,GAEFE,EAAShB,KAAKwF,MACdxF,KAAKK,MAAQ,GACJL,KAAKK,MAAQL,KAAKsF,EAAI,EAE/BtF,KAAKK,OAAS,EAGdW,EAAShB,KAAKyF,MAEhBzF,KAAK2F,WAAa,EAClB/E,QAAQiF,IAAI7F,KAAK2F,WACV,CACL5E,SAAUf,KAAKK,MACfW,OAAQA,EACRC,KAAMjB,KAAK2F,WAAa3F,KAAK0F,eAC7BI,KAAM,CAAEF,c,mBAIZ,WAGE,OAFA5F,KAAKK,MAAQ,EACbL,KAAK2F,UAAY,EACV3F,KAAKK,U,KCvDK0F,G,WASnB,WAAY9F,EAAU+F,GAAe,yBARrC/F,SAQoC,OAPpC+F,WAOoC,OANpC3F,WAMoC,OALpC4F,eAKoC,OAJpCC,gBAIoC,OAHpCC,YAAsB,EAGc,KAFpCC,gBAEoC,EAClCpG,KAAKC,IAAMA,EACXD,KAAKgG,MAAQA,EACbhG,KAAKqG,Q,yCAGP,WACErG,KAAKK,MAAQL,KAAKC,IAAIoG,QACtBrG,KAAKiG,eAAYK,EACjBtG,KAAKmG,YAAc,I,6BAGrB,SAAgBrF,GAAc,IAAD,EACcd,KAAKC,IAAIsG,KAAKzF,GAA/CC,EADmB,EACnBA,SAAUC,EADS,EACTA,OAAQC,EADC,EACDA,KAAM6E,EADL,EACKA,KAChC9F,KAAKoG,WAAatF,EAClBd,KAAKkG,WAAalF,EAClBhB,KAAKmG,aAAenF,EACpBhB,KAAKgG,MAAMQ,OAAOxG,KAAKK,MAAOS,EAAQC,EAAUC,EAAQC,GACxDjB,KAAKiG,UAAYjG,KAAKK,MACtBL,KAAKK,MAAQU,EACb,IAAMoF,EAAcnG,KAAKmG,YAKzB,OAJIlF,IACFjB,KAAKgG,MAAMS,gBACXzG,KAAKqG,SAEA,CAAEvF,SAAQC,WAAUC,SAAQC,OAAMkF,cAAaL,U,kBAGxD,WACE,IAAMhF,EAASd,KAAKgG,MAAMU,UAAU1G,KAAKK,OACzC,OAAOL,KAAK2G,gBAAgB7F,O,0BCvCX8F,G,WACnB,WAAYC,EAAQxH,EAAKyH,EAAMC,GAAe,oBAC5C/G,KAAK6G,OAASA,EACd7G,KAAKX,IAAMA,EACXW,KAAK8G,KAAOA,EACZ9G,KAAK+G,aAAeA,E,0CAGtB,WAAU,IAAD,OACPC,sBAAsBhH,KAAKiH,OAAOC,KAAKlH,OAEvCA,KAAKX,IAAI8H,UAAY9F,EACrBrB,KAAKX,IAAI+H,SAAS,EAAG,EAAGpH,KAAK8G,KAAK9H,MAAOgB,KAAK8G,KAAK7H,QACnDe,KAAK+G,aAAaM,SAAQ,SAACC,GACzBA,EAAIL,OAAO,EAAK5H,IAAK,EAAKyH,SAG5BS,KAAMf,a,KCdWgB,G,WAGnB,WAAYrD,GAAqB,yBAFjCA,cAEgC,OADhCsD,aACgC,EAC9BzH,KAAKmE,SAAWA,EAChBnE,KAAKyH,QAAU,E,wCAGjB,SAAKC,GACH,IAAIH,KAAMI,MAAM3H,KAAKmE,UAAUyD,GAAG,CAAEnK,EAAGiK,GAAQ,KAAKG,U,kBAGtD,WACE7H,KAAKyH,QAAU,EACf,IAAIF,KAAMI,MAAM3H,MAAM4H,GAAG,CAAEH,QAAS,GAAK,KAAKI,U,oBAGhD,SAAOxI,GACLA,EAAI8H,UAAY3E,EAChBnD,EAAIyI,YACJzI,EAAI0I,IAAI/H,KAAKmE,SAAS1G,EAAGuC,KAAKmE,SAASG,EAAG,GAAI,EAAG,EAAI9D,KAAKwH,IAC1D3I,EAAI4I,OACJ5I,EAAI8H,UAAY3E,EAAW0F,KAAK,EAAIlI,KAAKyH,SACzCpI,EAAI4I,W,KC3BaE,G,WAInB,WAAYhE,GAAW,yBAHvBiE,OAAS,GAGa,KAFtBC,KAAO,IAGLrI,KAAKmE,SAAWA,E,mDAGlB,SAAgBmE,GACdtI,KAAKuI,kBAAoBD,I,oBAG3B,SAAOjJ,GAAM,IAAD,OACVA,EAAImJ,YAAchG,EAClBnD,EAAIoJ,UAAY,EAChBpJ,EAAIyI,YACJ,IAAK,IAAIpK,EAAI,EAAGA,EAAI,EAAGA,IACjBA,EAAI,IACN2B,EAAIyI,YACJzI,EAAIqJ,OACF1I,KAAKmE,SAAS1G,EAAIuC,KAAKqI,MAAQ3K,EAAI,GAAKsC,KAAKoI,OAC7CpI,KAAKmE,SAASG,GAEhBjF,EAAIsJ,OACF3I,KAAKmE,SAAS1G,EAAIuC,KAAKqI,MAAQ3K,EAAI,GAAKsC,KAAKoI,OAC7CpI,KAAKmE,SAASG,IAGlBjF,EAAIuJ,SACJvJ,EAAIyI,YACJzI,EAAI0I,IACF/H,KAAKmE,SAAS1G,EAAIuC,KAAKqI,MAAQ3K,EAAI,GACnCsC,KAAKmE,SAASG,EACdtE,KAAKoI,OACL,EACA,EAAI5H,KAAKwH,IAEX3I,EAAIuJ,SACJvJ,EAAIwJ,KAAO,kBACXxJ,EAAI8H,UAAY3E,EAAYC,WAC5BpD,EAAIyJ,UAAY,SAChBzJ,EAAI0J,SACFrL,EACAsC,KAAKmE,SAAS1G,EAAIuC,KAAKqI,MAAQ3K,EAAI,GACnCsC,KAAKmE,SAASG,EAAI,GAGlBtE,KAAKuI,mBACPvI,KAAKuI,kBAAkBlB,SAAQ,SAAChH,GAC9BhB,EAAIyI,YACJzI,EAAImJ,YAAcnI,EAAM+C,MAAMX,WAC9BpD,EAAI0I,IACF,EAAK5D,SAAS1G,EAAI,EAAK4K,MAAQhI,EAAM2I,MAAQ,GAC7C,EAAK7E,SAASG,EACd,EAAK8D,OACL,EACA,EAAI5H,KAAKwH,IAEX3I,EAAIuJ,SAEJvJ,EAAIwJ,KAAO,kBACXxJ,EAAI8H,UAAY9G,EAAM+C,MAAMX,WAC5BpD,EAAIyJ,UAAY,SAChBzJ,EAAI0J,SACF1I,EAAM2I,MACN,EAAK7E,SAAS1G,EAAI,EAAK4K,MAAQhI,EAAM2I,MAAQ,GAC7C,EAAK7E,SAASG,EAAI,U,KCxDP2E,G,iDACnBC,MAAQ,IAAIC,I,wCACZ,SAAKtB,EAAiBuB,GAAmC,IAApBC,EAAmB,uDAAH,EAC7CC,EAAa,CACjBnF,SAAU0D,EACV0B,QAAS,CAAEtL,IAAK,GAChBuL,QAAQ,GAEVxJ,KAAKkJ,MAAMO,IAAIH,GACf,IAAI/B,KAAMI,MAAM2B,EAAKnF,UAClBkF,MAAMA,GACNzB,GAAGwB,EAAK,KACRM,OAAOnC,KAAMoC,OAAOC,MAAMC,KAC1BhC,QACH,IAAIN,KAAMI,MAAM2B,EAAKC,SAClBF,MAAMA,GACNzB,GAAG,CAAE3J,IAAK,IAAO,KACjByL,OAAOnC,KAAMoC,OAAOC,MAAMC,KAC1BhC,U,mBAEL,WAAS,IAAD,OACN7H,KAAKkJ,MAAM7B,SAAQ,SAACiC,GACbA,EAAKE,SACR,IAAIjC,KAAMI,MAAM2B,EAAKC,SAClBF,MAAM,KACNzB,GAAG,CAAE3J,IAAK,GAAK,KACf6L,YAAW,kBAAM,EAAKZ,MAAMa,OAAOT,MACnCzB,QACHyB,EAAKE,QAAS,Q,oBAIpB,SAAOnK,GACLW,KAAKkJ,MAAM7B,SAAQ,SAACiC,GAClBjK,EAAIyI,YACJzI,EAAI8H,UAAY3E,EAAuBxB,OACpCkH,KAAK,EAAIoB,EAAKC,QAAQtL,KACtBwE,WACHpD,EAAI0I,IAAIuB,EAAKnF,SAAS1G,EAAG6L,EAAKnF,SAASG,EAAG,EAAG,EAAG,EAAI9D,KAAKwH,IACzD3I,EAAI4I,c,KChDW+B,G,WACnB,WAAY7F,EAAUlG,EAAKwB,GAAU,oBACnCA,EAAO,aACLoJ,KAAM,kBACNC,UAAW,SACXmB,UAAW,EACX7G,MAAOZ,EACP0H,SAAU,SAACC,GAAD,OAAOA,IACd1K,GAGLO,KAAKmE,SAAWA,EAChBnE,KAAK/B,IAAMA,EACX+B,KAAK6I,KAAOpJ,EAAQoJ,KACpB7I,KAAK8I,UAAYrJ,EAAQqJ,UACzB9I,KAAKiK,UAAYxK,EAAQwK,UACzBjK,KAAKkK,SAAWzK,EAAQyK,SACxBlK,KAAKoD,MAAQ3D,EAAQ2D,MACrBpD,KAAKoK,OAAS,EACdpK,KAAKqK,YAAc7H,EACnBxC,KAAKsK,cAAgB,EACrBtK,KAAKuK,aAAe,EACpBvK,KAAKwK,WAAa,EAClBxK,KAAKyK,UAAY,E,qDAGnB,WACEzK,KAAK0K,YAAc,IAAInD,KAAMI,MAAM3H,MAChC4H,GAAG,CAAE0C,cAAe,GAAK,KACzBzC,QACH7H,KAAKwK,WAAa,EAClBxK,KAAKyK,UAAY,EACjBzK,KAAK/B,IAAM+B,KAAKoK,S,uBAGlB,SAAUA,GAAmD,IAA3CO,IAA0C,yDAAzBC,EAAyB,uDAAL,IACjDR,IAAWpK,KAAKoK,SAGhBpK,KAAK0K,aACP1K,KAAK0K,YAAYG,OAGdF,IACH3K,KAAK/B,IAAMmM,EACXpK,KAAKoK,OAASA,GAGZA,EAASpK,KAAK/B,KAChB+B,KAAK/B,IAAM+B,KAAKoK,OAChBpK,KAAKoK,OAASA,EACdpK,KAAKqK,YAAc7H,EACnBxC,KAAKwK,WAAa,EAClBxK,KAAKsK,cAAgB,EACrBtK,KAAKyK,UAAY,EACjBzK,KAAKuK,cAAgB,GACrBvK,KAAK0K,YAAc,IAAInD,KAAMI,MAAM3H,MAChC4H,GACC,CACE4C,WAAY,EACZF,cAAe,EACfG,UAAW,GACXF,aAAc,GAEhBK,GAEDE,OAAO9K,KAAK+K,kBAAkB7D,KAAKlH,OACnC8J,WAAW9J,KAAK+K,kBAAkB7D,KAAKlH,OACvC6H,SACMuC,EAASpK,KAAK/B,MACvB+B,KAAK/B,IAAM+B,KAAKoK,OAChBpK,KAAKoK,OAASA,EACdpK,KAAKqK,YAAc7H,EACnBxC,KAAKwK,WAAa,EAClBxK,KAAKsK,cAAgB,EACrBtK,KAAKyK,UAAY,EACjBzK,KAAKuK,aAAe,GACpBvK,KAAK0K,YAAc,IAAInD,KAAMI,MAAM3H,MAChC4H,GACC,CACE4C,WAAY,EACZF,cAAe,EACfG,WAAY,GACZF,aAAc,GAEhBK,GAEDE,OAAO9K,KAAK+K,kBAAkB7D,KAAKlH,OACnC8J,WAAW9J,KAAK+K,kBAAkB7D,KAAKlH,OACvC6H,Y,oBAIP,SAAOxI,GACLA,EAAIyJ,UAAY9I,KAAK8I,UACrBzJ,EAAIwJ,KAAO7I,KAAK6I,KAChBxJ,EAAI8H,UAAYnH,KAAKoD,MAAM8E,KAAK,EAAIlI,KAAKwK,YACzB,MAAZxK,KAAK/B,KACPoB,EAAI0J,SACF/I,KAAKkK,SAASlK,KAAK/B,IAAIsG,QAAQvE,KAAKiK,YACpCjK,KAAKmE,SAAS1G,EACduC,KAAKmE,SAASG,EAAItE,KAAKyK,WAG3BpL,EAAI8H,UAAYnH,KAAKqK,YAAYnC,KAAK,EAAIlI,KAAKsK,eAC5B,MAAftK,KAAKoK,QACP/K,EAAI0J,SACF/I,KAAKkK,SAASlK,KAAKoK,OAAO7F,QAAQvE,KAAKiK,YACvCjK,KAAKmE,SAAS1G,EACduC,KAAKmE,SAASG,EAAItE,KAAKuK,kB,KC5GVS,G,WAQnB,WAAY7G,EAAoBR,GAAmB,yBAPnDsH,WAAa,IAOqC,KANlDC,YAAc,GAMoC,KAJlDC,mBAIkD,OAHlDhH,cAGkD,OAFlDiH,iBAA0B,GAGxBpL,KAAKmE,SAAWA,EAChBnE,KAAKmL,cAAgB,GACrB,IAAK,IAAIzN,EAAI,EAAGA,EAAIiG,EAAKjD,OAAQhD,IAAK,CAEpC,IADA,IAAM2N,EAAO,GACJ7M,EAAI,EAAGA,EAAImF,EAAK,GAAGjD,OAAQlC,IAClC6M,EAAKlN,KAAK,IAAI6L,GAAa,EAAG,EAAGrG,EAAKjG,GAAGc,KAE3CwB,KAAKmL,cAAchN,KAAKkN,I,8CAI5B,SAAWC,GACT,IAAK,IAAI5N,EAAI,EAAGA,EAAIsC,KAAKmL,cAAczK,OAAQhD,IAC7C,IAAK,IAAIc,EAAI,EAAGA,EAAIwB,KAAKmL,cAAc,GAAGzK,OAAQlC,IAChDwB,KAAKmL,cAAczN,GAAGc,GAAG+M,UAAUD,EAAQ5N,GAAGc,M,4BAKpD,SAAegN,GACbxL,KAAKoL,iBAAmBI,I,+BAG1B,WACE,IAAK,IAAI9N,EAAI,EAAGA,EAAIsC,KAAKmL,cAAczK,OAAQhD,IAC7C,IAAK,IAAIc,EAAI,EAAGA,EAAIwB,KAAKmL,cAAc,GAAGzK,OAAQlC,IAChDwB,KAAKmL,cAAczN,GAAGc,GAAG2F,SAAW,CAClC1G,EAAGuC,KAAKmE,SAAS1G,EAAIuC,KAAKiL,YAAczM,EAAI,IAC5C8F,EAAGtE,KAAKmE,SAASG,EAAI,GAAKtE,KAAKkL,YAAcxN,K,oBAMrD,SAAO2B,GAAgC,IAAD,OACpCA,EAAIoJ,UAAY,EAChBzI,KAAKyL,oBACDzL,KAAKoL,kBACPpL,KAAKoL,iBAAiB/D,SAAQ,SAACqE,GAC7BrM,EAAIyI,YACJzI,EAAI8H,UAAYuE,EAAKtI,MACrB/D,EAAI+H,SACF,EAAKjD,SAAS1G,EAAI,EAAKwN,WAAaS,EAAKC,IACzC,EAAKxH,SAASG,EAAI,EAAK4G,YAAcQ,EAAKxN,IAC1C,EAAK+M,WACL,EAAKC,gBAIX,IAAK,IAAIxN,EAAI,EAAGA,EAAIsC,KAAKmL,cAAczK,OAAQhD,IAC7C,IAAK,IAAIc,EAAI,EAAGA,EAAIwB,KAAKmL,cAAc,GAAGzK,OAAQlC,IAChDa,EAAIyI,YACJzI,EAAIuM,KACF5L,KAAKmE,SAAS1G,EAAIuC,KAAKiL,WAAazM,EACpCwB,KAAKmE,SAASG,EAAItE,KAAKkL,YAAcxN,EACrCsC,KAAKiL,WACLjL,KAAKkL,aAEP7L,EAAImJ,YAAchG,EAAYC,WAC9BpD,EAAIuJ,SACJ5I,KAAKmL,cAAczN,GAAGc,GAAGyI,OAAO5H,O,KCtEzB,SAASwM,KACtB,IAAMC,EAA6B,kBAAX3M,OAElB4M,EAAUpH,IAAMqH,aAAY,WAChC,MAAO,CACLhN,MAAO8M,EAAW3M,OAAO8M,gBAAa3F,EACtCrH,OAAQ6M,EAAW3M,OAAO+M,iBAAc5F,KAEzC,CAACwF,IARkC,EAUFnH,IAAMwH,SAASJ,GAVb,mBAU/BK,EAV+B,KAUnBC,EAVmB,KAyBtC,OAbA1H,IAAM2H,WAAU,WACd,IAAKR,EACH,OAAO,EAGT,SAASS,IACPF,EAAcN,KAIhB,OADA5M,OAAOqN,iBAAiB,SAAUD,GAC3B,kBAAMpN,OAAOsN,oBAAoB,SAAUF,MACjD,CAACR,EAASM,EAAeP,IAErBM,ECLT,IAAMM,GAAsB,CAC1BhN,MAAO,IACPC,GAAI,GACJC,IAAK,GACLC,SAAU,KAGN8M,GACE,IADFA,GAEK,IAGL1M,GAAM,IAAIoF,GACVW,GAAQ,IAAIxG,EAAekN,IACjC1G,GAAM4G,cAAc3M,IACpB,IAAM4M,GAAO,IAAI9G,GAAK9F,GAAK+F,IAErB8G,GAAqB,IAAI9C,GAC7B,CAAEvM,EAAGkP,GAAcrI,EAAGqI,GAAY,IAClC,EACA,CACE7D,UAAW,SACXD,KAAM,kBACNoB,UAAW,IAwBT8C,GAAY,IAAI5E,GAAiB,CACrC1K,EAAGkP,GACHrI,EAAGqI,KAECK,GAAc,IAAI/D,GAClBgE,GAAc,IAAIzF,GAAY,CAClC/J,EAAGkP,GAAe,EAAII,GAAU1E,KAChC/D,EAAGqI,KAECO,GAAc,IAAIlC,GACtB,CAAEvN,EAAGkP,GAAgC,IAAjBI,GAAU1E,KAAY/D,EAAGqI,GAAY,IACzDtO,EAAU2H,GAAMlG,SAElBoN,GAAYjC,WAAa8B,GAAU1E,KAEnC,IAAM8E,GAAO7K,IAAOC,IAAV,uDACYC,EAAgBC,YC0FtC,ID6Le2K,I,SAAAA,GApRf,WACE,IAAMrO,EAAY4F,IAAMI,OAA0B,MAC5CsI,EAAW1I,IAAMI,SACjB+B,EAAO+E,KAHU,EAKWlH,IAAMwH,SAAS,GAL1B,mBAKhBxG,EALgB,KAKL2H,EALK,OAMO3I,IAAMwH,SAAN,aAC5BoB,UAAU,GACPb,KARkB,mBAMhBjN,EANgB,KAMP+N,EANO,MErFV,SAAoBC,GAAkB,IAAD,EACxB9I,IAAMwH,SAAS,GADS,mBAC3CuB,EAD2C,KACpCC,EADoC,KAElDhJ,IAAM2H,WAAU,WACdnN,OAAOqN,iBAAiB,YAAY,SAAAoB,GAClC,OAAQA,EAAEC,SACR,KAAK,IAEHJ,EAAOC,KACHA,EAAQD,EAAO/M,OAAS,GAC1BiN,EAASD,EAAQ,UF6F3BI,CAAW,CACT,WACE3O,OAAO4O,MAAM,gBAEf,WACE5O,OAAO4O,MAAM,oBAIjB,IAAMC,EAAkB,SACtBlN,EACAG,EACAkF,EACAL,GAEIhF,EACEmN,EAAc/O,SAChB+O,EAAc/O,QAAQ+F,QAGpBiJ,EAAehP,SACjBgP,EAAehP,QAAQ+F,QAGvBa,EAAKF,SACPqH,GAAY1H,OAEVtE,GAIFuM,EAAW,2BAAK/N,GAAN,IAAeG,IAAKoG,GAAMpG,OAEtC0N,EAAa3H,EAAY,IAGrBY,EAAO,WAAO,IAAD,EAC2BsG,GAAKtG,OAAzCzF,EADS,EACTA,OAAQG,EADC,EACDA,KAAmB6E,GADlB,EACKK,YADL,EACkBL,MACnCkI,EAAgBlN,EAAQG,EAAMkF,EAAaL,IAGvCqI,EAAgB,SAACP,GACrB,GAAkB,KAAdA,EAAEC,QAAgB,CAEpBD,EAAEQ,iBAFkB,MAGgBvB,GAAKlG,gBAAgB,GAAjD1F,EAHY,EAGZA,KAAmB6E,GAHP,EAGNK,YAHM,EAGOL,MAC3BkI,EAAgB,EAAG/M,EAAMkF,EAAaL,GAExC,GAAkB,KAAd8H,EAAEC,QAAgB,CAEpBD,EAAEQ,iBAFkB,MAGgBvB,GAAKlG,gBAAgB,GAAjD1F,EAHY,EAGZA,KAAmB6E,GAHP,EAGNK,YAHM,EAGOL,MAC3BkI,EAAgB,EAAG/M,EAAMkF,EAAaL,KAkE1C,GA1DAnB,IAAM2H,WAAU,WACd,IAAMzF,EAAS9H,EAAUG,QACnBG,EAAMwH,GAAUA,EAAOvH,WAAW,MACpCwH,EAAK9H,OAAS8H,EAAK7H,QACrBH,EAAaC,EAAW+H,EAAK9H,MAAO8H,EAAK7H,QAG3CoO,EAASnO,QAAU,IAAI0H,GAAMC,EAAQxH,EAAKyH,EAAM,CAC9CkG,GACAD,GACAG,GACAD,GACAH,KAKFO,EAASnO,QAAQ+H,WAChB,CAACH,IAEJnC,IAAM2H,WAAU,WACdO,GAAKxG,UACJ,IAEH1B,IAAM2H,WAAU,WAEd,OADA+B,SAAS7B,iBAAiB,UAAW2B,GAC9B,WACLE,SAAS5B,oBAAoB,UAAW0B,OAIxC1O,EAAQ8N,UACVpO,OAAON,WAAW0H,EAAM,KAG1BP,GAAMtG,MAAQD,EAAQC,MACtBsG,GAAMrG,GAAKF,EAAQE,GACnBqG,GAAMpG,IAAMH,EAAQG,IACpBoG,GAAMnG,SAAWJ,EAAQI,SAErBiH,EAAK9H,OAAS8H,EAAK7H,QACrBH,EAAaC,EAAW+H,EAAK9H,MAAO8H,EAAK7H,QAG3CgO,GAAYqB,KAAK3B,GAAeI,GAAU1E,OAASwE,GAAKxM,OAAS,GAAK,IAEtElB,OAAON,YAAW,WACZmH,GAAMlG,QACRoN,GAAYnN,WAAW1B,EAAU2H,GAAMlG,WAExC,KAEHX,OAAON,YAAW,WAChBiO,GAAmBvB,UAAUsB,GAAK1G,eACjC,KAGH6G,GAAYuB,QACR1B,GAAK3G,WAMP,IALA,IAAMsI,EACgB,IAApB3B,GAAK3G,WACDyG,GAAe,EAAII,GAAU1E,KAC7BsE,GAAe,EAAII,GAAU1E,KAE1B3K,EAAI,EAAGA,EAAImP,GAAK3G,WAAYxI,IAAK,CACxC,IAAM+Q,EAAwB,EAAhBjO,KAAKC,SAAeD,KAAKwH,GAEvCgF,GAAY0B,KACV,CAAEjR,EAAG+Q,EAAQlK,EAAGqI,IAChB,CACElP,EAAGkP,GAJQ,GAIgBnM,KAAKmO,IAAIF,GACpCnK,EAAGqI,GAAY,GALJ,GAKkBnM,KAAKoO,IAAIH,IAExC,IAAU,GAAJ/Q,GAKRsI,GAAMjG,aACRmN,GAAY2B,eAAe,CACzB,CACE3Q,IAAK8H,GAAMjG,WAAWe,OACtB6K,IAAK3F,GAAMjG,WAAWM,MACtB+C,MAAOZ,EAAuBrB,UAEhC,CACEjD,IAAK8H,GAAMjG,WAAWmB,WACtByK,IAAK3F,GAAMjG,WAAWgB,SACtBqC,MAAOZ,EAAuBpB,SAIlC2L,GAAU+B,gBAAgB,CACxB,CACE9F,MAAOhD,GAAMjG,WAAWM,MACxB+C,MAAOZ,EAAuBnC,OAEhC,CACE2I,MAAOhD,GAAMjG,WAAWgB,SACxBqC,MAAOZ,EAAuBJ,cAKpC,IAAM8L,EAAiBvJ,IAAMI,OAAsB,MAC7CkJ,EAAgBtJ,IAAMI,OAAsB,MAElD,OACE,kBAACoI,GAAD,KACE,kBAAC,IAAD,CAAQxJ,KAAMlE,EAASsP,SAjHN,SAACpL,GACpB6J,EAAW7J,KAiHP,kBAAC,YAAD,CACEqL,KAAK,KACLC,MAAM,yBACN3O,IAAK,EACLC,IAAK,EACLgG,KAAM,MAER,kBAAC,YAAD,CACEyI,KAAK,MACLC,MAAM,sBACN3O,IAAK,EACLC,IAAK,EACLgG,KAAM,MAER,kBAAC,YAAD,CACEyI,KAAK,QACLC,MAAM,yBACN3O,IAAK,EACLC,IAAK,EACLgG,KAAM,MAER,kBAAC,YAAD,CACEyI,KAAK,WACLC,MAAM,eACN3O,IAAK,EACLC,IAAK,EACLgG,KAAM,MAER,kBAAC,aAAD,CAAYyI,KAAK,WAAWC,MAAM,cAClC,kBAAC,YAAD,CAAWA,MAAM,OAAO7J,QAASmB,KAEnC,4BACErC,MAAO,CACLlF,MAAO,OACPC,OAAQ,OACRiQ,WAAY,SAEdrK,IAAK9F,IAEP,kBAAC,GAAD,CACEgB,WAAYiG,GAAMjG,WAClBoE,SAAU,CACR1G,EAAGkP,GAAwC,EAAzBO,GAAYjC,WAAiB,GAC/C3G,EAAG4I,GAAY/I,SAASG,EAA8B,EAA1B4I,GAAYhC,YAAkB,MAG9D,kBAAC,GAAD,CACErG,IAAKqJ,EACLlL,WAAYS,GACVuC,GAAMjG,YAA0C,IAA5BiG,GAAMjG,WAAWe,OACjC0B,EAAuB1B,OACvBkF,GAAMjG,YAA8C,IAAhCiG,GAAMjG,WAAWmB,WACrCsB,EAAuBtB,WACvBsB,EACJc,OAAOC,IANa,QAAD,mDAQrBY,SAAU,CACR1G,EAAGkP,GAAwC,EAAzBO,GAAYjC,WAAiB,GAC/C3G,EAAG4I,GAAY/I,SAASG,EAAI,IAE9Bc,QAAS,WAAO,IAAD,EACuByH,GAAKlG,gBAAgB,GAAjD1F,EADK,EACLA,KAAmB6E,GADd,EACCK,YADD,EACcL,MAC3BkI,EAAgB,EAAG/M,EAAMkF,EAAaL,MAG1C,kBAAC,GAAD,CACEjB,IAAKoJ,EACLjL,WAAYS,GACVuC,GAAMjG,YAA0C,IAA5BiG,GAAMjG,WAAWe,OACjC0B,EAAuB1B,OACvBkF,GAAMjG,YAA8C,IAAhCiG,GAAMjG,WAAWmB,WACrCsB,EAAuBtB,WACvBsB,EACJc,OAAOC,IANa,QAAD,iDAQrBY,SAAU,CACR1G,EAAGkP,GAAwC,EAAzBO,GAAYjC,WAAiB,GAC/C3G,EAAG4I,GAAY/I,SAASG,EAA8B,EAA1B4I,GAAYhC,YAAkB,IAE5D9F,QAAS,WAAO,IAAD,EACuByH,GAAKlG,gBAAgB,GAAjD1F,EADK,EACLA,KAAmB6E,GADd,EACCK,YADD,EACcL,MAC3BkI,EAAgB,EAAG/M,EAAMkF,EAAaL,Q,yDGlW3BqJ,G,WAQnB,aAA8D,IAAlDC,EAAiD,uDAArC,EAAGC,EAAkC,uDAArB,EAAGC,EAAkB,wDAAH,EAAG,yBAP7DF,eAO6D,OAN7DC,gBAM6D,OAL7DC,iBAK6D,OAH7DC,YAG6D,OAF7DC,UAE6D,EAC3DxP,KAAKoP,UAAYA,EACjBpP,KAAKqP,WAAaA,EAClBrP,KAAKsP,YAAcA,EAEnBtP,KAAKqG,Q,gDAGP,WACE,OAMgB,IALdrG,KAAKuP,OACFE,OAAOzP,KAAKuP,OAAOG,MAAM,IACzBC,MAAM3P,KAAKwP,MACXI,MACAC,aACAC,IAAI,K,+BAIX,WACE,IAAMC,EAAS/P,KAAKuP,OAAOM,aACrBpS,EAAIsS,EAAOD,IAAI9P,KAAKuP,OAAOG,MAAM,GAAK,EAAG,GACzCpL,EAAIyL,EAAOD,IAAI9P,KAAKuP,OAAOG,MAAM,GAAK,EAAG,GACzCM,IACJ,GAAKvS,GACLA,EAAIuC,KAAKoP,WACT,GAAK9K,GACLA,EAAItE,KAAKoP,WAKX,OAHIY,GACFpP,QAAQiF,IAAI,4BAEPmK,I,8BAGT,WAAoB,IAAD,EACIC,KAASjQ,KAAKuP,OAAQ,CAACvP,KAAKuP,OAAOG,MAAM,GAAK,EAAG,IADrD,mBACVQ,EADU,KACJC,EADI,KAEXC,EACsD,IAA1DH,KAAOC,EAAKP,MAAMQ,GAAO,GAAG5P,MAAMsP,aAAaC,IAAI,GAIrD,OAHIM,GACFxP,QAAQiF,IAAI,4BAEPuK,I,kBAGT,SAAKtP,GACW,MAAVA,GACFF,QAAQiF,IAAI,2CAA4C/E,GAG1D,IAAMuP,EAAkBrQ,KAAKuP,OAAOE,OAAOzP,KAAKuP,OAAOG,MAAM,GAAK,GAE5DY,EAAkB,CACtBL,KAAY,CAAC,GAAI,IACjBA,KAAY,CAAC,EAAG,IAChBA,KAAY,CAAC,EAAG,IAChBA,KAAY,EAAE,EAAG,KAGbM,EAA2BF,EAAgB5G,IAC/C6G,EAAgBxP,IAGlBd,KAAKuP,OAASvP,KAAKuP,OAAOiB,OAAOD,EAAYE,QAAQ,CAAC,EAAG,KAEzD,IAAIzP,EAAS,EAEb,GAAIhB,KAAK0Q,eACP1P,EAAShB,KAAKqP,WACdrP,KAAK2Q,oBACA,CAAC,IAAD,EACkBV,KAASjQ,KAAKuP,OAAQ,CAC3C,EACAvP,KAAKuP,OAAOG,MAAM,GAAK,IAFhBkB,EADJ,oBAKL5Q,KAAKuP,OAASqB,EAGhB,IAAI3P,GAAO,EAMX,OALIjB,KAAK6Q,qBAAuB7Q,KAAKoQ,sBACnCnP,GAAO,EACPD,EAAShB,KAAKsP,aAGZrO,EACK,CACL6P,eAAgBb,KAAS,CAACjQ,KAAKoP,UAAWpP,KAAKoP,UAAW,IAC1DpO,SACAC,QAIG,CACL6P,eAAgB9Q,KAAK+Q,iBACrB/P,SACAC,U,4BAIJ,WACE,IAAM+P,EAAYhR,KAAKwP,KAAKyB,UAAUT,OAAOP,KAAY,CAAC,KACpDiB,EAAgBlR,KAAKuP,OAAO0B,QAAQ,GAAGT,OAC3CP,KACQ,CAACjQ,KAAKuP,OAAOG,MAAM,GAAK,GAAI,GACjCc,OAAOP,KAAY,CAAC,KACpBQ,QAAQ,CAACzQ,KAAKuP,OAAOG,MAAM,GAAI,IAClC,GAEIyB,EAAUH,EAAUP,QAAQ,CAAC,EAAG,IAAID,OAAOU,GAC3CE,EAASnB,KACH,CAAC,IACVO,OAAOP,KAAS,EAAGjQ,KAAKuP,OAAOG,MAAM,KACrCc,OAAOP,KAAY,CAAC,KACvB,OAAOA,KAAakB,EAASC,EAAQ,CAACpR,KAAKoP,UAAWpP,KAAKoP,UAAW,M,2BAGxE,WACE,KACEpP,KAAKwP,KAAOS,KAAiB,CAAC,GAAI,EAAGjQ,KAAKoP,UAAW,SAEmB,IAAtEa,KAAOjQ,KAAKuP,OAAOI,MAAM3P,KAAKwP,MAAO,GAAGjP,MAAMsP,aAAaC,IAAI,Q,mBAOrE,WAGE,OAFA9P,KAAKuP,OAASU,KAAiB,CAAC,EAAG,GAAI,EAAGjQ,KAAKoP,UAAW,SAC1DpP,KAAK2Q,gBACE3Q,KAAK+Q,qB,cCpIVM,GAAmB/O,IAAOC,IAAV,ggBAeFT,EAAIwP,WAAW,IAAK9N,MAIpB9B,EAAM4P,WAAW,IAAK9N,MAM1B,IAAM,EAGP,IAAM,GAKfvD,GAAM,IAAIkP,GACVoC,GAAMtR,GAAI8Q,iBAEVS,GAAe,CACnBC,aAAa,EACbC,cAAc,EACdC,eAAe,GAiKFC,GA9JiB,SAAClP,GAAW,IAAD,EACHiC,IAAMwH,SAASoF,IADZ,mBAClCM,EADkC,KACrBC,EADqB,OAEHnN,IAAMwH,SAAS,GAFZ,mBAElChG,EAFkC,KAErB4L,EAFqB,cAK1BC,EAL0B,0FAKzC,WACEC,EACAV,EACAzQ,EACAoR,EACAlR,EACAC,GANF,sBAAApD,EAAA,0DAWM2T,GAAaG,cAXnB,wDAcEH,GAAaG,eAAgB,EAEvBQ,EAAaF,EAAMG,QAAQb,EAAId,QAAQ,CAAC,EAAG,EAAG,EAAG,KACjD4B,EAAuBJ,EAAMG,QACjCF,EAAOzB,QAAQ,CAAC,EAAG,EAAG,EAAG,KAErB6B,EACJtR,GACCC,EAAO,EAAI,IAAQoR,EAAqB9R,MAAMgS,cAC3CtD,EAAQkD,EAAWtC,cACnB2C,IAAIF,EAAmB,EAAGxR,GAxBlC,UAyBQmR,EAAMQ,IAAIlB,EAAId,QAAQ,CAAC,EAAG,EAAG,EAAG,IAAKxB,EAAMyD,WAAY,CAC3DC,OAAQ,IA1BZ,QA6BEnB,GAAaG,eAAgB,EA7B/B,6CALyC,sBAGzC/Q,QAAQiF,IAAI,gBAAiBM,GAkC7BxB,IAAM2H,WAAU,WAAO,SACNsG,EADK,gFACpB,WAAwBX,GAAxB,wBAAApU,EAAA,sDACWH,EAAI,EADf,OAEQuD,GAAO,EACPsQ,OAHR,EAKMA,EADQ,IAAN7T,EACIuC,GAAI8Q,iBAEJ9Q,GAAIoG,QAPhB,KAAAxI,EAAA,6CAAAA,EAAA,0DAUU2T,GAAaC,YAVvB,mEAaYU,EAAaF,EAAMG,QACvBb,EAAId,QAAQ,CAAC,EAAG,EAAG,EAAG,KAGV,OADR3P,EAAUqR,EAAW7U,OAAO,GAAGiV,YAAyB,MAI5D3R,QAAQiF,IAAI,2CAA4C/E,GACxDF,QAAQiF,IAAI,gBACZ0L,EAAIsB,QACJjS,QAAQiF,IAAI,eACZsM,EAAWU,QACXjS,QAAQiF,IAAI,WACZjF,QAAQiF,IAAIsM,EAAW7U,OAAO,KA1BtC,EA4BwD2C,GAAIsG,KAAKzF,GAAnDgQ,EA5Bd,EA4BcA,eAAgB9P,EA5B9B,EA4B8BA,OAAc8R,EA5B5C,EA4BsC7R,KAChC6Q,EAAehB,GACfiB,GAAe,SAAC5L,GAAD,OAAiBA,EAAcnF,KA9BpD,UAgCYgR,EAAYC,EAAOV,EAAKzQ,EAAQgQ,EAAgB9P,EAAQC,GAhCpE,eAkCMA,EAAO6R,EACPvB,EAAMT,EAnCZ,UAoCYrS,EAAM,KApClB,qDASYwC,EATZ,sKACoBvD,IADpB,4DADoB,sBA0CpB,IAAMqV,EAAoBxU,aAAW,SAAC0T,GACpCT,GAAaC,aAAc,EAC3BD,GAAaE,cAAe,EAC5BkB,EAASX,KACR,KAEHhC,KAAmB,4BAA4B+C,MAAK,SAACf,GACnDA,EAAMgB,QAAQ,CAAEC,UAAW,OAAQC,KAAM,qBACzCP,EAASX,GAIT9S,OAAOqN,iBAAiB,WAAW,SAACoB,GAClC,IAAI4D,GAAaE,aAAjB,CAGA,IAAMH,EAAMtR,GAAI8Q,iBACVqC,EAA4C,CAChDC,QAAS,EACTC,WAAY,EACZC,UAAW,EACXC,UAAW,GAEb,GAAM5F,EAAE6F,OAAOL,EAAf,CAGA,IAAMtS,EAASsS,EAAexF,EAAE6F,KAdQ,EAeUxT,GAAIsG,KAAKzF,GAAnDgQ,EAfgC,EAehCA,eAAgB9P,EAfgB,EAehBA,OAAc8R,EAfE,EAeR7R,KAChC6Q,EAAehB,GACfU,GAAaC,aAAc,EAE3BO,EAAYC,EAAOV,EAAKzQ,EAAQgQ,EAAgB9P,EAAQ8R,GAEpDA,IACFtB,GAAaE,cAAe,EAC5BzR,GAAIoG,SAGN0M,EAAkBd,aAGrB,IAEH,IAAMyB,EAAW7B,EAAYU,YAE7B,OACE,kBAAClB,GAAD,KACGqC,EAASlW,KAAI,SAACU,EAAKR,GAAN,OACZ,yBAAKiW,UAAU,MAAMF,IAAK/V,GACvBQ,EAAIV,KAAI,SAACkO,EAAMhO,GACd,IAAM8R,EAAmB,IAAZ9D,EAAK,GACZkI,EAAoB,IAAZlI,EAAK,GACbwE,EAAOxE,EAAK,GAAK,EACvB,OACE,yBACE+H,IAAK/V,EACLiW,UAAWE,KAAW,OAAQ,CAC5BrE,OACAoE,QACA1D,SAEFhM,MAAO,CACLqF,QAASiG,EACL,GACAoE,EACA,GACA1D,EACA,GAAO,IAAOxE,EAAK,GAAK,IAAOzL,GAAIsP,OAAOG,MAAM,GAAK,GACrD,cCjMhBoE,GAAcxR,IAAOC,IAAV,irBAsCXwR,GAAqBzR,IAAOC,IAAV,sGAmETyR,GAtDY,SAACtR,GAC1B9B,QAAQiF,IAAI,QAASnD,GAErB,IAAMuR,EAAmC,CACvCL,MAAO,CACL1E,WAAY,kBAAC,GAAD,MACZgF,KAAM,oCACNC,KAAM,sBAQNC,EAA0B,KAI9B,GAHIjV,OAAOkV,SAASC,OAClBF,EAAWjV,OAAOkV,SAASC,KAAKC,OAAO,KAEpCH,KAAcA,KAAYH,GAAS,CACtC,IAAMO,EAAUC,OAAOC,KAAKT,GAC5BG,EAAWI,EAAQhU,KAAKG,MAAMH,KAAKC,SAAW+T,EAAQ9T,SAExD,IAAMiU,EAAQV,EAAOG,GAErB,OACE,kBAACN,GAAD,KACE,kBAACC,GAAD,KAAqBY,EAAMzF,YAC3B,yBAAKyE,UAAU,OACb,8CACA,mDACwB,IACtB,uBAAGiB,KAAK,sBAAR,oBAFF,iHAI0B,IACxB,uBAAGA,KAAK,6BAAR,WALF,kGASA,gHAKF,yBAAKjB,UAAU,UACb,0CACA,2BACE,uBAAGiB,KAAMD,EAAMT,MAAOS,EAAMR,U,sCJ3FhCU,GAAqC,CACzC,CACE,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,CACE,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,EAAE,EAAG,IAEP,CACE,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IAEN,CACE,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,GAAI,GACL,EAAE,EAAG,GACL,EAAE,GAAI,KA2FJC,GAAa,CACjB,CACE1R,MAAO1B,EACPqT,MAAO,CA7CwB,CACjC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,KA0CFC,QAASH,IAEX,CACEzR,MAAOtB,EACPiT,MAAO,CAzDwB,CACjC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,KAsDFC,QAASH,IAEX,CACEzR,MAAOvB,EACPkT,MAAO,CAhDwB,CACjC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,KA6CFC,QAASH,IAEX,CACEzR,MAAOlB,EACP6S,MAAO,CA9CwB,CACjC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,KA2CFC,QAASH,IAEX,CACEzR,MAAOrB,EACPgT,MAAO,CA5CwB,CACjC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,KAyCFC,QAASH,IAEX,CACEzR,MAAOpB,EACP+S,MAAO,CA1CwB,CACjC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,KAuCFC,QApHmC,CACrC,CAAC,CAAC,EAAG,IACL,CAAC,CAAC,EAAG,IACL,CAAC,CAAC,GAAI,IACN,CAAC,CAAC,GAAI,MAkHN,CACE5R,MAAOxB,EACPmT,MAAO,CAxCwB,CACjC,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,KAqCFC,QAlHmC,CACrC,CACE,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,EAAG,IAEN,CACE,CAAC,GAAI,GACL,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,CAAC,EAAG,IAEN,CACE,EAAE,GAAI,GACN,EAAE,EAAG,GACL,EAAE,GAAI,GACN,CAAC,EAAG,GACJ,CAAC,GAAI,IAEP,CACE,EAAE,EAAG,GACL,EAAE,EAAG,GACL,EAAE,EAAG,GACL,CAAC,EAAG,GACJ,EAAE,EAAG,OA2FHC,GAAe,SAACC,EAA4BpO,GAChD,IADiE,EAC3DqO,EAA6B,GAD8B,eAE7CD,GAF6C,IAEjE,2BAA4B,CAAC,IAAlBE,EAAiB,QAC1BD,EAAOhX,KAAK,CAACiX,EAAM,GAAItO,EAAOsO,EAAM,GAAK,KAHsB,8BAKjE,OAAOD,GAGAE,GAAO,EAAGA,GAAO,EAAGA,KAE3B,IADA,IAAMC,GAAYR,GAAWO,GAAO,GAC3B3X,GAAI,EAAGA,GAAI,EAAGA,KACrB4X,GAAUP,MAAM5W,KAAK8W,GAAaK,GAAUP,MAAMrX,IAAI,IAInD,I,GAIM6X,GAAW,SAACF,EAAYG,GACnC,OAAOV,GAAWO,EAAO,GAAGN,MAAMS,IAOvBC,GAAWC,MAJN,SAACL,GAAmC,IAAvBM,EAAsB,uDAAN,EAC7C,OAAOb,GAAWO,EAAO,GAAGjS,MAAMuS,MAAMA,GAAOlT,aAGN,CAAE/B,OAAQ,IK1LxCkV,GAAb,iDACEC,mBAAqBC,GADvB,KAEEC,mBAAqB,GAFvB,KAKEC,QAAU,IAAI7M,IALhB,KAME8M,UAAY,EANd,KAOEC,WAAa,EAPf,KAQEC,SAAW,EARb,KASEC,mBATF,OAYEC,KAA4B,GAZ9B,KAaEC,WAAa,EAbf,KAcEC,mBAAqB,EAdvB,KAeEC,QAAU,EAfZ,oDAiBE,SAAiBjW,GACfP,KAAKoW,cAAgB7V,IAlBzB,2BAqBE,SAAcvB,GAA8B,IAAfyX,EAAc,uDAAH,EACtCzW,KAAKsW,WAAatX,EACD,IAAbyX,EACFzW,KAAKuW,mBAAqBvX,EAE1B,IAAIuI,KAAMI,MAAM3H,MACb4H,GAAG,CAAE2O,mBAAoBvX,GAASyX,GAClC/M,OAAOnC,KAAMoC,OAAO+M,UAAUC,OAC9B9O,UA7BT,kCAuCE,SAAqB+O,GAOnB,IAPyD,IAAlBC,EAAiB,wDAClDC,EAAY9W,KAAK+W,eAGnBC,EAAiB,EACjBC,EAAS,EACTC,EAAW,IACF,CAGX,IAAMC,GAFNH,EACEF,GAAaI,GAAYA,EAAW,GAAKlX,KAAK+V,qBACX/V,KAAK6V,mBACpCuB,EAAcJ,EAAiBhX,KAAK+V,mBAK1C,IAJAkB,EAASzW,KAAKG,OACXX,KAAKkW,WAAakB,IAAgBD,EAAcC,KAGtCF,GAAY1W,KAAK6W,KAAKT,EAAa,GAC9C,MAGFM,IAOF,IAHA,IAoBII,EACAC,EACAC,EAtBAC,EAAkB,EAClBC,EAAS,EACT3Z,EAAO,IACE,CAIX,IAAMuY,GAHNmB,EACEzX,KAAKkW,YACJnY,GAAQA,EAAO,GAAKiC,KAAK6V,mBAAqB7V,KAAK+V,qBACjB/V,KAAK6V,mBACpCuB,EAAcd,EAAatW,KAAK+V,mBAKtC,IAJA2B,EAASlX,KAAKG,OACXmW,EAAYM,IAAgBd,EAAac,KAG/BrZ,GAAQyC,KAAK6W,KAAKT,EAAa,GAC1C,MAGF7Y,IAOF,IAAM4Z,EAAiBF,EAAkBzX,KAAK6V,mBAuB9C,OAtBI8B,EAAiBX,GACnBM,EAAiBK,EACjBJ,EAAexZ,EAEbyZ,EADEX,EACgD,EAAnCrW,KAAK6W,KAAKT,EAAa7Y,EAAO,GAErB,EAAT2Z,IAGjBJ,EAAiBN,EAEfO,EADEV,EACaI,EAEAzW,KAAK6W,KAAKT,GAAyB,EAAXM,IAEzCM,EAA0B,EAAXN,GAGblX,KAAKoW,eAAiBkB,EAAiBtX,KAAKoW,gBAC9CkB,EAAiBtX,KAAKoW,eAGjB,CAACkB,EAAgBC,EAAcC,KA9G1C,qBAoHE,SAAQI,GACNhX,QAAQiF,IAAI,aADmB,MAEE7F,KAAK6X,qBAAqBD,EAAW9Q,MAFvC,mBAExBwP,EAFwB,KAEZvY,EAFY,KAENC,EAFM,KAG/BgC,KAAK8X,cAAcxB,GACnBtW,KAAKqW,KAAOvY,EAAuBC,EAAMC,EAAM,MAC/CgC,KAAKgW,QAAU,IAAI7M,IACnBnJ,KAAK+X,cAAcH,KA1HvB,6BA6HE,WACE,OAA4B,IAArB5X,KAAKqW,KAAK3V,OAAe,EAAIV,KAAKqW,KAAK3V,OAASV,KAAKqW,KAAK,GAAG3V,SA9HxE,oBAkIE,SAAOkW,GACLhW,QAAQiF,IAAI,aAGZ,IAJyB,MAEQ7F,KAAK6X,qBAAqBjB,GAFlC,mBAElBN,EAFkB,KAENvY,EAFM,KAEAC,EAFA,KAGnBga,EAAUla,EAAuBC,EAAMC,EAAM,MAC1CN,EAAI,EAAGA,EAAIsC,KAAKqW,KAAK3V,OAAQhD,IACpC,IAAK,IAAIc,EAAI,EAAGA,EAAIwB,KAAKqW,KAAK3Y,GAAGgD,OAAQlC,IAAK,CAC5C,IAAMyZ,GAAUja,EAAOgC,KAAKqW,KAAK,GAAG3V,QAAU,EAC9CsX,EAAQta,GAAGc,EAAIyZ,GAAUjY,KAAKqW,KAAK3Y,GAAGc,GAG1CwB,KAAK8X,cAAcxB,EAAY,MAC/BtW,KAAKqW,KAAO2B,IA7IhB,4BAgJE,WACE,OAAOhY,KAAKsW,WAAatW,KAAK+V,qBAjJlC,sCAqJE,WACE,GAAyB,IAArB/V,KAAKqW,KAAK3V,OACZ,OAAO,EAGT,IAAI1C,EAAOgC,KAAKqW,KAAK,GAAG3V,OAAS,EACjCwX,EAAmB,IAAK,IAAI1Z,EAAI,EAAGA,EAAIwB,KAAKqW,KAAK,GAAG3V,OAAS,EAAGlC,IAAK,CACnE,IAAK,IAAId,EAAI,EAAGA,EAAIsC,KAAKqW,KAAK3V,OAAQhD,IACpC,GACqB,MAAnBsC,KAAKqW,KAAK3Y,GAAGc,IACgC,MAA7CwB,KAAKqW,KAAK3Y,GAAGsC,KAAKqW,KAAK3Y,GAAGgD,OAAS,EAAIlC,GAEvC,MAAM0Z,EAGVla,IAGF,OAAOgC,KAAKsW,WAAatY,EAAOgC,KAAKmY,kBAAoBna,EAAO,KAvKpE,mCA0KE,WACE,IAAID,EAAOiC,KAAKqW,KAAK3V,OACrB0X,EAAmB,IAAK,IAAI1a,EAAIsC,KAAKqW,KAAK3V,OAAS,EAAGhD,EAAI,EAAGA,IAAK,CAChE,IAAK,IAAIc,EAAI,EAAGA,EAAIwB,KAAKqW,KAAK3Y,GAAGgD,OAAQlC,IACvC,GAAuB,MAAnBwB,KAAKqW,KAAK3Y,GAAGc,GACf,MAAM4Z,EAGVra,IAGF,OACGiC,KAAKsW,WAAatW,KAAK6V,mBAAsB9X,EAC9CiC,KAAKmY,kBAAoBpa,EAAO,KAvLtC,0BA2LE,WACE,OAAQiC,KAAKiW,UAAYjW,KAAKmW,UAAY,IA5L9C,2BA+LE,WAA6B,IAAfM,EAAc,uDAAH,EACjB4B,EAAiBrY,KAAKsY,wBACtB9B,GAAWxW,KAAKkW,WAAamC,GAAkB,EACpC,IAAb5B,EACFzW,KAAKwW,QAAUA,EAEf,IAAIjP,KAAMI,MAAM3H,MACb4H,GAAG,CAAE4O,WAAWC,GAChB/M,OAAOnC,KAAMoC,OAAO+M,UAAUC,OAC9B9O,UAxMT,kCA4ME,SAAqB+P,GACnB,IAAK,IAAIla,KAAKsC,KAAKqW,KACjB,IAAK,IAAI7X,KAAKwB,KAAKqW,KAAK3Y,GAAI,CAC1B,IAAM6a,EAAQvY,KAAKqW,KAAK3Y,GAAGc,GACd,MAAT+Z,GAAkBX,EAAWY,IAAID,KACnCvY,KAAKqW,KAAK3Y,GAAGc,GAAK,SAjN5B,2BAuNE,SAAcoZ,GACZ,IAAMa,EAAMzY,KAAK0Y,UACbtD,EAAQqD,EAAIE,OAAOC,MACvBhY,QAAQC,MAAM,2BAA4BtC,aAAYyB,KAAKqW,OAC3DzV,QAAQC,MAAM,UAAWb,KAAKgW,QAAS4B,GAJF,qBAKnBA,GALmB,IAKrC,2BAA8B,CAAC,IAAtBW,EAAqB,QAC5B,IAAKvY,KAAKgW,QAAQwC,IAAID,GAAQ,CAC5B,KAAwC,MAAjCvY,KAAKqW,KAAKjB,EAAM,IAAIA,EAAM,KAC/BA,EAAQqD,EAAIE,OAAOC,MACnBhY,QAAQC,MAAM,YAAauU,GAE7BpV,KAAKqW,KAAKjB,EAAM,IAAIA,EAAM,IAAMmD,IAXC,iCAvNzC,iCAuOE,WAAUM,GAAV,mFAC2B,IAArB7Y,KAAKqW,KAAK3V,OADhB,iDAOIoY,EADW,SAATD,EACO7Y,KAAKqW,KAAK,GAAG3V,OAAS,EAAI,EAE1BV,KAAKqW,KAAK,GAAG3V,OAAS,EAExB9C,EAAI,EAXf,YAWkBA,EAAI4C,KAAKD,IAAIP,KAAKqW,KAAK3V,OAAQV,KAAKqW,KAAK,GAAG3V,SAX9D,oBAYQqY,OAZR,KAcMA,EADW,SAATF,EACK7Y,KAAKqW,KAAK,GAAG3V,OAAS,EAAI,EAAI9C,EAE9BoC,KAAKqW,KAAK,GAAG3V,OAAS,EAAI9C,IAIvB,GAAKmb,EAAO/Y,KAAKqW,KAAK,GAAG3V,QApBzC,iBAqBehD,EAAI,EArBnB,YAqBsBA,EAAIE,GArB1B,sBAsBYF,EAAIsC,KAAKqW,KAAK3V,QAtB1B,iBAuBU,OAvBV,UAuBgB,CAAChD,EAAGqb,GAvBpB,QAqB6Brb,IArB7B,4BA6BQE,EAAIoC,KAAKqW,KAAK3V,QA7BtB,iBA+BYlC,EAAIsa,EA/BhB,aAgCiB,SAATD,EAAkBra,GAAKua,EAAOva,GAAKua,GAhC3C,sBAmCYva,GAAK,GAAKA,EAAIwB,KAAKqW,KAAK,GAAG3V,QAnCvC,iBAoCU,OApCV,UAoCgB,CAAC9C,EAAGY,GApCpB,QAiCQA,GAAc,SAATqa,GAAmB,EAAI,EAjCpC,wBAWuEjb,IAXvE,gEAvOF,gCAkRE,6FACQwG,EAAOpE,KAAKgZ,SAAS,QACrBC,EAAQjZ,KAAKgZ,SAAS,SAF9B,eAGkB5U,GAHlB,yDAII,OADS8U,EAHb,iBAIUA,EAJV,OAKI,OALJ,UAKUD,EAAMN,OAAOC,MALvB,uMAlRF,oBA8RE,SACEhB,EACA3B,EACAC,EACAC,GAMA,GAJAvV,QAAQiF,IAAI,OAAQ7F,KAAKqW,MAEzBrW,KAAKmW,SAAWA,EAEZF,IAAcjW,KAAKiW,WAAaC,IAAelW,KAAKkW,WAMtD,OALAlW,KAAKiW,UAAYA,EACjBjW,KAAKkW,WAAaA,EAClBlW,KAAKyQ,QAAQmH,GACb5X,KAAKmZ,qBACLnZ,KAAKgW,QAAU4B,GAIbrZ,WAAUyB,KAAKgW,QAAS4B,KAI5B5X,KAAKoZ,qBAAqBxB,GAEtBA,EAAW9Q,KAAO9G,KAAKqZ,mBACzBrZ,KAAKsZ,OAAO1B,EAAW9Q,MAGzB9G,KAAK+X,cAAcH,GAEnB5X,KAAKmZ,cAAoC,IAAtBnZ,KAAKgW,QAAQlP,KAAa,EAAI,KAEjD9G,KAAKgW,QAAU4B,KA/TnB,iCAkUE,WAIE,IAHA,IAAM2B,EAA2C,GAC3CC,EAAUxZ,KAAKiW,UAAY,EAExBvY,EAAI,EAAGA,EAAIsC,KAAKqW,KAAK3V,OAAQhD,IACpC,IAAK,IAAIc,EAAI,EAAGA,EAAIwB,KAAKqW,KAAK3Y,GAAGgD,OAAQlC,IAAK,CAC5C,IAAM+Z,EAAQvY,KAAKqW,KAAK3Y,GAAGc,GAC3B,GAAa,MAAT+Z,EAAe,CACjB,IAAI9a,OAAS,EACb,GAAIe,GAAKwB,KAAKqW,KAAK3Y,GAAGgD,OAAS,EAAG,CAChC,IAAM+Y,EAAYjb,EAAIwB,KAAKqW,KAAK3Y,GAAGgD,OAAS,EAC5CjD,EACE+b,EACAxZ,KAAKmW,SAAW,EAChBsD,EAAYzZ,KAAKuW,oBAChBkD,EAAY,GAAKzZ,KAAKmY,qBACpB,CACL,IAAMuB,EAAW1Z,KAAKqW,KAAK3Y,GAAGgD,OAAS,EAAI,EAAIlC,EAC/Cf,EACE+b,EACAxZ,KAAKmW,SAAW,GACfuD,EAAW,IACT1Z,KAAKuW,mBAAqBvW,KAAKmY,kBAEtC,IAAM7T,EACJtE,KAAKwW,QACL9Y,GAAKsC,KAAKuW,mBAAqBvW,KAAK6V,qBACnCnY,EAAI,GAAKsC,KAAKmY,iBACjBoB,EAAYhB,GAAS,CAAC9a,EAAG6G,IAI/B,MAAO,CAACiV,EAAavZ,KAAKuW,wBAlW9B,KCKMoD,GAAY,SAAC9b,EAAqB+b,GAEtC,MADiC,CAAC/b,EAAE,GAAK+b,EAAE,GAAI/b,EAAE,GAAK+b,EAAE,KAIpDC,GAAY,SAACC,EAA0BC,GAC3C,OAAO,2BACFD,GADL,IAEE3V,SAAUwV,GAAUG,EAAY3V,SAAU4V,MAIxCC,GAAyB,SAC7BF,EACAG,GAEA,IADG,EACGlF,EAAQQ,GAASuE,EAAYI,UAAWJ,EAAYtE,aADvD,eAGiBT,GAHjB,IAGH,2BAA2B,CAAC,IAAjBK,EAAgB,QACnB+E,EAAMR,GAAUG,EAAY3V,SAAUiR,GAC5C,GACE+E,EAAI,GAAK,GACTA,EAAI,ICnCiB,IDoCrBA,EAAI,GAAK,GACTA,EAAI,ICtCiB,IDuCrBF,EAAME,EAAI,IAAIA,EAAI,IAElB,OAAO,GAZR,8BAeH,OAAO,GAaYC,G,WAMnB,WAAY/a,GAAgC,yBAL5CA,SAK2C,OAJ3Cgb,eAI2C,OAH3CC,YAAyE,GAG9B,KAF3CC,YAAkC,KAGhCva,KAAKX,IAAMA,EACXW,KAAKqa,UAAY,IAAIzE,G,4CAGvB,WACE,OAAO5V,KAAKX,IAAIwH,OAAO7H,MAAQG,OAAOC,mB,uBAGxC,WACE,OAAOY,KAAKX,IAAIwH,OAAO5H,OAASE,OAAOC,mB,0BAGzC,SAAa3B,EAAW6G,EAAWkW,EAAcC,GAC/C,IAAMzb,EC7EiB,GD6ETwb,EACRvb,EC5EyB,GD4EhBub,EAGf,GADAxa,KAAKX,IAAImJ,YAAc,OACF,IAAjBiS,EACFza,KAAKX,IAAIqb,WAAWjd,EAAI,EAAG6G,EAAI,EAAGtF,EAAQ,EAAGC,EAAS,OACjD,CACL,IAAM0b,EAAuBna,KAAKF,IAAmB,EAAfma,EAAkB,GAClDG,EAAUtW,EAAIrF,EAAS,EACvB4b,EAAOD,GAAW3b,EAAS,EAAI,GAAK0b,EACpCG,EAAUF,GAAW3b,EAAS,EAAI,GAAK0b,EAEvCI,EAAyBva,KAAKD,IAA2B,GAAtBka,EAAe,IAAU,GAC5DO,EAAQvd,EAAKuB,EAAQ,EAAK+b,EAC1BE,EAASxd,EAAIuB,EAASA,EAAQ,EAAK+b,EAEzC/a,KAAKX,IAAIyI,YACT9H,KAAKX,IAAIqJ,OAAOjL,EAAI,EAAGod,GACvB7a,KAAKX,IAAIsJ,OAAOlL,EAAI,EAAGqd,GACvB9a,KAAKX,IAAIqJ,OAAOjL,EAAIuB,EAAQ,EAAG6b,GAC/B7a,KAAKX,IAAIsJ,OAAOlL,EAAIuB,EAAQ,EAAG8b,GAE/B9a,KAAKX,IAAIqJ,OAAOjL,EAAG6G,EAAI,GACvBtE,KAAKX,IAAIsJ,OAAOqS,EAAO1W,EAAI,GAC3BtE,KAAKX,IAAIqJ,OAAOjL,EAAG6G,EAAIrF,EAAS,GAChCe,KAAKX,IAAIsJ,OAAOqS,EAAO1W,EAAIrF,EAAS,GACpCe,KAAKX,IAAIqJ,OAAOjL,EAAIuB,EAAOsF,EAAI,GAC/BtE,KAAKX,IAAIsJ,OAAOsS,EAAQ3W,EAAI,GAC5BtE,KAAKX,IAAIqJ,OAAOjL,EAAIuB,EAAOsF,EAAIrF,EAAS,GACxCe,KAAKX,IAAIsJ,OAAOsS,EAAQ3W,EAAIrF,EAAS,GAErCe,KAAKX,IAAIuJ,Y,wBAIb,SAAWnL,EAAW6G,EAAWkW,GAC/B,IAAMxb,ECjHiB,GDiHTwb,EACRvb,EChHyB,GDgHhBub,EAEfxa,KAAKX,IAAImJ,YAAc,UACvB,IAAK,IAAI9K,EAAI,EAAGA,ECnHe,GDmHoBA,IACjDsC,KAAKX,IAAIyI,YACT9H,KAAKX,IAAIqJ,OAAOjL,EAAG6G,EAAI5G,EAAI8c,GAC3Bxa,KAAKX,IAAIsJ,OAAOlL,EAAIuB,EAAOsF,EAAI5G,EAAI8c,GACnCxa,KAAKX,IAAIuJ,SAEX,IAAK,IAAIpK,EAAI,EAAGA,EC3HO,GD2HoBA,IACzCwB,KAAKX,IAAIyI,YACT9H,KAAKX,IAAIqJ,OAAOjL,EAAIe,EAAIgc,EAAMlW,GAC9BtE,KAAKX,IAAIsJ,OAAOlL,EAAIe,EAAIgc,EAAMlW,EAAIrF,GAClCe,KAAKX,IAAIuJ,W,+BAIb,SACEnL,EACA6G,EACAkW,EACAV,GAEC,IAAD,EADAoB,EACA,uEACoB3F,GAClBuE,EAAYI,UACZJ,EAAYtE,cAHd,IACA,2BAGG,CAAC,IAHOJ,EAGR,QACDpV,KAAKX,IAAI8H,UAAY+T,EACjBzF,GAASqE,EAAYI,UCtIJ,IDuIjBzE,GAASqE,EAAYI,WACzB,IAAMvO,EAAMmO,EAAY3V,SAAS,GAAKiR,EAAM,GACtClX,EACJ4b,EAAY3V,SAAS,GAAKiR,EAAM,GChJN+F,GDiJxBjd,GAAO,GACT8B,KAAKX,IAAI+H,SAAS3J,EAAIkO,EAAM6O,EAAMlW,EAAIpG,EAAMsc,EAAMA,EAAMA,IAZ5D,iC,wBAiBF,SAAW/c,EAAW6G,EAAWkW,EAAcP,GAC7C,IAAK,IAAIvc,ECxJqByd,GDwJazd,EC1JpB,GD0J+CA,IACpE,IAAK,IAAIc,EAAI,EAAGA,EC5JK,GD4JsBA,IAAK,CAC9C,IAAMkN,EAAOuO,EAAMvc,GAAGc,GACT,IAATkN,IACF1L,KAAKX,IAAI8H,UAAYsO,GAAS/J,GAC9B1L,KAAKX,IAAI+H,SACP3J,EAAI+c,EAAOhc,EACX8F,EAAIkW,GAAQ9c,EC/JUyd,IDgKtBX,EACAA,O,6BAOV,SACE/c,EACA6G,EACAkW,EACAP,EACAH,EACAra,GAMA,IAAM2b,EAAO3b,GAAW,GAClB4b,EACuB,MAA3BD,EAAKC,mBAA6B,EAAID,EAAKC,mBACvCC,EAA4B,MAAjBF,EAAKE,UAA0BF,EAAKE,SAC/CC,EAAoC,MAArBH,EAAKG,aAAuB,EAAIH,EAAKG,aAQ1D,GANAvb,KAAKwb,aAAa/d,EAAG6G,EAAGkW,EAAMa,GAC1BC,GACFtb,KAAKyb,WAAWhe,EAAG6G,EAAGkW,GAExBxa,KAAKX,IAAIqc,YAAcH,EACvBvb,KAAK2b,WAAWle,EAAG6G,EAAGkW,EAAMP,GACxBH,EAAa,CACf9Z,KAAK4b,kBAAkBne,EAAG6G,EAAGkW,EAAMV,GACnC,IAAM+B,EAtJS,SAAC/B,EAA0BG,GAE9C,IADA,IAAI6B,EAAY,GAEb9B,GAAuBH,GAAUC,EAAa,CAACgC,EAAW,IAAK7B,IAEhE6B,IAEF,OAAOjC,GAAUC,EAAa,CAACgC,EAAY,EAAG,IA+IvBC,CAAajC,EAAaG,GAC7Cja,KAAK4b,kBAAkBne,EAAG6G,EAAGkW,EAAMqB,GAAY,GAEjD7b,KAAKX,IAAIqc,YAAc,I,8BAGzB,SAAiBje,EAAW6G,EAAWkW,EAAcwB,GACnD,IAAK,IAAIte,EAAI,EAAGA,EAAI8C,KAAKF,IAAI,EAAG0b,EAAWtb,QAAShD,IAAK,CACvD,IAAM2X,EAAO2G,EAAWte,GACxB,GAAsB,MAAjB2X,EACH,MAEFrV,KAAKX,IAAI8H,UAAYsO,GAASJ,GALyB,qBAMnCE,GAASF,EAAM,IANoB,IAMvD,2BAAuC,CAAC,IAA7BD,EAA4B,QACrCpV,KAAKX,IAAI+H,SACP3J,EAAI2X,EAAM,GAAKoF,EACflW,GAAS,EAAJ5G,EAAQ0X,EAAM,IAAMoF,EACzBA,EACAA,IAXmD,kC,4BAiB3D,SACE/c,EACA6G,EACAkW,EACAN,EACA+B,GAEA,GAAI/B,EAAW,CACbla,KAAKX,IAAI8H,UAAY8U,EAAOza,EAAKiB,WAAagT,GAASyE,GAD1C,qBAEO3E,GAAS2E,EAAW,IAF3B,IAEb,2BAA4C,CAAC,IAAlC9E,EAAiC,QAC1CpV,KAAKX,IAAI+H,SAAS3J,EAAI2X,EAAM,GAAKoF,EAAMlW,EAAI8Q,EAAM,GAAKoF,EAAMA,EAAMA,IAHvD,kC,6BAQjB,SACE/c,EACA6G,EACAkW,EACA0B,EACA7b,GAEIA,GACFL,KAAKmc,eAAe1e,EAAI+c,EAAO0B,EAAQ5X,EAAGkW,EAAMna,EAAM+b,KAAM/b,EAAM4b,MAClEjc,KAAKqc,gBACH5e,EAAW,EAAP+c,EACJlW,EACAkW,EACAna,EAAM4Z,MACN5Z,EAAMyZ,aAER9Z,KAAKsc,iBACH7e,EAAQ,GAAJ+c,EAAqC0B,EACzC5X,EACAkW,EACAna,EAAM2b,aAGRhc,KAAKyb,WAAWhe,EAAW,EAAP+c,EAAUlW,EAAGkW,K,wBAIrC,SAAWna,GACT,IAAIma,EAAO,GACA,GAAPA,EAAYxa,KAAKuc,cACnB/B,EAAO,IAET,IACMgC,EAAiB,GAAJhC,EAAyC0B,EACtDO,EC5QyB,GD4QXjC,EAUpB,OARAxa,KAAK0c,gBACH1c,KAAK2c,WAAa,EAAIH,EAAa,EACnCxc,KAAKuc,YAAc,EAAIE,EAAc,EACrCjC,EAPa,EASbna,GAGKmc,I,yBAGT,SACE/e,EACA6G,EACAkW,EACAoC,GAEA,IAAIvB,EAAqB,EACrBE,EAAe,EACc,YAA7BqB,EAAWC,gBACbxB,EAAqB7a,KAAKF,IAAmC,IAA/Bsc,EAAWE,kBAAyB,GAClEvB,EAAe/a,KAAKD,IAA2C,MAAtCqc,EAAWE,kBAAoB,IAAa,IAEtC,kBAA7BF,EAAWC,gBACbxB,EAAqB7a,KAAKF,IACxB,EAA2C,KAAtCsc,EAAWE,kBAAoB,IACpC,GAEFvB,EAAe/a,KAAKD,IAAI,EAAmC,KAA/Bqc,EAAWE,kBAA0B,IAEnE9c,KAAKqc,gBAAgB5e,EAAG6G,EAAGkW,EAAMoC,EAAW3C,MAAO2C,EAAW9C,YAAa,CACzEwB,UAAU,EACVD,qBACAE,mB,2BAIJ,SAAcpF,GAAmB,IAAD,OACxBH,EAAU,IAAI7M,IACpB,IAAK,IAAI4T,KAAO/c,KAAKsa,YACnBtE,EAAQvM,IAAIsT,GAEd/c,KAAKqa,UAAU2C,iBAA4B,GAAX7G,GAChCnW,KAAKqa,UAAU7T,OAAOwP,EAAShW,KAAK2c,WAAY3c,KAAKuc,YAAapG,GANpC,MAQInW,KAAKqa,UAAU4C,sBARnB,mBAQvB1D,EARuB,KASxBiB,EATwB,KCrTP,GDgUvB/F,OAAOyI,QAAQ3D,GAAalS,SAAQ,YAAoB,IAAD,mBAAjB0V,EAAiB,KAAZ7H,EAAY,KAC/C0H,EAAa,EAAKtC,YAAYyC,GACpC,EAAKI,YAAYjI,EAAO,GAAIA,EAAO,GAAIsF,EAAMoC,Q,8BAIjD,WACE5c,KAAKX,IAAI+d,UAAU,EAAG,EAAGpd,KAAK2c,WAAY3c,KAAKuc,aAE/C,IAAMc,EAAYrd,KAAKsd,WAAWtd,KAAKua,cAEpBva,KAAK2c,WAAaU,GAAa,EAClC,IAAMrd,KAAKuc,YAAc,IACvCvc,KAAKud,cAAcF,K,8BAIvB,SAAiBG,EAA0BC,GAAmB,IAAD,kBAClDV,GACP,GAAIA,IAAQU,EACV,GAA6B,MAAzB,EAAKnD,YAAYyC,GACnB,EAAKzC,YAAYyC,GAAjB,2BACKS,EAAYE,aAAaX,IAD9B,IAEEF,cAAe,UACfC,kBAAmB,EACnBa,MAAO,OAET,EAAKrD,YAAYyC,GAAKY,MAAQ,IAAIpW,KAAMI,MAAM,EAAK2S,YAAYyC,IAC5DnV,GAAG,CAAEkV,kBAAmB,GAAK,MAC7BpT,OAAOnC,KAAMoC,OAAO+M,UAAU7M,KAC9BC,YAAW,WACV,EAAKwQ,YAAYyC,GAAKF,cAAgB,QAEvChV,aAEH,IAAK,IAAI4L,KAAO+J,EAAYE,aAAaX,GAEvC,EAAKzC,YAAYyC,GAAKtJ,GAAO+J,EAAYE,aAAaX,GAAKtJ,IAnBnE,IAAK,IAAIsJ,KAAOS,EAAYE,aAAe,EAAlCX,GADkD,eA0BlDA,GACP,IAAMH,EAAa,EAAKtC,YAAYyC,GAEL,kBAA7BH,EAAWC,eACsB,MAAjCW,EAAYE,aAAaX,KAEzBH,EAAWC,cAAgB,gBAC3BD,EAAWE,kBAAoB,EAC3BF,EAAWe,OACbf,EAAWe,MAAM9S,OAEnB+R,EAAWe,MAAQ,IAAIpW,KAAMI,MAAMiV,GAChChV,GAAG,CAAEkV,kBAAmB,GAAK,MAC7BpT,OAAOnC,KAAMoC,OAAO+M,UAAU7M,KAC9BC,YAAW,kBACH,EAAKwQ,YAAYyC,MAEzBlV,UAjBP,IAAK,IAAIkV,KAAO/c,KAAKsa,YAAc,EAA1ByC,K,kCAsBX,SAAqBa,GACnB5d,KAAKua,YAAcqD,M,KEhXjBC,GACM,GADNA,GAEO,GAFPA,GAGa,GAHbA,GAIoB,GAJpBA,GAKM,GALNA,GAMM,GANNA,GAOE,GAGFC,GAEF,GAEEC,GAAgBzb,IAAOC,IAAV,iLAURyb,GAA8B,G,gDAEzC,iCAAAngB,EAAA,6DAEQogB,EAAK,IAAIC,GACftd,QAAQiF,IAAI,eAHd,SAK2BsY,YAAYC,qBACnCC,MAAM,aACNJ,EAAGK,cAPP,uBAKQC,EALR,EAKQA,SAIN3d,QAAQiF,IAAI,qBATd,SAUQoY,EAAGO,IAAID,GAVf,OAWE3d,QAAQiF,IAAI,qBAXd,6C,sBAeA,I,GAUa4Y,GAAoB,SAACC,GAChC,OAAO,2BACFA,GADL,IAEE5E,YAAY,2BACP4E,EAAE5E,aADI,IAET3V,SAAU,CAACua,EAAE5E,YAAY3V,SAASjG,IAAKwgB,EAAE5E,YAAY3V,SAASwH,UAKvDgT,GAAoB,SAACD,GAChC,OAAO,2BACFA,GADL,IAEE5E,YAAa4E,EAAE5E,YAAF,2BAEJ4E,EAAE5E,aAFE,IAGP3V,SAAU,CACRjG,IAAKwgB,EAAE5E,YAAY3V,SAAS,GAC5BwH,IAAK+S,EAAE5E,YAAY3V,SAAS,WAGhCmC,KAyUOsY,GAvMc,SAAClc,GAC5B,IAAMmc,EAAkB9Z,iBAAwB,CAC9CyY,YAAa,CAAEE,aAAc,IAC7BoB,gBAAiB,CAAC,MAClBC,aAAc,GACdC,YAAa,EACbvB,cAAUnX,EACV2Y,eAAgB,EAChBC,iBAAkB,IAEdC,EAAWxa,IAAMI,OAAwB,MACzCqH,EAAaP,KACb9M,EAAY4F,IAAMI,OAA0B,MA6KlD,OA3KAJ,IAAM2H,WAAU,WACd,GAAwB,MAApB6S,EAASjgB,SAAwC,MAArBH,EAAUG,QAAiB,CACzD,IAAMG,EAAMN,EAAUG,QAAQI,WAAW,MACrCD,IACF8f,EAASjgB,QAAU,IAAIkb,GAAS/a,IAIpC,IAAM+f,EAAY,SAACxR,GACjB,IAAIkQ,GAAQlQ,EAAEC,SAAd,CAGA,OAAQD,EAAEC,SACR,KAAKgQ,GACHwB,EAAU,GACV,MACF,KAAKxB,GACHwB,EAAU,GACV,MACF,KAAKxB,GACHwB,EAAU,GACV,MACF,KAAKxB,GACHwB,EAAU,GACV,MACF,KAAKxB,GACHwB,EAAU,GACV,MACF,KAAKxB,GACHwB,EAAU,GACV,MACF,KAAKxB,GACHwB,EAAU,GAGdvB,GAAQlQ,EAAEC,SAAW,CAAEyR,SAAUC,KAAKC,MAAOC,cAAeF,KAAKC,SAG7DE,EAAU,SAAC9R,UACRkQ,GAAQlQ,EAAEC,W,oCAGnB8R,GAEA,IAAMC,EAAS,IAAIC,UAAU,8BAC7BD,EAAOE,OAAS,WACdF,EAAOG,UAAY,SAACC,GAClBpf,QAAQiF,IAAI,cAAema,GAE3B,IAhOatB,EAgOTuB,EAAaC,KAAKC,MAAMH,EAAErc,MAE9B,GAAIsc,EAAWG,aAA0C,OAA3BH,EAAWG,YACvCxf,QAAQiF,IAAI,gBAAiBoa,EAAWI,IACxCxB,EAAgB3f,QAAQue,SAAWwC,EAAWI,GAC9CxB,EAAgB3f,QAAQ+f,eAAiBgB,EAAWK,KACpDzB,EAAgB3f,QAAQggB,iBACtBK,KAAKC,MAAQX,EAAgB3f,QAAQ+f,eAEvC9f,OAAON,WAAW2H,EAAQ,IAC1BrH,OAAOqN,iBAAiB,UAAW4S,GACnCjgB,OAAOqN,iBAAiB,QAASkT,OAC5B,CAAC,IACA3e,EAAakf,EAAblf,SA7OK2d,EA8OY3d,EAAvBA,EA7ODwf,aAAQ7B,GAAG,SAAC8B,GACjB,cAAuB/L,OAAOC,KAAKgK,EAAEhB,cAArC,eAAoD,CAA/C,IAAMD,EAAQ,KACjB+C,EAAM9C,aAAaD,GAAYgB,GAC7BC,EAAEhB,aAAaD,QA+BM,SAC3BgD,EACA1f,GAEA,GAA2B,MAAvB0f,EAAWhD,SACb,MAAM,IAAIiD,MAAM,kDAGlB,GAA6B,MAAzB3f,EAAS2c,aACX,MAAM,IAAIgD,MAAJ,qCAAwC3f,EAAS2c,eAEzD+C,EAAWjD,YAAczc,EAEzB,IAAM4f,EACJF,EAAWjD,YAAYE,aAAa+C,EAAWhD,UACjD,GAAsB,MAAlBkD,EAAJ,CAIA,IAAML,EAAOK,EAAeL,KAE5B,IAAKG,EAAWxB,eAAiBqB,GAAQ,KAAO,EAC9C,MAAM,IAAII,MAAJ,yBACcD,EAAWxB,eADzB,mCACkEqB,EADlE,gBAKR,IAAMM,EACJH,EAAW3B,gBAAgBpe,OAC3B,GACC+f,EAAWxB,eAAiBqB,GAAQ,GAEvC,GAAIM,EAAe,EACjB,MAAM,IAAIF,MAAJ,oEACyDE,EADzD,4DACyHH,EAAW3B,gBAAgBpe,OADpJ,OAKR,GAAIkgB,GAAgBH,EAAW3B,gBAAgBpe,OAC7CE,QAAQiF,IAAR,wDACmD+a,EADnD,iEACwHH,EAAW3B,gBAAgBpe,OADnJ,4BADF,CAOA,GAAInC,WAAUkiB,EAAW3B,gBAAgB8B,GAAeD,GAMtD,OALA/f,QAAQiF,IAAR,wFACmF+a,EADnF,eACsGH,EAAW3B,gBAAgBpe,SAEjI+f,EAAW3B,gBAAkB2B,EAAW3B,gBAAgB1gB,MAAMwiB,QAC9DH,EAAW1B,aAAe0B,EAAW1B,aAAa3gB,MAAMwiB,IAI1DhgB,QAAQiF,IACN,+BACAqa,KAAKW,UAAUJ,EAAW3B,kBAG5Ble,QAAQiF,IACN,eACA8a,EACA,8BACAT,KAAKC,MAAMD,KAAKW,UAAUJ,EAAW3B,gBAAgB8B,KACrD,2BACAA,EACA,KACAH,EAAW3B,gBAAgBpe,QAG7B+f,EAAW1B,aAAe0B,EAAW1B,aAAa3gB,MAAMwiB,GACxD,IAAIE,EAAiBR,EACrBG,EAAW3B,gBAAkB,CAAC6B,GArE3B,qBAuEkBF,EAAW1B,cAvE7B,IAuEH,2BAA8C,CAAC,IAApCgC,EAAmC,QAC5CD,GAAkB,GAClB,IAAME,EACJP,EAAW3B,gBAAgB2B,EAAW3B,gBAAgBpe,OAAS,GACjE,GAA0B,MAAtBsgB,EACF,MAAM,IAAIN,MAAJ,mDAIR,GAAyB,oBAAdO,WAAX,CASA,IAAMC,EAAWD,WACff,KAAKW,UAAUlC,GAAkBqC,IACjCd,KAAKW,UAAUE,GACfD,GAEIK,EAAiB1C,GAAkByB,KAAKC,MAAMe,IACpDT,EAAW3B,gBAAgB3gB,KAAKgjB,QAd9BvgB,QAAQiF,IACN,yFAEF4a,EAAW3B,gBAAgB3gB,KAAK6iB,IApFjC,iCAyMKI,CAAqBvC,EAAgB3f,QAAS6B,GAC1Coe,EAASjgB,SAAW2f,EAAgB3f,QAAQue,UAC9C0B,EAASjgB,QAAQmiB,iBACfxC,EAAgB3f,QAAQse,YACxBqB,EAAgB3f,QAAQue,aAOlC,IAAM4B,EAAY,SAACiC,GACjB,IAAMC,EAAoB,CACxBjB,KAAMzB,EAAgB3f,QAAQ+f,eAC9BqC,UACAtY,MAAO6V,EAAgB3f,QAAQ8f,aAEjChB,GAAa7f,KAAKojB,GAClB1C,EAAgB3f,QAAQ8f,cAExB,IAAMwC,EAAiB,aACrBC,SAAU5C,EAAgB3f,QAAQue,UAC/B8D,GAIHpiB,OAAON,YAAW,WAChB+gB,EAAO8B,KAAKxB,KAAKW,UAAUW,MAC1B,MAMDhb,EAAS,SAATA,IACJqY,EAAgB3f,QAAQ+f,gBAAkB,GAzI3B,SAACwB,EAA6BM,GACjD,IAAMC,EACJP,EAAW3B,gBAAgB2B,EAAW3B,gBAAgBpe,OAAS,GAGjE,GAA0B,MAAtBsgB,GAAmD,oBAAdC,WAGvC,OAFAR,EAAW3B,gBAAgB3gB,KAAK6iB,QAChCP,EAAW1B,aAAa5gB,KAAK4iB,GAK/B,IAAMG,EAAWD,WACff,KAAKW,UAAUlC,GAAkBqC,IACjCd,KAAKW,UAAUE,GACfN,EAAWxB,eAAexc,YAEtB0e,EAAiB1C,GAAkByB,KAAKC,MAAMe,IAEpDtgB,QAAQiF,IAAI,SAAUkb,GACtBN,EAAW3B,gBAAgB3gB,KAAKgjB,GAChCV,EAAW1B,aAAa5gB,KAAK4iB,GAsHzBY,CAAa9C,EAAgB3f,QAAS8e,IAClCmB,EAASjgB,SAAW2f,EAAgB3f,QAAQue,UAC9C0B,EAASjgB,QAAQ0iB,qBACf/C,EAAgB3f,QAAQ4f,gBACtBD,EAAgB3f,QAAQ4f,gBAAgBpe,OAAS,IAKvDsd,GAAe,GAEf,IAAMsC,EAAOf,KAAKC,MAEZqC,EAAW/D,GAAQD,IAEvBgE,GACAvB,EAAOuB,EAASvC,UDzVL,KC0VXgB,EAAOuB,EAASpC,eDzVL,KC2VXJ,EAAU,GACNwC,EAASpC,gBAAkBoC,EAASvC,SACtCuC,EAASpC,eD9VA,ICgWToC,EAASpC,eD/VA,ICmWb,IAAMqC,EAAUhE,GAAQD,IAEtBiE,GACAxB,EAAOwB,EAAQxC,UDvWJ,KCwWXgB,EAAOwB,EAAQrC,eDvWJ,KCyWXJ,EAAU,GACNyC,EAAQrC,gBAAkBqC,EAAQxC,SACpCwC,EAAQrC,eD5WC,IC8WTqC,EAAQrC,eD7WC,ICiXb,IAAMsC,EAAUjE,GAAQD,IACpBkE,GAAWzB,EAAOyB,EAAQtC,eDlXjB,KCmXXJ,EAAU,GACV0C,EAAQtC,eDpXG,ICuXb,IAAMuC,EACJnD,EAAgB3f,QAAQ+f,eACxB,IACCM,KAAKC,MAAQX,EAAgB3f,QAAQggB,kBACxC/f,OAAON,WAAW2H,EAAQwb,IAU5Bhb,uBAPA,SAASib,EAAQ3B,GACftZ,sBAAsBib,GACtB1a,KAAMf,OAAO8Z,GACTnB,EAASjgB,SACXigB,EAASjgB,QAAQgjB,wBAIpB,IAEHvd,IAAM2H,WAAU,WACVF,EAAWpN,OAASoN,EAAWnN,QACjCH,EAAaC,EAAWqN,EAAWpN,MAAOoN,EAAWnN,UAEtD,CAACmN,IAGF,kBAAC2R,GAAD,KACE,4BACE7Z,MAAO,CACLlF,MAAO,OACPC,OAAQ,OACRiQ,WAAY,SAEdrK,IAAK9F,MCtZEojB,GALY,SAACzf,GAE1B,OADA9B,QAAQiF,IAAI,gBAAiBnD,GACtB,+CCFI0f,GAAU9f,IAAOC,IAAV,mGCeL8f,GATuC,SAAC,GAAqB,EAAnBrZ,MAAoB,IAAbsZ,EAAY,EAAZA,MACxDC,EAAU5d,IAAMI,OAA6B,MACnD,OACE,uBAAG4O,UAAU,eAAe0M,GAAIiC,EAAMjC,GAAIxb,IAAK0d,GAC5CD,EAAME,UCCEC,GALiC,SAAC,GAAe,IAAbH,EAAY,EAAZA,MAC7CI,EAAG,WAAOJ,EAAMK,OACpB,OAAO,kBAACD,EAAD,CAAKrC,GAAIiC,EAAMjC,IAAKiC,EAAME,UCVpB,SAASI,KACtB,MAAM,GAAN,OAAUpiB,KAAKG,MAAsB,IAAhBH,KAAKC,WCuB5B,I,GAyHeoiB,GAlHc,WAAO,IAAD,EACLle,IAAMwH,SAAuB,CACvD,CAAEkJ,KAAM,SAAUgL,GAAIuC,KAAYD,MAAO,EAAGH,QAAS,cACrD,CACEnN,KAAM,YACNgL,GAAIuC,KACJJ,QAAS,SAEX,CACEnN,KAAM,YACNgL,GAAIuC,KACJJ,QAAS,uBAXoB,mBAC1BM,EAD0B,KAClBC,EADkB,KAcjCniB,QAAQiF,IAAI,QAASid,GAErB,IAAME,EAAkBre,IAAMqH,aAC5B,SAAC4B,GACChN,QAAQiF,IAAI,UACZ,IAAMod,EAAY9jB,OAAO+jB,eACzB,GAAiB,MAAbD,EAAmB,CAErB,IAAIE,EACAC,EAGG,EAKA,EAPP,GAHAxiB,QAAQiF,IAAI,UAGRod,EAAUI,sBAAsBC,QAClCH,EAAgBF,EAAUI,gBAE1BF,EAAa,UAAGF,EAAUI,kBAAb,aAAG,EAAsBE,cAExC,GAAIN,EAAUO,qBAAqBF,QACjCF,EAAeH,EAAUO,eAEzBJ,EAAY,UAAGH,EAAUO,iBAAb,aAAG,EAAqBD,cAEtC,GAAqB,MAAjBJ,GAAyC,MAAhBC,EAAsB,CACjDxiB,QAAQiF,IAAI,UAEZ,IAAM4d,EAAkBN,EAAcO,QAAQ,iBACxCC,EAAiBP,EAAaM,QAAQ,iBAC5C,GACqB,MAAnBD,GACkB,MAAlBE,GACAF,IAAoBE,EACpB,CACA/iB,QAAQiF,IAAI,SAAU4d,EAAiBE,GACvC,IAAMC,EAAUH,EAAgBpD,GAC1BwD,EAAatlB,aACjBukB,GACA,SAACR,GAAD,OAAWA,EAAMjC,KAAOuD,KAU1B,YARAzkB,OAAON,YAAW,WAChB,IAAMgE,EAAO4gB,EAAgBK,UAC7Bf,GAAU,SAACgB,GACT,OAAOxD,aAAQwD,GAAK,SAACvD,GACnBA,EAAMqD,GAAYrB,QA7DV,SAAC3f,GACzB,OAAY,MAARA,EACK,GAEFA,EAyDqCmhB,CAAkBnhB,cAQ1D+K,EAAEQ,mBAEJ,CAAC0U,IAGH,OACE,kBAAC,GAAD,CACEmB,iBAAe,EACf7E,UAAW4D,EACXkB,gCAA8B,EAC9BC,QAAS,SAACvW,GACRhN,QAAQwjB,MAAM,WAEd,IADA,IAAMC,EAAQzW,EAAE0W,cAAcD,MAFhB,WAGL3mB,GACP,IAAM6mB,EAAOF,EAAM3mB,GACb8mB,EAAe,CACnB7gB,KAAMiK,EAAE0W,cAAcG,QAAQF,EAAKlP,MACnCqP,OAAQH,EAAKI,YACbC,QAASL,EAAKM,oBAEhBN,EAAKO,aAAY,SAACpG,GACf8F,EAAqBO,SAAWrG,KAEnC9d,QAAQwjB,MAAR,UAAiBG,EAAKlP,KAAtB,aAA+BkP,EAAKS,KAApC,MACApkB,QAAQiF,IAAI2e,GACZ5jB,QAAQqkB,YAZDvnB,EAAI,EAAGA,EAAI2mB,EAAM3jB,OAAQhD,IAAM,EAA/BA,GAcTkD,QAAQqkB,aAGTnC,EAAOtlB,KAAI,SAAC8kB,EAAOuB,GAClB,IAAIqB,EACJ,OAAQ5C,EAAMjN,MACZ,IAAK,SACH6P,EAAYzC,GACZ,MACF,IAAK,YACHyC,EAAY7C,GAGhB,OACE,kBAAC6C,EAAD,CACElc,MAAO6a,EACPvB,MAAOA,EACP7O,IAAK6O,EAAMjC,UClIR8E,GAJY,WACzB,OAAO,kBAAC,GAAD,OCFIC,GAAQ9iB,IAAO+iB,SAAV,0JC6BHC,GA3BiB,WAC9B,OACE,kBAAC,GAAD,CACEC,YAAY,uBACZpB,QAAS,SAACvW,GACRhN,QAAQwjB,MAAM,WAEd,IADA,IAAMC,EAAQzW,EAAE0W,cAAcD,MAFhB,WAGL3mB,GACP,IAAM6mB,EAAOF,EAAM3mB,GACb8mB,EAAe,CACnB7gB,KAAMiK,EAAE0W,cAAcG,QAAQF,EAAKlP,MACnCqP,OAAQH,EAAKI,YACbC,QAASL,EAAKM,oBAEhBN,EAAKO,aAAY,SAACpG,GACf8F,EAAqBO,SAAWrG,KAEnC9d,QAAQwjB,MAAR,UAAiBG,EAAKlP,KAAtB,aAA+BkP,EAAKS,KAApC,MACApkB,QAAQiF,IAAI2e,GACZ5jB,QAAQqkB,YAZDvnB,EAAI,EAAGA,EAAI2mB,EAAM3jB,OAAQhD,IAAM,EAA/BA,GAcTkD,QAAQqkB,eCEDO,OAjBf,WACE,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOxW,KAAK,UAAUyW,OAAK,EAACC,UAAW9G,KACvC,kBAAC,IAAD,CAAO5P,KAAK,aAAayW,OAAK,EAACC,UAAWtY,KAC1C,kBAAC,IAAD,CAAO4B,KAAK,QAAQyW,OAAK,EAACC,UAAWP,KACrC,kBAAC,IAAD,CAAOnW,KAAK,aAAayW,OAAK,EAACC,UAAWJ,KAC1C,kBAAC,IAAD,CAAOtW,KAAK,IAAIyW,OAAK,EAACC,UAAW1R,KACjC,kBAAC,IAAD,CAAO0R,UAAWvD,SCRRwD,QACW,cAA7BxmB,OAAOkV,SAASuR,UAEe,UAA7BzmB,OAAOkV,SAASuR,UAEhBzmB,OAAOkV,SAASuR,SAASC,MACvB,2DCZNC,IAAS7e,OAAO,kBAAC,GAAD,MAASoH,SAAS0X,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlT,MAAK,SAAAmT,GACjCA,EAAaC,iB","file":"static/js/main.d6ecec7a.chunk.js","sourcesContent":["export function argMax(array: number[]) {\n  return array.map((x, i) => [x, i]).reduce((r, a) => (a[0] > r[0] ? a : r))[1];\n}\n\nexport function zero2D(rows: number, cols: number) {\n  var array = [],\n    row = [];\n  while (cols--) row.push(0);\n  while (rows--) array.push(row.slice());\n  return array;\n}\n\nexport function array2D<T>(rows: number, cols: number, val: T) {\n  var array = [],\n    row = [];\n  while (cols--) row.push(val);\n  while (rows--) array.push(row.slice());\n  return array;\n}\n\nexport function randInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function transpose(matrix: number[][]) {\n  return matrix[0].map((_, j) => matrix.map((row) => row[j]));\n}\n\nexport function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function resizeCanvas(\n  canvasRef: React.RefObject<HTMLCanvasElement>,\n  width: number,\n  height: number\n) {\n  if (canvasRef.current) {\n    canvasRef.current.width = width * window.devicePixelRatio;\n    canvasRef.current.height = height * window.devicePixelRatio;\n    const ctx = canvasRef.current.getContext(\"2d\");\n    if (ctx) {\n      ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    }\n  }\n}\n","import Env from \"../../common/envs/Env\";\nimport { argMax, randInt, zero2D } from \"../../common/util/helpers\";\nimport Agent from \"./Agent\";\n\nexport interface QLearningAgentUpdateData {\n  state: number;\n  action: number;\n  lr: number;\n  reward: number;\n  done: boolean;\n  gamma: number;\n  newState: number;\n  nextAction: number;\n  currentQ: number;\n  nextQ: number;\n}\n\nexport default class QLearningAgent implements Agent {\n  gamma: number;\n  lr: number;\n  eps: number;\n  epsDecay: number;\n  qTable?: number[][];\n\n  updateData?: QLearningAgentUpdateData;\n\n  constructor(options: any) {\n    options = {\n      gamma: 0.95,\n      lr: 0.1,\n      eps: 0.5,\n      epsDecay: 0.99,\n      ...options,\n    };\n    this.gamma = options.gamma;\n    this.lr = options.lr;\n    this.eps = options.eps;\n    this.epsDecay = options.epsDecay;\n  }\n\n  prepareForEnv(env: Env) {\n    this.qTable = zero2D(env.stateSpace!, env.actionSpace!);\n  }\n\n  getAction(state: number) {\n    if (this.qTable == null) {\n      console.error(\"Q learning agent not prepared\");\n      return;\n    }\n\n    if (Math.random() < this.eps) {\n      return randInt(0, this.qTable[0].length);\n    } else {\n      return argMax(this.qTable[state]);\n    }\n  }\n\n  update(\n    state: number,\n    action: number,\n    newState: number,\n    reward: number,\n    done: boolean\n  ) {\n    if (this.qTable == null) {\n      console.error(\"Q learning agent not prepared\");\n      return;\n    }\n\n    this.updateData = {\n      state,\n      action,\n      lr: this.lr,\n      reward,\n      done,\n      gamma: this.gamma,\n      newState,\n      nextAction: argMax(this.qTable[newState]),\n      currentQ: this.qTable[state][action],\n      nextQ: Math.max(...this.qTable[newState]),\n    };\n\n    this.qTable[state][action] +=\n      this.lr *\n      (reward +\n        (done ? 0 : this.gamma * Math.max(...this.qTable[newState])) -\n        this.qTable[state][action]);\n  }\n\n  finishEpisode() {\n    this.eps *= this.epsDecay;\n  }\n}\n","import Color from \"color\";\n\nexport const darkGray = Color.rgb(10, 10, 10);\nexport const gray = Color.rgb(110, 110, 110);\nexport const lightGray = Color.rgb(200, 200, 200);\nexport const veryLightGray = Color.rgb(224, 224, 224);\nexport const green = Color.rgb(186, 200, 146);\nexport const darkGreen = Color.rgb(78, 201, 176);\nexport const blue = Color.rgb(156, 220, 254);\nexport const darkBlue = Color.rgb(86, 156, 214);\nexport const red = Color.rgb(250, 138, 84);\nexport const purple = Color.rgb(197, 134, 192);\nexport const yellow = Color.rgb(220, 220, 170);\nexport const brown = Color.rgb(206, 145, 120);\nexport const orange = Color.rgb(255, 165, 0);\n\nexport const bgBrown = Color.rgb(54, 36, 17);\nexport const bgGreen = Color.rgb(17, 54, 31);\n\nexport const QLearningColors = {\n  state: purple,\n  nextState: darkBlue,\n  reward: yellow,\n  action: brown,\n  nextAction: darkGreen,\n  currentQ: bgBrown,\n  nextQ: bgGreen\n};\n","import katex from \"katex\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport * as colors from \"../../common/colors\";\n\nconst KatexDiv = styled.div<{ fontSize: number }>`\n  color: ${colors.lightGray.toString()};\n  font-size: ${(props) => props.fontSize}px;\n`;\n\ninterface KatexProps {\n  expression: string;\n  fontSize?: number;\n}\n\nconst Katex: React.FC<KatexProps> = (props) => {\n  const html = katex.renderToString(props.expression);\n  return (\n    <KatexDiv\n      fontSize={props.fontSize || 20}\n      dangerouslySetInnerHTML={{ __html: html }}\n    ></KatexDiv>\n  );\n};\n\nexport default Katex;\n","import Color from 'color';\n\nexport const colorbox = (color: Color, text: string) =>\n  String.raw`\\colorbox{${color.hex()}}{$${text}$}`;\n\nexport const textcolor = (color: Color, text: string) =>\n  String.raw`\\textcolor{${color.hex()}}{${text}}`;\n","import React from \"react\";\n\nimport { QLearningAgentUpdateData } from \"../agents/QLearningAgent\";\nimport { QLearningColors as colors } from \"../../common/colors\";\nimport Katex from \"../components/Katex\";\nimport { colorbox, textcolor } from \"../util/latex\";\nimport Position from \"../util/Position\";\n\ninterface BellmanUpdateKatexProps {\n  updateData?: QLearningAgentUpdateData;\n  position: Position;\n}\n\nconst BellmanUpdateKatex: React.FC<BellmanUpdateKatexProps> = (props) => {\n  const data = props.updateData;\n\n  if (data == null) {\n    return <></>;\n  }\n  const actionString = data.action\n    ? String.raw`\\text{left}`\n    : String.raw`\\text{right}`;\n  const nextActionString = data.nextAction\n    ? String.raw`\\text{left}`\n    : String.raw`\\text{right}`;\n\n  const Qsa = colorbox(\n    colors.currentQ,\n    String.raw`Q(${textcolor(colors.state, \"s\")}, ${textcolor(\n      colors.action,\n      \"a\"\n    )})`\n  );\n  const Qsa2 = colorbox(\n    colors.currentQ,\n    String.raw`Q(${textcolor(colors.state, data.state.toString())}, ${textcolor(\n      colors.action,\n      actionString\n    )})`\n  );\n  const Qsan = colorbox(\n    colors.nextQ,\n    String.raw`\\max_{${textcolor(colors.nextAction, \"a'\")}}Q(${textcolor(\n      colors.nextState,\n      \"s'\"\n    )}, ${textcolor(colors.nextAction, \"a'\")})`\n  );\n  const Qsan2 = colorbox(\n    colors.nextQ,\n    String.raw`Q(${textcolor(\n      colors.nextState,\n      data.newState.toString()\n    )}, ${textcolor(colors.nextAction, nextActionString.toString())})`\n  );\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        left: props.position.x,\n        top: props.position.y,\n      }}\n    >\n      <Katex\n        expression={String.raw`\n        \\begin{aligned}${Qsa} &\\leftarrow ${Qsa} + \\alpha(${textcolor(\n          colors.reward,\n          \"r\"\n        )} + \\gamma ${Qsan} - ${Qsa}) \\\\ \n        \n        ${Qsa2} &\\leftarrow ${Qsa2} + ${data.lr}(${textcolor(\n          colors.reward,\n          data.reward.toString()\n        )} + ${data.gamma} ${Qsan2} - ${Qsa2}) \\\\ \n        \n        ${Qsa2} &\\leftarrow ${colorbox(\n          colors.currentQ,\n          data.currentQ.toFixed(2)\n        )} + ${data.lr}(${textcolor(colors.reward, data.reward.toString())} + ${\n          data.gamma\n        } * ${colorbox(colors.nextQ, data.nextQ.toFixed(2))} - ${colorbox(\n          colors.currentQ,\n          data.currentQ.toFixed(2)\n        )}) \\\\\n\n        ${Qsa2} &\\leftarrow ${(\n          data.currentQ +\n          data.lr * (data.reward + data.gamma * data.nextQ - data.currentQ)\n        ).toFixed(2)}\n        \\end{aligned}`}\n      ></Katex>\n    </div>\n  );\n};\n\nexport default BellmanUpdateKatex;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nimport Position from \"../util/Position\";\nimport Katex from \"./Katex\";\n\nconst clickEffect = keyframes`\n    from {\n        background: rgba(255, 255, 255, .5);\n    }\n    to {\n        background: rgba(0, 0, 0, 0);\n    }\n`;\n\nconst ButtonDiv = styled.div`\n  position: fixed;\n  color: white;\n  padding: 4px 8px;\n  border-radius: 4px;\n  cursor: pointer;\n  user-select: none;\n  animation: ${clickEffect} 0.3s ease-out 1;\n`;\n\nexport interface ButtonHandles {\n  click(): void;\n}\n\ninterface ButtonProps {\n  expression: string;\n  position: Position;\n  onClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>): void;\n}\n\nconst Button: React.RefForwardingComponent<ButtonHandles, ButtonProps> = (\n  props,\n  ref\n) => {\n  const buttonRef = React.useRef<HTMLDivElement>(null);\n  React.useImperativeHandle(ref, () => ({\n    click: () => {\n      if (buttonRef.current) {\n        buttonRef.current.style.animation = \"none\";\n        void buttonRef.current.offsetWidth;\n        buttonRef.current.style.animation = \"\";\n      }\n    },\n  }));\n  return (\n    <ButtonDiv\n      style={{\n        left: props.position.x,\n        top: props.position.y,\n        animation: \"none\",\n      }}\n      onClick={props.onClick}\n      ref={buttonRef}\n    >\n      <Katex fontSize={16} expression={props.expression}></Katex>\n    </ButtonDiv>\n  );\n};\n\nexport default React.forwardRef(Button);\n","import Env from \"../../common/envs/Env\";\n\nexport default class NChainEnv implements Env {\n  n: number;\n  slip: number;\n  small: number;\n  large: number;\n  episode_length: number;\n  state: number;\n  stepCount: number;\n\n  stateSpace: number;\n  actionSpace: number;\n\n  constructor(n = 5, slip = 0.2, small = 2, large = 10, episode_length = 100) {\n    this.n = n;\n    this.slip = slip;\n    this.small = small;\n    this.large = large;\n    this.episode_length = episode_length;\n    this.state = 0;\n    this.stepCount = 0;\n\n    this.stateSpace = n;\n    this.actionSpace = 2;\n  }\n\n  step(action: boolean) {\n    let slipped = false;\n    if (Math.random() < this.slip) {\n      action = !action;\n      slipped = true;\n    }\n    let reward = 0;\n    if (action) {\n      // 'backwards': go back to the beginning, get small reward\n      reward = this.small;\n      this.state = 0;\n    } else if (this.state < this.n - 1) {\n      // 'forwards': go up along the chain\n      this.state += 1;\n    } else {\n      // 'forwards': stay at the end of the chain, collect large reward\n      reward = this.large;\n    }\n    this.stepCount += 1;\n    console.log(this.stepCount);\n    return {\n      newState: this.state,\n      reward: reward,\n      done: this.stepCount >= this.episode_length,\n      info: { slipped },\n    };\n  }\n\n  reset() {\n    this.state = 0;\n    this.stepCount = 0;\n    return this.state;\n  }\n}\n","import Agent from \"./agents/Agent\";\nimport Env from \"../common/envs/Env\";\n\nexport default class Game {\n  env: Env;\n  agent: Agent;\n  state!: number;\n  prevState?: number;\n  lastReward?: number;\n  totalReward: number = 0;\n  lastAction: any;\n\n  constructor(env: Env, agent: Agent) {\n    this.env = env;\n    this.agent = agent;\n    this.reset();\n  }\n\n  reset() {\n    this.state = this.env.reset() as number;\n    this.prevState = undefined;\n    this.totalReward = 0;\n  }\n\n  agentTakeAction(action: any) {\n    const { newState, reward, done, info } = this.env.step(action);\n    this.lastAction = action;\n    this.lastReward = reward;\n    this.totalReward += reward;\n    this.agent.update(this.state, action, newState, reward, done);\n    this.prevState = this.state;\n    this.state = newState;\n    const totalReward = this.totalReward;\n    if (done) {\n      this.agent.finishEpisode();\n      this.reset();\n    }\n    return { action, newState, reward, done, totalReward, info };\n  }\n\n  step() {\n    const action = this.agent.getAction(this.state);\n    return this.agentTakeAction(action);\n  }\n}\n","import TWEEN from \"@tweenjs/tween.js\";\nimport { darkGray } from \"../common/colors\";\n\nexport default class Scene {\n  constructor(canvas, ctx, size, sceneObjects) {\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.size = size;\n    this.sceneObjects = sceneObjects;\n  }\n\n  render() {\n    requestAnimationFrame(this.render.bind(this));\n\n    this.ctx.fillStyle = darkGray;\n    this.ctx.fillRect(0, 0, this.size.width, this.size.height);\n    this.sceneObjects.forEach((obj) => {\n      obj.render(this.ctx, this.size);\n    });\n\n    TWEEN.update();\n  }\n}\n","import TWEEN from \"@tweenjs/tween.js\";\n\nimport * as colors from \"../../common/colors\";\nimport Position from \"../util/Position\";\nimport SceneObject from \"./SceneObject\";\n\nexport default class AgentObject implements SceneObject {\n  position: Position;\n  redness: number;\n  constructor(position: Position) {\n    this.position = position;\n    this.redness = 0;\n  }\n\n  move(newX: number) {\n    new TWEEN.Tween(this.position).to({ x: newX }, 150).start();\n  }\n\n  slip() {\n    this.redness = 1;\n    new TWEEN.Tween(this).to({ redness: 0 }, 500).start();\n  }\n\n  render(ctx: any) {\n    ctx.fillStyle = colors.blue;\n    ctx.beginPath();\n    ctx.arc(this.position.x, this.position.y, 20, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.fillStyle = colors.red.fade(1 - this.redness);\n    ctx.fill();\n  }\n}\n","import * as colors from \"../../common/colors\";\n\nexport default class ChainEnvironment {\n  RADIUS = 30;\n  DIST = 100;\n\n  constructor(position) {\n    this.position = position;\n  }\n\n  highlightStates(states) {\n    this.highlightedStates = states;\n  }\n\n  render(ctx) {\n    ctx.strokeStyle = colors.gray;\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    for (let i = 0; i < 5; i++) {\n      if (i < 4) {\n        ctx.beginPath();\n        ctx.moveTo(\n          this.position.x + this.DIST * (i - 2) + this.RADIUS,\n          this.position.y\n        );\n        ctx.lineTo(\n          this.position.x + this.DIST * (i - 1) - this.RADIUS,\n          this.position.y\n        );\n      }\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.arc(\n        this.position.x + this.DIST * (i - 2),\n        this.position.y,\n        this.RADIUS,\n        0,\n        2 * Math.PI\n      );\n      ctx.stroke();\n      ctx.font = \"16px KaTeX_Main\";\n      ctx.fillStyle = colors.gray.toString();\n      ctx.textAlign = \"center\";\n      ctx.fillText(\n        i,\n        this.position.x + this.DIST * (i - 2),\n        this.position.y + 4\n      );\n    }\n    if (this.highlightedStates) {\n      this.highlightedStates.forEach((state) => {\n        ctx.beginPath();\n        ctx.strokeStyle = state.color.toString();\n        ctx.arc(\n          this.position.x + this.DIST * (state.index - 2),\n          this.position.y,\n          this.RADIUS,\n          0,\n          2 * Math.PI\n        );\n        ctx.stroke();\n\n        ctx.font = \"16px KaTeX_Main\";\n        ctx.fillStyle = state.color.toString();\n        ctx.textAlign = \"center\";\n        ctx.fillText(\n          state.index,\n          this.position.x + this.DIST * (state.index - 2),\n          this.position.y + 4\n        );\n      });\n    }\n  }\n}\n","import TWEEN from \"@tweenjs/tween.js\";\n\nimport * as colors from \"../../common/colors\";\nimport Position from \"../util/Position\";\nimport SceneObject from \"./SceneObject\";\n\ninterface Coin {\n  position: Position;\n  opacity: { val: number };\n  fading: boolean;\n}\n\nexport default class CoinEmitter implements SceneObject {\n  coins = new Set<Coin>();\n  emit(start: Position, end: Position, delay: number = 0) {\n    const coin: Coin = {\n      position: start,\n      opacity: { val: 0 },\n      fading: false,\n    };\n    this.coins.add(coin);\n    new TWEEN.Tween(coin.position)\n      .delay(delay)\n      .to(end, 200)\n      .easing(TWEEN.Easing.Cubic.Out)\n      .start();\n    new TWEEN.Tween(coin.opacity)\n      .delay(delay)\n      .to({ val: 0.8 }, 200)\n      .easing(TWEEN.Easing.Cubic.Out)\n      .start();\n  }\n  clear() {\n    this.coins.forEach((coin) => {\n      if (!coin.fading) {\n        new TWEEN.Tween(coin.opacity)\n          .delay(250)\n          .to({ val: 0 }, 400)\n          .onComplete(() => this.coins.delete(coin))\n          .start();\n        coin.fading = true;\n      }\n    });\n  }\n  render(ctx: CanvasRenderingContext2D) {\n    this.coins.forEach((coin) => {\n      ctx.beginPath();\n      ctx.fillStyle = colors.QLearningColors.reward\n        .fade(1 - coin.opacity.val)\n        .toString();\n      ctx.arc(coin.position.x, coin.position.y, 6, 0, 2 * Math.PI);\n      ctx.fill();\n    });\n  }\n}\n","import * as colors from \"../../common/colors\";\nimport TWEEN from \"@tweenjs/tween.js\";\n\nexport default class NumberObject {\n  constructor(position, val, options) {\n    options = {\n      font: \"30px KaTeX_Main\",\n      textAlign: \"center\",\n      precision: 2,\n      color: colors.lightGray,\n      modifier: (v) => v,\n      ...options,\n    };\n\n    this.position = position;\n    this.val = val;\n    this.font = options.font;\n    this.textAlign = options.textAlign;\n    this.precision = options.precision;\n    this.modifier = options.modifier;\n    this.color = options.color;\n    this.newVal = 0;\n    this.newValColor = colors.red;\n    this.newValOpacity = 0;\n    this.newValOffset = 0;\n    this.valOpacity = 1;\n    this.valOffset = 0;\n  }\n\n  onAnimationFinish() {\n    this.activeTween = new TWEEN.Tween(this)\n      .to({ newValOpacity: 0 }, 2000)\n      .start();\n    this.valOpacity = 1;\n    this.valOffset = 0;\n    this.val = this.newVal;\n  }\n\n  updateVal(newVal, animated = true, animationDuration = 400) {\n    if (newVal === this.newVal) {\n      return;\n    }\n    if (this.activeTween) {\n      this.activeTween.stop();\n    }\n\n    if (!animated) {\n      this.val = newVal;\n      this.newVal = newVal;\n    }\n\n    if (newVal > this.val) {\n      this.val = this.newVal;\n      this.newVal = newVal;\n      this.newValColor = colors.green;\n      this.valOpacity = 1;\n      this.newValOpacity = 0;\n      this.valOffset = 0;\n      this.newValOffset = -25;\n      this.activeTween = new TWEEN.Tween(this)\n        .to(\n          {\n            valOpacity: 0,\n            newValOpacity: 1,\n            valOffset: 25,\n            newValOffset: 0,\n          },\n          animationDuration\n        )\n        .onStop(this.onAnimationFinish.bind(this))\n        .onComplete(this.onAnimationFinish.bind(this))\n        .start();\n    } else if (newVal < this.val) {\n      this.val = this.newVal;\n      this.newVal = newVal;\n      this.newValColor = colors.red;\n      this.valOpacity = 1;\n      this.newValOpacity = 0;\n      this.valOffset = 0;\n      this.newValOffset = 25;\n      this.activeTween = new TWEEN.Tween(this)\n        .to(\n          {\n            valOpacity: 0,\n            newValOpacity: 1,\n            valOffset: -25,\n            newValOffset: 0,\n          },\n          animationDuration\n        )\n        .onStop(this.onAnimationFinish.bind(this))\n        .onComplete(this.onAnimationFinish.bind(this))\n        .start();\n    }\n  }\n\n  render(ctx) {\n    ctx.textAlign = this.textAlign;\n    ctx.font = this.font;\n    ctx.fillStyle = this.color.fade(1 - this.valOpacity);\n    if (this.val != null) {\n      ctx.fillText(\n        this.modifier(this.val.toFixed(this.precision)),\n        this.position.x,\n        this.position.y + this.valOffset\n      );\n    }\n    ctx.fillStyle = this.newValColor.fade(1 - this.newValOpacity);\n    if (this.newVal != null) {\n      ctx.fillText(\n        this.modifier(this.newVal.toFixed(this.precision)),\n        this.position.x,\n        this.position.y + this.newValOffset\n      );\n    }\n  }\n}\n","import * as colors from \"../../common/colors\";\nimport Position from \"../util/Position\";\nimport NumberObject from \"./NumberObject\";\n\nexport default class Table {\n  CELL_WIDTH = 120;\n  CELL_HEIGHT = 70;\n\n  numberObjects: NumberObject[][];\n  position: Position;\n  highlightedCells: any[] = [];\n\n  constructor(position: Position, data: number[][]) {\n    this.position = position;\n    this.numberObjects = [];\n    for (let i = 0; i < data.length; i++) {\n      const temp = [];\n      for (let j = 0; j < data[0].length; j++) {\n        temp.push(new NumberObject(0, 0, data[i][j]));\n      }\n      this.numberObjects.push(temp);\n    }\n  }\n\n  updateData(newData: number[][]) {\n    for (let i = 0; i < this.numberObjects.length; i++) {\n      for (let j = 0; j < this.numberObjects[0].length; j++) {\n        this.numberObjects[i][j].updateVal(newData[i][j]);\n      }\n    }\n  }\n\n  highlightCells(cells: any[]) {\n    this.highlightedCells = cells;\n  }\n\n  repositionNumbers() {\n    for (let i = 0; i < this.numberObjects.length; i++) {\n      for (let j = 0; j < this.numberObjects[0].length; j++) {\n        this.numberObjects[i][j].position = {\n          x: this.position.x + this.CELL_WIDTH * (j + 1 / 2),\n          y: this.position.y + 45 + this.CELL_HEIGHT * i,\n        };\n      }\n    }\n  }\n\n  render(ctx: CanvasRenderingContext2D) {\n    ctx.lineWidth = 1;\n    this.repositionNumbers();\n    if (this.highlightedCells) {\n      this.highlightedCells.forEach((cell) => {\n        ctx.beginPath();\n        ctx.fillStyle = cell.color;\n        ctx.fillRect(\n          this.position.x + this.CELL_WIDTH * cell.col,\n          this.position.y + this.CELL_HEIGHT * cell.row,\n          this.CELL_WIDTH,\n          this.CELL_HEIGHT\n        );\n      });\n    }\n    for (let i = 0; i < this.numberObjects.length; i++) {\n      for (let j = 0; j < this.numberObjects[0].length; j++) {\n        ctx.beginPath();\n        ctx.rect(\n          this.position.x + this.CELL_WIDTH * j,\n          this.position.y + this.CELL_HEIGHT * i,\n          this.CELL_WIDTH,\n          this.CELL_HEIGHT\n        );\n        ctx.strokeStyle = colors.gray.toString();\n        ctx.stroke();\n        this.numberObjects[i][j].render(ctx);\n      }\n    }\n  }\n}\n","import React from \"react\";\n\n// Hook\nexport default function useWindowSize() {\n  const isClient = typeof window === \"object\";\n\n  const getSize = React.useCallback(() => {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }, [isClient]);\n\n  const [windowSize, setWindowSize] = React.useState(getSize);\n\n  React.useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [getSize, setWindowSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n","import \"react-dat-gui/build/react-dat-gui.css\";\n\nimport React from \"react\";\nimport DatGui, { DatBoolean, DatButton, DatNumber } from \"react-dat-gui\";\nimport styled from \"styled-components\";\n\nimport QLearningAgent from \"../agents/QLearningAgent\";\nimport * as colors from \"../../common/colors\";\nimport BellmanUpdateKatex from \"../components/BellmanUpdateKatex\";\nimport Button, { ButtonHandles } from \"../components/Button\";\nimport NChainEnv from \"../envs/NChain\";\nimport Game from \"../Game\";\nimport useStaging from \"../hooks/useStaging\";\nimport Scene from \"../Scene\";\nimport AgentObject from \"../scene-objects/AgentObject\";\nimport ChainEnvironment from \"../scene-objects/ChainEnvironment\";\nimport CoinEmitter from \"../scene-objects/CoinEmitter\";\nimport NumberObject from \"../scene-objects/NumberObject\";\nimport Table from \"../scene-objects/Table\";\nimport { transpose, resizeCanvas } from \"../../common/util/helpers\";\nimport { textcolor } from \"../util/latex\";\nimport useWindowSize from \"../../common/util/useWindowSize\";\n\nconst initialAgentOptions = {\n  gamma: 0.95,\n  lr: 0.1,\n  eps: 0.5,\n  epsDecay: 0.99,\n};\n\nconst glob = {\n  envY: 180,\n  centerX: 450,\n};\n\nconst env = new NChainEnv();\nconst agent = new QLearningAgent(initialAgentOptions);\nagent.prepareForEnv(env);\nconst game = new Game(env, agent);\n\nconst rewardNumberObject = new NumberObject(\n  { x: glob.centerX, y: glob.envY - 72 },\n  0,\n  {\n    textAlign: \"center\",\n    font: \"40px KaTeX_Main\",\n    precision: 0,\n  }\n);\n// const lastRewardNumberObject = new NumberObject(\n//   { x: glob.centerX, y: glob.envY - 100 },\n//   undefined,\n//   {\n//     textAlign: \"center\",\n//     font: \"20px KaTeX_Main\",\n//     precision: 0,\n//     color: colors.yellow,\n//     modifier: (v: number) => \"+\" + v\n//   }\n// );\n// const bestRewardNumberObject = new NumberObject(\n//   { x: glob.centerX, y: glob.envY - 50 },\n//   0,\n//   {\n//     textAlign: \"center\",\n//     font: \"20px KaTeX_Main\",\n//     precision: 0,\n//     modifier: (v: number) => \"Best: \" + v\n//   }\n// );\nconst envObject = new ChainEnvironment({\n  x: glob.centerX,\n  y: glob.envY,\n});\nconst coinEmitter = new CoinEmitter();\nconst agentObject = new AgentObject({\n  x: glob.centerX - 2 * envObject.DIST,\n  y: glob.envY,\n});\nconst tableObject = new Table(\n  { x: glob.centerX - envObject.DIST * 2.5, y: glob.envY + 55 },\n  transpose(agent.qTable!)\n);\ntableObject.CELL_WIDTH = envObject.DIST;\n\nconst Page = styled.div`\n  background-color: ${colors.darkGray.toString()};\n`;\n\nfunction QLearningPage() {\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n  const sceneRef = React.useRef<Scene>();\n  const size = useWindowSize();\n\n  const [stepCount, setStepCount] = React.useState(0);\n  const [options, setOptions] = React.useState({\n    autoPlay: false,\n    ...initialAgentOptions,\n  });\n\n  //   const takeAction = action => {\n  //     const { newState, reward } = env.step(action);\n  //     console.log(\"new state\", newState);\n  //     setState(newState);\n  //   };\n\n  useStaging([\n    () => {\n      window.alert(\"hello world\");\n    },\n    () => {\n      window.alert(\"hello world 2\");\n    },\n  ]);\n\n  const agentTookAction = (\n    action: any,\n    done: boolean,\n    totalReward: number,\n    info: any\n  ) => {\n    if (action) {\n      if (leftButtonRef.current) {\n        leftButtonRef.current.click();\n      }\n    } else {\n      if (rightButtonRef.current) {\n        rightButtonRef.current.click();\n      }\n    }\n    if (info.slipped) {\n      agentObject.slip();\n    }\n    if (done) {\n      // if (totalReward > bestRewardNumberObject.val) {\n      //   bestRewardNumberObject.updateVal(totalReward);\n      // }\n      setOptions({ ...options, eps: agent.eps });\n    }\n    setStepCount(stepCount + 1);\n  };\n\n  const step = () => {\n    const { action, done, totalReward, info } = game.step();\n    agentTookAction(action, done, totalReward, info);\n  };\n\n  const handleKeyDown = (e: any) => {\n    if (e.keyCode === 39) {\n      // right arrow\n      e.preventDefault();\n      const { done, totalReward, info } = game.agentTakeAction(0);\n      agentTookAction(0, done, totalReward, info);\n    }\n    if (e.keyCode === 37) {\n      // left arrow\n      e.preventDefault();\n      const { done, totalReward, info } = game.agentTakeAction(1);\n      agentTookAction(1, done, totalReward, info);\n    }\n  };\n\n  const handleUpdate = (data: any) => {\n    setOptions(data);\n  };\n\n  React.useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas && canvas.getContext(\"2d\");\n    if (size.width && size.height) {\n      resizeCanvas(canvasRef, size.width, size.height);\n    }\n\n    sceneRef.current = new Scene(canvas, ctx, size, [\n      coinEmitter,\n      envObject,\n      tableObject,\n      agentObject,\n      rewardNumberObject,\n      // bestRewardNumberObject,\n      // lastRewardNumberObject,\n    ]);\n\n    sceneRef.current.render();\n  }, [size]);\n\n  React.useEffect(() => {\n    game.reset();\n  }, []);\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  if (options.autoPlay) {\n    window.setTimeout(step, 200);\n  }\n\n  agent.gamma = options.gamma;\n  agent.lr = options.lr;\n  agent.eps = options.eps;\n  agent.epsDecay = options.epsDecay;\n\n  if (size.width && size.height) {\n    resizeCanvas(canvasRef, size.width, size.height);\n  }\n\n  agentObject.move(glob.centerX + envObject.DIST * ((game.state || 0) - 2));\n\n  window.setTimeout(() => {\n    if (agent.qTable) {\n      tableObject.updateData(transpose(agent.qTable));\n    }\n  }, 500);\n\n  window.setTimeout(() => {\n    rewardNumberObject.updateVal(game.totalReward);\n  }, 150);\n\n  // lastRewardNumberObject.updateVal(game.lastReward, false);\n  coinEmitter.clear();\n  if (game.lastReward) {\n    const startX =\n      game.lastReward === 2\n        ? glob.centerX - 2 * envObject.DIST\n        : glob.centerX + 2 * envObject.DIST;\n\n    for (let i = 0; i < game.lastReward; i++) {\n      const angle = Math.random() * 2 * Math.PI;\n      const radius = 40;\n      coinEmitter.emit(\n        { x: startX, y: glob.envY },\n        {\n          x: glob.centerX + radius * Math.cos(angle),\n          y: glob.envY - 85 + radius * Math.sin(angle),\n        },\n        150 + i * 10\n      );\n    }\n  }\n\n  if (agent.updateData) {\n    tableObject.highlightCells([\n      {\n        row: agent.updateData.action,\n        col: agent.updateData.state,\n        color: colors.QLearningColors.currentQ,\n      },\n      {\n        row: agent.updateData.nextAction,\n        col: agent.updateData.newState,\n        color: colors.QLearningColors.nextQ,\n      },\n    ]);\n\n    envObject.highlightStates([\n      {\n        index: agent.updateData.state,\n        color: colors.QLearningColors.state,\n      },\n      {\n        index: agent.updateData.newState,\n        color: colors.QLearningColors.nextState,\n      },\n    ]);\n  }\n\n  const rightButtonRef = React.useRef<ButtonHandles>(null);\n  const leftButtonRef = React.useRef<ButtonHandles>(null);\n\n  return (\n    <Page>\n      <DatGui data={options} onUpdate={handleUpdate}>\n        <DatNumber\n          path=\"lr\"\n          label=\"Learning rate (α)\"\n          min={0}\n          max={1}\n          step={0.01}\n        />\n        <DatNumber\n          path=\"eps\"\n          label=\"Rnd chance (ε)\"\n          min={0}\n          max={1}\n          step={0.01}\n        />\n        <DatNumber\n          path=\"gamma\"\n          label=\"Discount rate (γ)\"\n          min={0}\n          max={1}\n          step={0.01}\n        ></DatNumber>\n        <DatNumber\n          path=\"epsDecay\"\n          label=\"ε decay\"\n          min={0}\n          max={1}\n          step={0.01}\n        ></DatNumber>\n        <DatBoolean path=\"autoPlay\" label=\"Auto-play\"></DatBoolean>\n        <DatButton label=\"Step\" onClick={step} />\n      </DatGui>\n      <canvas\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          background: \"black\",\n        }}\n        ref={canvasRef}\n      />\n      <BellmanUpdateKatex\n        updateData={agent.updateData}\n        position={{\n          x: glob.centerX - tableObject.CELL_WIDTH * 3 - 12,\n          y: tableObject.position.y + tableObject.CELL_HEIGHT * 2 + 30,\n        }}\n      ></BellmanUpdateKatex>\n      <Button\n        ref={rightButtonRef}\n        expression={textcolor(\n          agent.updateData && agent.updateData.action === 0\n            ? colors.QLearningColors.action\n            : agent.updateData && agent.updateData.nextAction === 0\n            ? colors.QLearningColors.nextAction\n            : colors.lightGray,\n          String.raw`\\text{right}`\n        )}\n        position={{\n          x: glob.centerX - tableObject.CELL_WIDTH * 3 - 20,\n          y: tableObject.position.y + 20,\n        }}\n        onClick={() => {\n          const { done, totalReward, info } = game.agentTakeAction(0);\n          agentTookAction(0, done, totalReward, info);\n        }}\n      ></Button>\n      <Button\n        ref={leftButtonRef}\n        expression={textcolor(\n          agent.updateData && agent.updateData.action === 1\n            ? colors.QLearningColors.action\n            : agent.updateData && agent.updateData.nextAction === 1\n            ? colors.QLearningColors.nextAction\n            : colors.lightGray,\n          String.raw`\\text{left}`\n        )}\n        position={{\n          x: glob.centerX - tableObject.CELL_WIDTH * 3 - 20,\n          y: tableObject.position.y + tableObject.CELL_HEIGHT * 1 + 20,\n        }}\n        onClick={() => {\n          const { done, totalReward, info } = game.agentTakeAction(1);\n          agentTookAction(1, done, totalReward, info);\n        }}\n      ></Button>\n      {/* <AspectRatioBox></AspectRatioBox> */}\n    </Page>\n  );\n}\n\nexport default QLearningPage;\n","import { Mino } from \"./types\";\nimport {\n  red,\n  green,\n  darkBlue,\n  orange,\n  purple,\n  yellow,\n  blue,\n} from \"../common/colors\";\nimport memoize from \"memoizee\";\n\nconst jlstzOffsets: [number, number][][] = [\n  [\n    [0, 0],\n    [0, 0],\n    [0, 0],\n    [0, 0],\n    [0, 0],\n  ],\n  [\n    [0, 0],\n    [0, 1],\n    [1, 1],\n    [-2, 0],\n    [-2, 1],\n  ],\n  [\n    [0, 0],\n    [0, 0],\n    [0, 0],\n    [0, 0],\n    [0, 0],\n  ],\n  [\n    [0, 0],\n    [0, -1],\n    [1, -1],\n    [-2, 0],\n    [-2, -1],\n  ],\n];\n\nconst oOffsets: [number, number][][] = [\n  [[0, 0]],\n  [[1, 0]],\n  [[1, -1]],\n  [[0, -1]],\n];\n\nconst iOffsets: [number, number][][] = [\n  [\n    [0, 0],\n    [0, -1],\n    [0, 2],\n    [0, -1],\n    [0, 2],\n  ],\n  [\n    [0, -1],\n    [0, 0],\n    [0, 0],\n    [-1, 0],\n    [2, 0],\n  ],\n  [\n    [-1, -1],\n    [-1, 1],\n    [-1, -2],\n    [0, 1],\n    [0, -2],\n  ],\n  [\n    [-1, 0],\n    [-1, 0],\n    [-1, 0],\n    [1, 0],\n    [-2, 0],\n  ],\n];\n\nconst zMinos: [number, number][] = [\n  [1, 1],\n  [1, 2],\n  [2, 2],\n  [2, 3],\n];\n\nconst sMinos: [number, number][] = [\n  [1, 2],\n  [1, 3],\n  [2, 1],\n  [2, 2],\n];\n\nconst jMinos: [number, number][] = [\n  [1, 1],\n  [2, 1],\n  [2, 2],\n  [2, 3],\n];\n\nconst lMinos: [number, number][] = [\n  [1, 3],\n  [2, 1],\n  [2, 2],\n  [2, 3],\n];\n\nconst tMinos: [number, number][] = [\n  [1, 2],\n  [2, 1],\n  [2, 2],\n  [2, 3],\n];\n\nconst oMinos: [number, number][] = [\n  [1, 2],\n  [1, 3],\n  [2, 2],\n  [2, 3],\n];\n\nconst iMinos: [number, number][] = [\n  [2, 1],\n  [2, 2],\n  [2, 3],\n  [2, 4],\n];\n\nconst tetrominos = [\n  {\n    color: green,\n    minos: [sMinos],\n    offsets: jlstzOffsets,\n  },\n  {\n    color: red,\n    minos: [zMinos],\n    offsets: jlstzOffsets,\n  },\n  {\n    color: darkBlue,\n    minos: [jMinos],\n    offsets: jlstzOffsets,\n  },\n  {\n    color: orange,\n    minos: [lMinos],\n    offsets: jlstzOffsets,\n  },\n  {\n    color: purple,\n    minos: [tMinos],\n    offsets: jlstzOffsets,\n  },\n  {\n    color: yellow,\n    minos: [oMinos],\n    offsets: oOffsets,\n  },\n  {\n    color: blue,\n    minos: [iMinos],\n    offsets: iOffsets,\n  },\n];\n\nconst rotateCoords = (coords: [number, number][], size: number) => {\n  const result: [number, number][] = [];\n  for (const coord of coords) {\n    result.push([coord[1], size - coord[0] - 1]);\n  }\n  return result;\n};\n\nfor (let type = 1; type < 8; type++) {\n  const tetromino = tetrominos[type - 1]!;\n  for (let i = 0; i < 3; i++) {\n    tetromino.minos.push(rotateCoords(tetromino.minos[i], 5));\n  }\n}\n\nexport const getOffsets = (type: Mino, orientation: number) => {\n  return tetrominos[type - 1].offsets[orientation];\n};\n\nexport const getMinos = (type: Mino, orientation: number) => {\n  return tetrominos[type - 1].minos[orientation];\n};\n\nconst _getColor = (type: Mino, alpha: number = 1) => {\n  return tetrominos[type - 1].color.alpha(alpha).toString();\n};\n\nexport const getColor = memoize(_getColor, { length: 2 });\n","import React from \"react\";\n\ntype Stage = () => void;\n\nexport default function useStaging(stages: Stage[]) {\n  const [stage, setStage] = React.useState(0);\n  React.useEffect(() => {\n    window.addEventListener(\"keypress\", e => {\n      switch (e.keyCode) {\n        case 110:\n          // n\n          stages[stage]();\n          if (stage < stages.length - 1) {\n            setStage(stage + 1);\n          }\n          break;\n      }\n    });\n  });\n  return [stage, setStage];\n}\n","import Env from \"../../common/envs/Env\";\nimport * as tf from \"@tensorflow/tfjs\";\n\nexport default class SnakeEnv implements Env {\n  boardSize: number;\n  foodReward: number;\n  deathReward: number;\n\n  player!: tf.Tensor2D;\n  food!: tf.Tensor1D;\n\n  constructor(boardSize = 9, foodReward = 2, deathReward = -1) {\n    this.boardSize = boardSize;\n    this.foodReward = foodReward;\n    this.deathReward = deathReward;\n\n    this.reset();\n  }\n\n  playerOnFood() {\n    return (\n      this.player\n        .gather(this.player.shape[0])\n        .equal(this.food)\n        .sum()\n        .bufferSync()\n        .get(0) === 2\n    );\n  }\n\n  playerOutOfBounds() {\n    const buffer = this.player.bufferSync();\n    const x = buffer.get(this.player.shape[0] - 1, 0);\n    const y = buffer.get(this.player.shape[0] - 1, 1);\n    const outOfBounds = !(\n      0 <= x &&\n      x < this.boardSize &&\n      0 <= y &&\n      y < this.boardSize\n    );\n    if (outOfBounds) {\n      console.log(\"snake went out of bounds\");\n    }\n    return outOfBounds;\n  }\n\n  collidedWithTail() {\n    const [tail, head] = tf.split(this.player, [this.player.shape[0] - 1, 1]);\n    const collidedWithTail =\n      tf.sum(tail.equal(head), 1).max().bufferSync().get(0) === 2;\n    if (collidedWithTail) {\n      console.log(\"snake collided with tail\");\n    }\n    return collidedWithTail;\n  }\n\n  step(action: number) {\n    if (action == null) {\n      console.log(\"Error: action was undefined in SnakeEnv!\", action);\n    }\n\n    const currentPosition = this.player.gather(this.player.shape[0] - 1);\n\n    const actionUpdateMap = [\n      tf.tensor1d([0, -1]),\n      tf.tensor1d([1, 0]),\n      tf.tensor1d([0, 1]),\n      tf.tensor1d([-1, 0]),\n    ];\n\n    const newPosition: tf.Tensor1D = currentPosition.add(\n      actionUpdateMap[action]\n    );\n\n    this.player = this.player.concat(newPosition.reshape([1, 2]));\n\n    let reward = 0;\n\n    if (this.playerOnFood()) {\n      reward = this.foodReward;\n      this.randomizeFood();\n    } else {\n      const [, allButLast] = tf.split(this.player, [\n        1,\n        this.player.shape[0] - 1,\n      ]);\n      this.player = allButLast;\n    }\n\n    let done = false;\n    if (this.playerOutOfBounds() || this.collidedWithTail()) {\n      done = true;\n      reward = this.deathReward;\n    }\n\n    if (done) {\n      return {\n        newObservation: tf.zeros([this.boardSize, this.boardSize, 3]),\n        reward,\n        done,\n      };\n    }\n\n    return {\n      newObservation: this.getObservation(),\n      reward,\n      done,\n    };\n  }\n\n  getObservation() {\n    const foodEntry = this.food.reverse().concat(tf.tensor1d([0]));\n    const playerEntries = this.player.reverse(1).concat(\n      tf\n        .fill([this.player.shape[0] - 1], 2)\n        .concat(tf.tensor1d([1]))\n        .reshape([this.player.shape[0], 1]),\n      1\n    );\n    const updates = foodEntry.reshape([1, 3]).concat(playerEntries);\n    const values = tf\n      .tensor1d([1])\n      .concat(tf.range(1, this.player.shape[0]))\n      .concat(tf.tensor1d([1]));\n    return tf.scatterND(updates, values, [this.boardSize, this.boardSize, 3]);\n  }\n\n  randomizeFood() {\n    while (true) {\n      this.food = tf.randomUniform([2], 0, this.boardSize, \"int32\");\n      if (\n        tf.sum(this.player.equal(this.food), 1).max().bufferSync().get(0) !== 2\n      ) {\n        break;\n      }\n    }\n  }\n\n  reset() {\n    this.player = tf.randomUniform([1, 2], 0, this.boardSize, \"int32\");\n    this.randomizeFood();\n    return this.getObservation();\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport classNames from \"classnames\";\nimport SnakeEnv from \"../envs/SnakeEnv\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport { green, red } from \"../../common/colors\";\nimport * as _ from \"lodash\";\nimport { sleep } from \"../../common/util/helpers\";\n\nconst SnakeRendererDiv = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  .row {\n    display: flex;\n    justify-content: center;\n    height: 60px;\n  }\n  .cell {\n    width: 60px;\n    height: 100%;\n    &.food {\n      background: ${red.desaturate(0.3).hex()};\n    }\n    &.snake,\n    &.tail {\n      background: ${green.desaturate(0.5).hex()};\n    }\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n    .row {\n      height: ${100 / 9}vw;\n    }\n    .cell {\n      width: ${100 / 9}vw;\n    }\n  }\n`;\n\nconst env = new SnakeEnv();\nconst obs = env.getObservation();\n\nconst snakeGlobals = {\n  stopRunning: false,\n  disableInput: false,\n  modelUpdating: false,\n};\n\nconst SnakeRenderer: React.FC = (props) => {\n  const [observation, setObservation] = React.useState(obs);\n  const [totalReward, setTotalReward] = React.useState(0);\n  console.log(\"Total reward:\", totalReward);\n\n  async function updateModel(\n    model: tf.LayersModel,\n    obs: tf.Tensor,\n    action: number,\n    newObs: tf.Tensor,\n    reward: number,\n    done: boolean\n  ) {\n    // This is like a mutex lock, except it gives up if the thread is busy.\n    // Also, it doesn't necessarily work; if two threads enter at exactly the\n    // same time they may both go through. But it hasn't happened yet afaik.\n    if (snakeGlobals.modelUpdating) {\n      return;\n    }\n    snakeGlobals.modelUpdating = true;\n\n    const prediction = model.predict(obs.reshape([1, 9, 9, 3])) as tf.Tensor;\n    const nextRewardPrediction = model.predict(\n      newObs.reshape([1, 9, 9, 3])\n    ) as tf.Tensor;\n    const targetActionScore =\n      reward +\n      (done ? 0 : 0.95 * (nextRewardPrediction.max().arraySync() as number));\n    const label = prediction.bufferSync();\n    label.set(targetActionScore, 0, action);\n    await model.fit(obs.reshape([1, 9, 9, 3]), label.toTensor(), {\n      epochs: 1,\n    });\n\n    snakeGlobals.modelUpdating = false;\n  }\n\n  React.useEffect(() => {\n    async function runModel(model: tf.LayersModel) {\n      for (let i = 0; ; i++) {\n        let done = false;\n        let obs: tf.Tensor;\n        if (i === 0) {\n          obs = env.getObservation();\n        } else {\n          obs = env.reset();\n        }\n        while (!done) {\n          if (snakeGlobals.stopRunning) {\n            return;\n          }\n          const prediction = model.predict(\n            obs.reshape([1, 9, 9, 3])\n          ) as tf.Tensor;\n          const action = (prediction.argMax(1).arraySync() as number[])[0];\n          if (action == null) {\n            // Sometimes action is undefined for some mysterious reason.\n            // I'm hoping this can catch that one day.\n            console.log(\"Error: action was undefined in runModel!\", action);\n            console.log(\"observation:\");\n            obs.print();\n            console.log(\"prediction:\");\n            prediction.print();\n            console.log(\"argmax:\");\n            console.log(prediction.argMax(1));\n          }\n          const { newObservation, reward, done: newDone } = env.step(action);\n          setObservation(newObservation);\n          setTotalReward((totalReward) => totalReward + reward);\n\n          await updateModel(model, obs, action, newObservation, reward, done);\n\n          done = newDone;\n          obs = newObservation;\n          await sleep(300);\n        }\n      }\n    }\n\n    const runModelDebounced = _.debounce((model: tf.LayersModel) => {\n      snakeGlobals.stopRunning = false;\n      snakeGlobals.disableInput = false;\n      runModel(model);\n    }, 600);\n\n    tf.loadLayersModel(\"/models/snake/model.json\").then((model) => {\n      model.compile({ optimizer: \"adam\", loss: \"meanSquaredError\" });\n      runModel(model);\n\n      // TODO: cleanup this listener. Not sure how to because the listener\n      // is a closure that takes in model.\n      window.addEventListener(\"keydown\", (e) => {\n        if (snakeGlobals.disableInput) {\n          return;\n        }\n        const obs = env.getObservation();\n        const keyToActionMap: { [key: string]: number } = {\n          ArrowUp: 0,\n          ArrowRight: 1,\n          ArrowDown: 2,\n          ArrowLeft: 3,\n        };\n        if (!(e.key in keyToActionMap)) {\n          return;\n        }\n        const action = keyToActionMap[e.key];\n        const { newObservation, reward, done: newDone } = env.step(action);\n        setObservation(newObservation);\n        snakeGlobals.stopRunning = true;\n\n        updateModel(model, obs, action, newObservation, reward, newDone);\n\n        if (newDone) {\n          snakeGlobals.disableInput = true;\n          env.reset();\n        }\n\n        runModelDebounced(model);\n      });\n    });\n  }, []);\n\n  const obsArray = observation.arraySync() as number[][][];\n\n  return (\n    <SnakeRendererDiv>\n      {obsArray.map((row, i) => (\n        <div className=\"row\" key={i}>\n          {row.map((cell, i) => {\n            const food = cell[0] === 1;\n            const snake = cell[1] === 1;\n            const tail = cell[2] > 0;\n            return (\n              <div\n                key={i}\n                className={classNames(\"cell\", {\n                  food,\n                  snake,\n                  tail,\n                })}\n                style={{\n                  opacity: food\n                    ? 0.3\n                    : snake\n                    ? 0.4\n                    : tail\n                    ? 0.1 + (0.3 * (cell[2] - 1)) / (env.player.shape[0] - 1)\n                    : 0,\n                }}\n              ></div>\n            );\n          })}\n        </div>\n      ))}\n    </SnakeRendererDiv>\n  );\n};\n\nexport default SnakeRenderer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SnakeRenderer from \"../../snake/components/SnakeRenderer\";\n// import FluidShader from \"../../shaders/components/FluidShader\";\n\nconst HomePageDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  position: fixed;\n  width: 100%;\n  font-family: Quicksand;\n  .bio {\n    max-width: 400px;\n    width: 100%;\n    padding: 16px;\n    font-size: 18px;\n    margin-bottom: 80px;\n  }\n  .footer {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    padding: 16px;\n    font-size: 14px;\n    opacity: 0.6;\n    p {\n      margin: 0;\n    }\n  }\n  a {\n    color: black;\n    text-decoration: underline;\n    text-decoration-color: transparent;\n    font-weight: bold;\n    transition: all 0.15s;\n    &:hover {\n      text-decoration-color: black;\n    }\n  }\n`;\n\nconst HomePageBackground = styled.div`\n  position: absolute;\n  z-index: -1;\n  width: 100%;\n  height: 100%;\n`;\n\ninterface Theme {\n  background: React.ReactNode;\n  link: string;\n  name: string;\n}\n\nconst HomePage: React.FC = (props) => {\n  console.log(\"props\", props);\n\n  const themes: { [key: string]: Theme } = {\n    snake: {\n      background: <SnakeRenderer></SnakeRenderer>,\n      link: \"https://github.com/Xyzrr/rl-snake\",\n      name: \"DQN playing Snake\",\n    },\n    // shader: {\n    //   background: <FluidShader></FluidShader>,\n    //   link: \"#\",\n    //   name: \"Shader\",\n    // },\n  };\n  let themeKey: string | null = null;\n  if (window.location.hash) {\n    themeKey = window.location.hash.substr(1);\n  }\n  if (!themeKey || !(themeKey in themes)) {\n    const choices = Object.keys(themes);\n    themeKey = choices[Math.floor(Math.random() * choices.length)];\n  }\n  const theme = themes[themeKey];\n\n  return (\n    <HomePageDiv>\n      <HomePageBackground>{theme.background}</HomePageBackground>\n      <div className=\"bio\">\n        <p>Hey, I'm John. </p>\n        <p>\n          I currently do swe at{\" \"}\n          <a href=\"https://wandb.com/\">Weights & Biases</a>. Earlier I moved\n          buttons around at Google and dropped out of UIUC. I like simplifying\n          and prettifying things,{\" \"}\n          <a href=\"https://blog.johnqian.com\">writing</a>, and doing\n          calisthenics. I idolize Paul Graham and Richard Feynman to an\n          unreasonable extent.\n        </p>\n        <p>\n          If you like my work, we should meet up. My email is johnlongqian (at)\n          gmail.com.\n        </p>\n      </div>\n      <div className=\"footer\">\n        <p>Background:</p>\n        <p>\n          <a href={theme.link}>{theme.name}</a>\n        </p>\n      </div>\n    </HomePageDiv>\n  );\n};\n\nexport default HomePage;\n","import * as _ from \"lodash\";\nimport * as constants from \"./constants\";\nimport TWEEN from \"@tweenjs/tween.js\";\nimport { array2D } from \"../common/util/helpers\";\n\n/**\n * Manages positioning enemies on a grid, independent of enemy states.\n * Also controls zooming animation of grid.\n */\nexport class EnemyGrid {\n  WIDTH_HEIGHT_RATIO = constants.MATRIX_COLS / constants.MATRIX_ROWS_VISIBLE;\n  GUTTER_WIDTH_RATIO = 2 / constants.MATRIX_COLS;\n\n  // given properties\n  enemies = new Set<string>();\n  fullWidth = 0;\n  fullHeight = 0;\n  gapWidth = 0;\n  maxEnemyWidth?: number;\n\n  // derived properies\n  grid: (string | null)[][] = [];\n  enemyWidth = 0;\n  animatedEnemyWidth = 0;\n  yOffset = 0;\n\n  setMaxEnemyWidth(max: number) {\n    this.maxEnemyWidth = max;\n  }\n\n  setEnemyWidth(width: number, duration = 0) {\n    this.enemyWidth = width;\n    if (duration === 0) {\n      this.animatedEnemyWidth = width;\n    } else {\n      new TWEEN.Tween(this)\n        .to({ animatedEnemyWidth: width }, duration)\n        .easing(TWEEN.Easing.Quadratic.InOut)\n        .start();\n    }\n  }\n\n  /**\n   * @param compact Make grid as small as possible; currently unused\n   * @returns The enemyWidth, rowCount and colCount that fits\n   * all the enemies in the available space such that they're\n   * as large as possible.\n   */\n  getOptimalDimensions(enemyCount: number, compact = false) {\n    const sideWidth = this.getSideWidth();\n\n    // try fitting horizontally\n    let enemyWidthWide = 0;\n    let rowCap = 0;\n    let sideCols = 1;\n    while (true) {\n      enemyWidthWide =\n        sideWidth / (sideCols + (sideCols + 1) * this.GUTTER_WIDTH_RATIO);\n      const enemyHeight = enemyWidthWide / this.WIDTH_HEIGHT_RATIO;\n      const gutterWidth = enemyWidthWide * this.GUTTER_WIDTH_RATIO;\n      rowCap = Math.floor(\n        (this.fullHeight - gutterWidth) / (enemyHeight + gutterWidth)\n      );\n\n      if (rowCap * sideCols >= Math.ceil(enemyCount / 2)) {\n        break;\n      }\n\n      sideCols++;\n    }\n\n    //try fitting vertically\n    let enemyHeightTall = 0;\n    let colCap = 0;\n    let rows = 1;\n    while (true) {\n      enemyHeightTall =\n        this.fullHeight /\n        (rows + (rows + 1) * this.WIDTH_HEIGHT_RATIO * this.GUTTER_WIDTH_RATIO);\n      const enemyWidth = enemyHeightTall * this.WIDTH_HEIGHT_RATIO;\n      const gutterWidth = enemyWidth * this.GUTTER_WIDTH_RATIO;\n      colCap = Math.floor(\n        (sideWidth - gutterWidth) / (enemyWidth + gutterWidth)\n      );\n\n      if (colCap * rows >= Math.ceil(enemyCount / 2)) {\n        break;\n      }\n\n      rows++;\n    }\n\n    let bestEnemyWidth: number;\n    let bestRowCount: number;\n    let bestColCount: number;\n\n    const enemyWidthTall = enemyHeightTall * this.WIDTH_HEIGHT_RATIO;\n    if (enemyWidthTall > enemyWidthWide) {\n      bestEnemyWidth = enemyWidthTall;\n      bestRowCount = rows;\n      if (compact) {\n        bestColCount = Math.ceil(enemyCount / rows / 2) * 2;\n      } else {\n        bestColCount = colCap * 2;\n      }\n    } else {\n      bestEnemyWidth = enemyWidthWide;\n      if (compact) {\n        bestRowCount = rowCap;\n      } else {\n        bestRowCount = Math.ceil(enemyCount / (sideCols * 2));\n      }\n      bestColCount = sideCols * 2;\n    }\n\n    if (this.maxEnemyWidth && bestEnemyWidth > this.maxEnemyWidth) {\n      bestEnemyWidth = this.maxEnemyWidth;\n    }\n\n    return [bestEnemyWidth, bestRowCount, bestColCount];\n  }\n\n  /**\n   * Adapt to screen resize.\n   */\n  reshape(newEnemies: Set<string>) {\n    console.log(\"RESHAPING\");\n    const [enemyWidth, rows, cols] = this.getOptimalDimensions(newEnemies.size);\n    this.setEnemyWidth(enemyWidth);\n    this.grid = array2D<string | null>(rows, cols, null);\n    this.enemies = new Set();\n    this.addNewEnemies(newEnemies);\n  }\n\n  getGridCapacity() {\n    return this.grid.length === 0 ? 0 : this.grid.length * this.grid[0].length;\n  }\n\n  /** Grow to accomodate new enemies, anchored at center-top */\n  expand(enemyCount: number) {\n    console.log(\"EXPANDING\");\n    const [enemyWidth, rows, cols] = this.getOptimalDimensions(enemyCount);\n    const newGrid = array2D<string | null>(rows, cols, null);\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid[i].length; j++) {\n        const offset = (cols - this.grid[0].length) / 2;\n        newGrid[i][j + offset] = this.grid[i][j];\n      }\n    }\n    this.setEnemyWidth(enemyWidth, 1001);\n    this.grid = newGrid;\n  }\n\n  getGutterWidth() {\n    return this.enemyWidth * this.GUTTER_WIDTH_RATIO;\n  }\n\n  // not used anymore but may be useful later\n  getGridExpectedSideWidth() {\n    if (this.grid.length === 0) {\n      return 0;\n    }\n\n    let cols = this.grid[0].length / 2;\n    findEmptyColsLoop: for (let j = 0; j < this.grid[0].length / 2; j++) {\n      for (let i = 0; i < this.grid.length; i++) {\n        if (\n          this.grid[i][j] != null ||\n          this.grid[i][this.grid[i].length - 1 - j] != null\n        ) {\n          break findEmptyColsLoop;\n        }\n      }\n      cols--;\n    }\n\n    return this.enemyWidth * cols + this.getGutterWidth() * (cols + 1);\n  }\n\n  getGridExpectedHeight() {\n    let rows = this.grid.length;\n    findEmptyRowsLoop: for (let i = this.grid.length - 1; i > 0; i--) {\n      for (let j = 0; j < this.grid[i].length; j++) {\n        if (this.grid[i][j] != null) {\n          break findEmptyRowsLoop;\n        }\n      }\n      rows--;\n    }\n\n    return (\n      (this.enemyWidth / this.WIDTH_HEIGHT_RATIO) * rows +\n      this.getGutterWidth() * (rows + 1)\n    );\n  }\n\n  getSideWidth() {\n    return (this.fullWidth - this.gapWidth) / 2;\n  }\n\n  updateYOffset(duration = 0) {\n    const expectedHeight = this.getGridExpectedHeight();\n    const yOffset = (this.fullHeight - expectedHeight) / 2;\n    if (duration === 0) {\n      this.yOffset = yOffset;\n    } else {\n      new TWEEN.Tween(this)\n        .to({ yOffset }, duration)\n        .easing(TWEEN.Easing.Quadratic.InOut)\n        .start();\n    }\n  }\n\n  removeMissingEnemies(newEnemies: Set<string>) {\n    for (let i in this.grid) {\n      for (let j in this.grid[i]) {\n        const enemy = this.grid[i][j];\n        if (enemy != null && !newEnemies.has(enemy)) {\n          this.grid[i][j] = null;\n        }\n      }\n    }\n  }\n\n  addNewEnemies(newEnemies: Set<string>) {\n    const gen = this.addPath();\n    let coord = gen.next().value as number[];\n    console.error(\"ABC attempting with grid\", _.cloneDeep(this.grid));\n    console.error(\"enemies\", this.enemies, newEnemies);\n    for (let enemy of newEnemies) {\n      if (!this.enemies.has(enemy)) {\n        while (this.grid[coord[0]][coord[1]] != null) {\n          coord = gen.next().value as number[];\n          console.error(\"ABC coord\", coord);\n        }\n        this.grid[coord[0]][coord[1]] = enemy;\n      }\n    }\n  }\n\n  *sidePath(side: \"left\" | \"right\") {\n    if (this.grid.length === 0) {\n      return;\n    }\n\n    let startJ: number;\n    if (side === \"left\") {\n      startJ = this.grid[0].length / 2 - 1;\n    } else {\n      startJ = this.grid[0].length / 2;\n    }\n    for (let r = 0; r < Math.max(this.grid.length, this.grid[0].length); r++) {\n      let endJ: Number;\n      if (side === \"left\") {\n        endJ = this.grid[0].length / 2 - 1 - r;\n      } else {\n        endJ = this.grid[0].length / 2 + r;\n      }\n\n      // move vertically\n      if (endJ >= 0 && endJ < this.grid[0].length) {\n        for (let i = 0; i < r; i++) {\n          if (i < this.grid.length) {\n            yield [i, endJ];\n          }\n        }\n      }\n\n      // move horizontally\n      if (r < this.grid.length) {\n        for (\n          let j = startJ;\n          side === \"left\" ? j >= endJ : j <= endJ;\n          j += side === \"left\" ? -1 : 1\n        ) {\n          if (j >= 0 && j < this.grid[0].length) {\n            yield [r, j];\n          }\n        }\n      }\n    }\n  }\n\n  *addPath() {\n    const left = this.sidePath(\"left\");\n    const right = this.sidePath(\"right\");\n    for (const l of left) {\n      yield l;\n      yield right.next().value;\n    }\n  }\n\n  /**\n   * Adapts the grid to new information.\n   */\n  update(\n    newEnemies: Set<string>,\n    fullWidth: number,\n    fullHeight: number,\n    gapWidth: number\n  ) {\n    console.log(\"GRID\", this.grid);\n\n    this.gapWidth = gapWidth;\n\n    if (fullWidth !== this.fullWidth || fullHeight !== this.fullHeight) {\n      this.fullWidth = fullWidth;\n      this.fullHeight = fullHeight;\n      this.reshape(newEnemies);\n      this.updateYOffset();\n      this.enemies = newEnemies;\n      return;\n    }\n\n    if (_.isEqual(this.enemies, newEnemies)) {\n      return;\n    }\n\n    this.removeMissingEnemies(newEnemies);\n\n    if (newEnemies.size > this.getGridCapacity()) {\n      this.expand(newEnemies.size);\n    }\n\n    this.addNewEnemies(newEnemies);\n\n    this.updateYOffset(this.enemies.size === 0 ? 0 : 2000);\n\n    this.enemies = newEnemies;\n  }\n\n  getEnemyCoordinates(): [{ [cid: string]: number[] }, number] {\n    const enemyCoords: { [cid: string]: number[] } = {};\n    const centerX = this.fullWidth / 2;\n\n    for (let i = 0; i < this.grid.length; i++) {\n      for (let j = 0; j < this.grid[i].length; j++) {\n        const enemy = this.grid[i][j];\n        if (enemy != null) {\n          let x: number;\n          if (j >= this.grid[i].length / 2) {\n            const colsRight = j - this.grid[i].length / 2;\n            x =\n              centerX +\n              this.gapWidth / 2 +\n              colsRight * this.animatedEnemyWidth +\n              (colsRight + 1) * this.getGutterWidth();\n          } else {\n            const colsLeft = this.grid[i].length / 2 - 1 - j;\n            x =\n              centerX -\n              this.gapWidth / 2 -\n              (colsLeft + 1) *\n                (this.animatedEnemyWidth + this.getGutterWidth());\n          }\n          const y =\n            this.yOffset +\n            i * (this.animatedEnemyWidth / this.WIDTH_HEIGHT_RATIO) +\n            (i + 1) * this.getGutterWidth();\n          enemyCoords[enemy] = [x, y];\n        }\n      }\n    }\n    return [enemyCoords, this.animatedEnemyWidth];\n  }\n}\n","import TWEEN from \"@tweenjs/tween.js\";\nimport { getColor, getMinos } from \"./tetrominos\";\nimport * as constants from \"./constants\";\nimport {\n  TetrisFieldTile,\n  ActivePiece,\n  Mino,\n  ServerState,\n  PlayerState,\n  EnemyAnimationState,\n} from \"./types\";\nimport { gray } from \"../common/colors\";\nimport { EnemyGrid } from \"./EnemyGrid\";\n\nconst addCoords = (a: [number, number], b: [number, number]) => {\n  const result: [number, number] = [a[0] + b[0], a[1] + b[1]];\n  return result;\n};\n\nconst translate = (activePiece: ActivePiece, translation: [number, number]) => {\n  return {\n    ...activePiece,\n    position: addCoords(activePiece.position, translation),\n  };\n};\n\nconst activePieceIsColliding = (\n  activePiece: ActivePiece,\n  field: TetrisFieldTile[][]\n) => {\n  const minos = getMinos(activePiece.pieceType, activePiece.orientation);\n\n  for (const coord of minos) {\n    const pos = addCoords(activePiece.position, coord);\n    if (\n      pos[0] < 0 ||\n      pos[0] >= constants.MATRIX_ROWS ||\n      pos[1] < 0 ||\n      pos[1] >= constants.MATRIX_COLS ||\n      field[pos[0]][pos[1]]\n    ) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst moveToGround = (activePiece: ActivePiece, field: TetrisFieldTile[][]) => {\n  let testShift = 0;\n  while (\n    !activePieceIsColliding(translate(activePiece, [testShift, 0]), field)\n  ) {\n    testShift++;\n  }\n  return translate(activePiece, [testShift - 1, 0]);\n};\n\nexport default class Renderer {\n  ctx: CanvasRenderingContext2D;\n  enemyGrid: EnemyGrid;\n  enemyStates: { [clientID: string]: PlayerState & EnemyAnimationState } = {};\n  playerState: PlayerState | null = null;\n\n  constructor(ctx: CanvasRenderingContext2D) {\n    this.ctx = ctx;\n    this.enemyGrid = new EnemyGrid();\n  }\n\n  getWidth() {\n    return this.ctx.canvas.width / window.devicePixelRatio;\n  }\n\n  getHeight() {\n    return this.ctx.canvas.height / window.devicePixelRatio;\n  }\n\n  renderBorder(x: number, y: number, unit: number, completeness: number) {\n    const width = unit * constants.MATRIX_COLS;\n    const height = unit * constants.MATRIX_ROWS_VISIBLE;\n\n    this.ctx.strokeStyle = \"#666\";\n    if (completeness === 1) {\n      this.ctx.strokeRect(x - 1, y - 1, width + 2, height + 2);\n    } else {\n      const verticalCompleteness = Math.min(completeness * 2, 1);\n      const centerY = y + height / 2;\n      const topY = centerY - (height / 2 + 1) * verticalCompleteness;\n      const bottomY = centerY + (height / 2 + 1) * verticalCompleteness;\n\n      const horizontalCompleteness = Math.max((completeness - 0.5) * 2, 0);\n      const leftX = x + (width / 2) * horizontalCompleteness;\n      const rightX = x + width - (width / 2) * horizontalCompleteness;\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(x - 1, topY);\n      this.ctx.lineTo(x - 1, bottomY);\n      this.ctx.moveTo(x + width + 1, topY);\n      this.ctx.lineTo(x + width + 1, bottomY);\n\n      this.ctx.moveTo(x, y - 1);\n      this.ctx.lineTo(leftX, y - 1);\n      this.ctx.moveTo(x, y + height + 1);\n      this.ctx.lineTo(leftX, y + height + 1);\n      this.ctx.moveTo(x + width, y - 1);\n      this.ctx.lineTo(rightX, y - 1);\n      this.ctx.moveTo(x + width, y + height + 1);\n      this.ctx.lineTo(rightX, y + height + 1);\n\n      this.ctx.stroke();\n    }\n  }\n\n  renderGrid(x: number, y: number, unit: number) {\n    const width = unit * constants.MATRIX_COLS;\n    const height = unit * constants.MATRIX_ROWS_VISIBLE;\n\n    this.ctx.strokeStyle = \"#161616\";\n    for (let i = 0; i < constants.MATRIX_ROWS_VISIBLE; i++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(x, y + i * unit);\n      this.ctx.lineTo(x + width, y + i * unit);\n      this.ctx.stroke();\n    }\n    for (let j = 0; j < constants.MATRIX_COLS; j++) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(x + j * unit, y);\n      this.ctx.lineTo(x + j * unit, y + height);\n      this.ctx.stroke();\n    }\n  }\n\n  renderActivePiece(\n    x: number,\n    y: number,\n    unit: number,\n    activePiece: ActivePiece,\n    ghost: boolean = false\n  ) {\n    for (const coord of getMinos(\n      activePiece.pieceType,\n      activePiece.orientation\n    )) {\n      this.ctx.fillStyle = ghost\n        ? getColor(activePiece.pieceType, constants.GHOST_ALPHA)\n        : getColor(activePiece.pieceType);\n      const col = activePiece.position[1] + coord[1];\n      const row =\n        activePiece.position[0] + coord[0] - constants.MATRIX_ROWS_HIDDEN;\n      if (row >= 0) {\n        this.ctx.fillRect(x + col * unit, y + row * unit, unit, unit);\n      }\n    }\n  }\n\n  renderLand(x: number, y: number, unit: number, field: TetrisFieldTile[][]) {\n    for (let i = constants.MATRIX_ROWS_HIDDEN; i < constants.MATRIX_ROWS; i++) {\n      for (let j = 0; j < constants.MATRIX_COLS; j++) {\n        const cell = field[i][j];\n        if (cell !== 0) {\n          this.ctx.fillStyle = getColor(cell);\n          this.ctx.fillRect(\n            x + unit * j,\n            y + unit * (i - constants.MATRIX_ROWS_HIDDEN),\n            unit,\n            unit\n          );\n        }\n      }\n    }\n  }\n\n  renderGameField(\n    x: number,\n    y: number,\n    unit: number,\n    field: TetrisFieldTile[][],\n    activePiece: ActivePiece | undefined,\n    options?: {\n      showGrid?: boolean;\n      borderCompleteness?: number;\n      fieldOpacity?: number;\n    }\n  ) {\n    const opts = options || {};\n    const borderCompleteness =\n      opts.borderCompleteness == null ? 1 : opts.borderCompleteness;\n    const showGrid = opts.showGrid == null ? true : opts.showGrid;\n    const fieldOpacity = opts.fieldOpacity == null ? 1 : opts.fieldOpacity;\n\n    this.renderBorder(x, y, unit, borderCompleteness);\n    if (showGrid) {\n      this.renderGrid(x, y, unit);\n    }\n    this.ctx.globalAlpha = fieldOpacity;\n    this.renderLand(x, y, unit, field);\n    if (activePiece) {\n      this.renderActivePiece(x, y, unit, activePiece);\n      const ghostPiece = moveToGround(activePiece, field);\n      this.renderActivePiece(x, y, unit, ghostPiece, true);\n    }\n    this.ctx.globalAlpha = 1;\n  }\n\n  renderBagPreview(x: number, y: number, unit: number, nextPieces: Mino[]) {\n    for (let i = 0; i < Math.min(5, nextPieces.length); i++) {\n      const type = nextPieces[i];\n      if ((type as any) === \".\") {\n        break;\n      }\n      this.ctx.fillStyle = getColor(type);\n      for (const coord of getMinos(type, 0)) {\n        this.ctx.fillRect(\n          x + coord[1] * unit,\n          y + (i * 3 + coord[0]) * unit,\n          unit,\n          unit\n        );\n      }\n    }\n  }\n\n  renderHoldSlot(\n    x: number,\n    y: number,\n    unit: number,\n    pieceType: Mino | undefined,\n    held: boolean\n  ) {\n    if (pieceType) {\n      this.ctx.fillStyle = held ? gray.toString() : getColor(pieceType);\n      for (const coord of getMinos(pieceType, 0)) {\n        this.ctx.fillRect(x + coord[1] * unit, y + coord[0] * unit, unit, unit);\n      }\n    }\n  }\n\n  renderGameFrame(\n    x: number,\n    y: number,\n    unit: number,\n    margin: number,\n    state: PlayerState | null\n  ) {\n    if (state) {\n      this.renderHoldSlot(x - unit - margin, y, unit, state.hold, state.held);\n      this.renderGameField(\n        x + unit * 4,\n        y,\n        unit,\n        state.field,\n        state.activePiece\n      );\n      this.renderBagPreview(\n        x + unit * (constants.MATRIX_COLS + 4) + margin,\n        y,\n        unit,\n        state.nextPieces\n      );\n    } else {\n      this.renderGrid(x + unit * 4, y, unit);\n    }\n  }\n\n  renderSelf(state: PlayerState | null) {\n    let unit = 28;\n    if (unit * 22 > this.getHeight()) {\n      unit = 20;\n    }\n    const margin = 4;\n    const frameWidth = unit * (constants.MATRIX_COLS + 4 + 5) + margin * 2;\n    const frameHeight = unit * constants.MATRIX_ROWS_VISIBLE;\n\n    this.renderGameFrame(\n      this.getWidth() / 2 - frameWidth / 2,\n      this.getHeight() / 2 - frameHeight / 2,\n      unit,\n      margin,\n      state\n    );\n\n    return frameWidth;\n  }\n\n  renderEnemy(\n    x: number,\n    y: number,\n    unit: number,\n    enemyState: PlayerState & EnemyAnimationState\n  ) {\n    let borderCompleteness = 1;\n    let fieldOpacity = 1;\n    if (enemyState.animationType === \"joining\") {\n      borderCompleteness = Math.min(enemyState.animationProgress * 2.5, 1);\n      fieldOpacity = Math.max((enemyState.animationProgress - 0.4) * 1.67, 0);\n    }\n    if (enemyState.animationType === \"disconnecting\") {\n      borderCompleteness = Math.min(\n        1 - (enemyState.animationProgress - 0.6) * 2.5,\n        1\n      );\n      fieldOpacity = Math.max(1 - enemyState.animationProgress * 1.67, 0);\n    }\n    this.renderGameField(x, y, unit, enemyState.field, enemyState.activePiece, {\n      showGrid: false,\n      borderCompleteness,\n      fieldOpacity,\n    });\n  }\n\n  renderEnemies(gapWidth: number) {\n    const enemies = new Set<string>();\n    for (let cid in this.enemyStates) {\n      enemies.add(cid);\n    }\n    this.enemyGrid.setMaxEnemyWidth(gapWidth * 0.4);\n    this.enemyGrid.update(enemies, this.getWidth(), this.getHeight(), gapWidth);\n\n    const [enemyCoords, enemyWidth] = this.enemyGrid.getEnemyCoordinates();\n    const unit = enemyWidth / constants.MATRIX_COLS;\n\n    Object.entries(enemyCoords).forEach(([cid, coords]) => {\n      const enemyState = this.enemyStates[cid];\n      this.renderEnemy(coords[0], coords[1], unit, enemyState);\n    });\n  }\n\n  renderEverything() {\n    this.ctx.clearRect(0, 0, this.getWidth(), this.getHeight());\n\n    const selfWidth = this.renderSelf(this.playerState);\n\n    const sideWidth = (this.getWidth() - selfWidth) / 2;\n    if (sideWidth > 80 && this.getHeight() > 80) {\n      this.renderEnemies(selfWidth);\n    }\n  }\n\n  updateFromServer(serverState: ServerState, clientID: string) {\n    for (let cid in serverState.playerStates) {\n      if (cid !== clientID) {\n        if (this.enemyStates[cid] == null) {\n          this.enemyStates[cid] = {\n            ...serverState.playerStates[cid],\n            animationType: \"joining\",\n            animationProgress: 0,\n            tween: null,\n          };\n          this.enemyStates[cid].tween = new TWEEN.Tween(this.enemyStates[cid])\n            .to({ animationProgress: 1 }, 1001)\n            .easing(TWEEN.Easing.Quadratic.Out)\n            .onComplete(() => {\n              this.enemyStates[cid].animationType = null;\n            })\n            .start();\n        } else {\n          for (let key in serverState.playerStates[cid]) {\n            // @ts-ignore\n            this.enemyStates[cid][key] = serverState.playerStates[cid][key];\n          }\n        }\n      }\n    }\n\n    for (let cid in this.enemyStates) {\n      const enemyState = this.enemyStates[cid];\n      if (\n        enemyState.animationType !== \"disconnecting\" &&\n        serverState.playerStates[cid] == null\n      ) {\n        enemyState.animationType = \"disconnecting\";\n        enemyState.animationProgress = 0;\n        if (enemyState.tween) {\n          enemyState.tween.stop();\n        }\n        enemyState.tween = new TWEEN.Tween(enemyState)\n          .to({ animationProgress: 1 }, 1001)\n          .easing(TWEEN.Easing.Quadratic.Out)\n          .onComplete(() => {\n            delete this.enemyStates[cid];\n          })\n          .start();\n      }\n    }\n  }\n\n  updateFromPrediction(predictedState: PlayerState | null) {\n    this.playerState = predictedState;\n  }\n}\n","export const MATRIX_COLS = 10;\nexport const MATRIX_ROWS = 40;\nexport const MATRIX_ROWS_VISIBLE = 20;\nexport const MATRIX_ROWS_HIDDEN = MATRIX_ROWS - MATRIX_ROWS_VISIBLE;\n\nexport const TICK_DURATION = 200;\nexport const DAS = 117;\nexport const ARR = 22;\n\nexport const GHOST_ALPHA = 0.3;\n","import TWEEN from \"@tweenjs/tween.js\";\nimport React, { useRef } from \"react\";\n\nimport styled from \"styled-components\";\nimport * as constants from \"../constants\";\nimport * as _ from \"lodash\";\nimport produce from \"immer\";\n// import \"../wasm_exec\";\nimport useWindowSize from \"../../common/util/useWindowSize\";\nimport { resizeCanvas } from \"../../common/util/helpers\";\nimport {\n  EverythingState,\n  ServerState,\n  PlayerState,\n  PlayerInput,\n} from \"../types\";\nimport Renderer from \"../Renderer\";\n\nconst keyBindings = {\n  moveLeft: 37,\n  moveRight: 39,\n  rotateClockwise: 38,\n  rotateCounterClockwise: 90,\n  softDrop: 40,\n  hardDrop: 32,\n  hold: 67,\n};\n\nconst keyDown: {\n  [key: string]: { downTime: number; lastTriggered: number };\n} = {};\n\nconst TetrisPageDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  flex-wrap: wrap;\n  background: black;\n`;\n\nexport let playerInputs: PlayerInput[] = [];\n\nasync function startLocalGameEngine() {\n  // @ts-ignore\n  const go = new Go();\n  console.log(\"fetching go\");\n  // @ts-ignore\n  let { instance } = await WebAssembly.instantiateStreaming(\n    fetch(\"main.wasm\"),\n    go.importObject\n  );\n  console.log(\"finished fetching\");\n  await go.run(instance);\n  console.log(\"go program halted\");\n}\n\n//TODO: fix types\nconst goToJSState = (s: any) => {\n  return produce(s, (draft: any) => {\n    for (const clientID of Object.keys(s.playerStates)) {\n      draft.playerStates[clientID] = goToJSPlayerState(\n        s.playerStates[clientID]\n      );\n    }\n  }) as any;\n};\n\nexport const goToJSPlayerState = (s: any) => {\n  return {\n    ...s,\n    activePiece: {\n      ...s.activePiece,\n      position: [s.activePiece.position.row, s.activePiece.position.col],\n    },\n  } as PlayerState;\n};\n\nexport const jsToGoPlayerState = (s: PlayerState) => {\n  return {\n    ...s,\n    activePiece: s.activePiece\n      ? {\n          ...s.activePiece,\n          position: {\n            row: s.activePiece.position[0],\n            col: s.activePiece.position[1],\n          },\n        }\n      : undefined,\n  };\n};\n\nconst reconcileServerState = (\n  everything: EverythingState,\n  newState: ServerState\n) => {\n  if (everything.clientID == null) {\n    throw new Error(\"clientID is null when reconciling server state\");\n  }\n\n  if (newState.playerStates == null) {\n    throw new Error(`server state is malformed: ${newState.playerStates}`);\n  }\n  everything.serverState = newState;\n\n  const newClientState =\n    everything.serverState.playerStates[everything.clientID];\n  if (newClientState == null) {\n    return;\n  }\n\n  const time = newClientState.time;\n\n  if ((everything.frameStartTime - time) % 17 !== 0) {\n    throw new Error(\n      `frameStartTime ${everything.frameStartTime} and server update time ${time} misaligned`\n    );\n  }\n\n  const replaceIndex =\n    everything.predictedStates.length -\n    1 -\n    (everything.frameStartTime - time) / 17;\n\n  if (replaceIndex < 0) {\n    throw new Error(\n      `Received server update from before the last update (index ${replaceIndex}); predictedStates is probably too short (length ${everything.predictedStates.length}).`\n    );\n  }\n\n  if (replaceIndex >= everything.predictedStates.length) {\n    console.log(\n      `Received server update from the future (index ${replaceIndex}); predictedStates is probably lagging behind (length ${everything.predictedStates.length}). Dropping update.`\n    );\n    return;\n  }\n\n  if (_.isEqual(everything.predictedStates[replaceIndex], newClientState)) {\n    console.log(\n      `Success: server state matches with client! Slicing predictedStates from index ${replaceIndex} to ${everything.predictedStates.length}`\n    );\n    everything.predictedStates = everything.predictedStates.slice(replaceIndex);\n    everything.inputHistory = everything.inputHistory.slice(replaceIndex);\n    return;\n  }\n\n  console.log(\n    \"stringified predicted states\",\n    JSON.stringify(everything.predictedStates)\n  );\n\n  console.log(\n    \"Server state\",\n    newClientState,\n    \"conflicts with client state\",\n    JSON.parse(JSON.stringify(everything.predictedStates[replaceIndex])),\n    \". Reconciling from index\",\n    replaceIndex,\n    \"to\",\n    everything.predictedStates.length\n  );\n\n  everything.inputHistory = everything.inputHistory.slice(replaceIndex);\n  let predictingTime = time;\n  everything.predictedStates = [newClientState];\n\n  for (const inputs of everything.inputHistory) {\n    predictingTime += 17;\n    const lastPredictedState =\n      everything.predictedStates[everything.predictedStates.length - 1];\n    if (lastPredictedState == null) {\n      throw new Error(`last predicted state was null while reconciling`);\n    }\n\n    // @ts-ignore\n    if (typeof updateGame == \"undefined\") {\n      console.log(\n        \"updateGame not ready at first reconciliation, pushing duplicated server state for now\"\n      );\n      everything.predictedStates.push(lastPredictedState);\n      continue;\n    }\n\n    // @ts-ignore\n    const goResult = updateGame(\n      JSON.stringify(jsToGoPlayerState(lastPredictedState)),\n      JSON.stringify(inputs),\n      predictingTime\n    );\n    const newPlayerState = goToJSPlayerState(JSON.parse(goResult));\n    everything.predictedStates.push(newPlayerState);\n  }\n};\n\nconst predictState = (everything: EverythingState, inputs: PlayerInput[]) => {\n  const lastPredictedState =\n    everything.predictedStates[everything.predictedStates.length - 1];\n\n  // @ts-ignore\n  if (lastPredictedState == null || typeof updateGame == \"undefined\") {\n    everything.predictedStates.push(lastPredictedState);\n    everything.inputHistory.push(inputs);\n    return;\n  }\n\n  // @ts-ignore\n  const goResult = updateGame(\n    JSON.stringify(jsToGoPlayerState(lastPredictedState)),\n    JSON.stringify(inputs),\n    everything.frameStartTime.toString()\n  );\n  const newPlayerState = goToJSPlayerState(JSON.parse(goResult));\n\n  console.log(\"inputs\", inputs);\n  everything.predictedStates.push(newPlayerState);\n  everything.inputHistory.push(inputs);\n};\n\nconst TetrisPage: React.FC = (props) => {\n  const everythingState = useRef<EverythingState>({\n    serverState: { playerStates: {} },\n    predictedStates: [null],\n    inputHistory: [],\n    actionIndex: 0,\n    clientID: undefined,\n    frameStartTime: 0,\n    serverTimeOffset: 0,\n  });\n  const renderer = React.useRef<Renderer | null>(null);\n  const windowSize = useWindowSize();\n  const canvasRef = React.useRef<HTMLCanvasElement>(null);\n\n  React.useEffect(() => {\n    if (renderer.current == null && canvasRef.current != null) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n      if (ctx) {\n        renderer.current = new Renderer(ctx);\n      }\n    }\n\n    const onKeyDown = (e: KeyboardEvent) => {\n      if (keyDown[e.keyCode]) {\n        return;\n      }\n      switch (e.keyCode) {\n        case keyBindings.moveLeft:\n          sendInput(1);\n          break;\n        case keyBindings.moveRight:\n          sendInput(2);\n          break;\n        case keyBindings.rotateClockwise:\n          sendInput(3);\n          break;\n        case keyBindings.rotateCounterClockwise:\n          sendInput(4);\n          break;\n        case keyBindings.softDrop:\n          sendInput(5);\n          break;\n        case keyBindings.hardDrop:\n          sendInput(6);\n          break;\n        case keyBindings.hold:\n          sendInput(7);\n          break;\n      }\n      keyDown[e.keyCode] = { downTime: Date.now(), lastTriggered: Date.now() };\n    };\n\n    const onKeyUp = (e: KeyboardEvent) => {\n      delete keyDown[e.keyCode];\n    };\n\n    startLocalGameEngine();\n    // const socket = new WebSocket(\"ws://34.67.102.3:8080/socket\");\n    const socket = new WebSocket(\"ws://localhost:8080/socket\");\n    socket.onopen = () => {\n      socket.onmessage = (m) => {\n        console.log(\"got message\", m);\n\n        let parsedData = JSON.parse(m.data);\n\n        if (parsedData.messageType && parsedData.messageType === \"id\") {\n          console.log(\"Got client ID\", parsedData.id);\n          everythingState.current.clientID = parsedData.id;\n          everythingState.current.frameStartTime = parsedData.time;\n          everythingState.current.serverTimeOffset =\n            Date.now() - everythingState.current.frameStartTime;\n\n          window.setTimeout(update, 17);\n          window.addEventListener(\"keydown\", onKeyDown);\n          window.addEventListener(\"keyup\", onKeyUp);\n        } else {\n          let { newState } = parsedData;\n          newState = goToJSState(newState);\n          reconcileServerState(everythingState.current, newState);\n          if (renderer.current && everythingState.current.clientID) {\n            renderer.current.updateFromServer(\n              everythingState.current.serverState,\n              everythingState.current.clientID\n            );\n          }\n        }\n      };\n    };\n\n    const sendInput = (command: number) => {\n      const clientPlayerInput = {\n        time: everythingState.current.frameStartTime,\n        command,\n        index: everythingState.current.actionIndex,\n      };\n      playerInputs.push(clientPlayerInput);\n      everythingState.current.actionIndex++;\n\n      const serverPlayerInput = {\n        playerID: everythingState.current.clientID,\n        ...clientPlayerInput,\n      };\n      const SIMULATE_POOR_CONNECTION = true;\n      if (SIMULATE_POOR_CONNECTION) {\n        window.setTimeout(() => {\n          socket.send(JSON.stringify(serverPlayerInput));\n        }, 500);\n      } else {\n        socket.send(JSON.stringify(serverPlayerInput));\n      }\n    };\n\n    const update = () => {\n      everythingState.current.frameStartTime += 17;\n\n      predictState(everythingState.current, playerInputs);\n      if (renderer.current && everythingState.current.clientID) {\n        renderer.current.updateFromPrediction(\n          everythingState.current.predictedStates[\n            everythingState.current.predictedStates.length - 1\n          ]\n        );\n      }\n\n      playerInputs = [];\n\n      const time = Date.now();\n\n      const rightKey = keyDown[keyBindings.moveRight];\n      if (\n        rightKey &&\n        time - rightKey.downTime >= constants.DAS &&\n        time - rightKey.lastTriggered >= constants.ARR\n      ) {\n        sendInput(2);\n        if (rightKey.lastTriggered === rightKey.downTime) {\n          rightKey.lastTriggered += constants.DAS;\n        } else {\n          rightKey.lastTriggered += constants.ARR;\n        }\n      }\n\n      const leftKey = keyDown[keyBindings.moveLeft];\n      if (\n        leftKey &&\n        time - leftKey.downTime >= constants.DAS &&\n        time - leftKey.lastTriggered >= constants.ARR\n      ) {\n        sendInput(1);\n        if (leftKey.lastTriggered === leftKey.downTime) {\n          leftKey.lastTriggered += constants.DAS;\n        } else {\n          leftKey.lastTriggered += constants.ARR;\n        }\n      }\n\n      const downKey = keyDown[keyBindings.softDrop];\n      if (downKey && time - downKey.lastTriggered >= constants.ARR) {\n        sendInput(5);\n        downKey.lastTriggered += constants.ARR;\n      }\n\n      const msUntilNextUpdate =\n        everythingState.current.frameStartTime +\n        17 -\n        (Date.now() - everythingState.current.serverTimeOffset);\n      window.setTimeout(update, msUntilNextUpdate);\n    };\n\n    function animate(time: number) {\n      requestAnimationFrame(animate);\n      TWEEN.update(time);\n      if (renderer.current) {\n        renderer.current.renderEverything();\n      }\n    }\n    requestAnimationFrame(animate);\n  }, []);\n\n  React.useEffect(() => {\n    if (windowSize.width && windowSize.height) {\n      resizeCanvas(canvasRef, windowSize.width, windowSize.height);\n    }\n  }, [windowSize]);\n\n  return (\n    <TetrisPageDiv>\n      <canvas\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          background: \"black\",\n        }}\n        ref={canvasRef}\n      />\n    </TetrisPageDiv>\n  );\n};\n\nexport default TetrisPage;\n","import React from \"react\";\n\nconst TestPage: React.FC = (props) => {\n  console.log(\"testpageprops\", props);\n  return <>404 :(</>;\n};\n\nexport default TestPage;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding: 16px;\n  font-family: Source Sans Pro;\n  outline: none;\n`;\n","import React from \"react\";\nimport { ParagraphBlockModel } from \"./TextEditor\";\n\ninterface ParagraphBlockProps {\n  index: number;\n  block: ParagraphBlockModel;\n}\n\nconst ParagraphBlock: React.FC<ParagraphBlockProps> = ({ index, block }) => {\n  const nodeRef = React.useRef<HTMLParagraphElement>(null);\n  return (\n    <p className=\"editor-block\" id={block.id} ref={nodeRef}>\n      {block.content}\n    </p>\n  );\n};\n\nexport default ParagraphBlock;\n","import React from \"react\";\nimport { HeaderBlockModel } from \"./TextEditor\";\n\ninterface HeaderBlockProps {\n  index: number;\n  block: HeaderBlockModel;\n}\n\nconst HeaderBlock: React.FC<HeaderBlockProps> = ({ block }) => {\n  let Tag = `h${block.level}` as \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n  return <Tag id={block.id}>{block.content}</Tag>;\n};\n\nexport default HeaderBlock;\n","export default function randomID() {\n  return `${Math.floor(Math.random() * 10000000)}`;\n}\n","import * as S from \"./TextEditor.styles\";\n\nimport * as _ from \"lodash\";\nimport React from \"react\";\nimport ParagraphBlock from \"./ParagraphBlock\";\nimport HeaderBlock from \"./HeaderBlock\";\nimport randomID from \"../../common/util/randomID\";\nimport { produce } from \"immer\";\n\nexport interface HeaderBlockModel {\n  type: \"header\";\n  id: string;\n  level: 1 | 2 | 3 | 4 | 5 | 6;\n  content: string;\n}\n\nexport interface ParagraphBlockModel {\n  type: \"paragraph\";\n  id: string;\n  content: string;\n}\n\nexport type BlockModel = ParagraphBlockModel | HeaderBlockModel;\n\nconst convertDomToModel = (html: string | undefined) => {\n  if (html == null) {\n    return \"\";\n  }\n  return html;\n};\n\nconst TextEditor: React.FC = () => {\n  const [blocks, setBlocks] = React.useState<BlockModel[]>([\n    { type: \"header\", id: randomID(), level: 1, content: \"A good day\" },\n    {\n      type: \"paragraph\",\n      id: randomID(),\n      content: \"hello\",\n    },\n    {\n      type: \"paragraph\",\n      id: randomID(),\n      content: \"another paragraph\",\n    },\n  ]);\n  console.log(\"STATE\", blocks);\n\n  const onContentUpdate = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      console.log(\"step 0\");\n      const selection = window.getSelection();\n      if (selection != null) {\n        console.log(\"step 1\");\n        let anchorElement: Element | null | undefined;\n        let focusElement: Element | null | undefined;\n        if (selection.anchorNode instanceof Element) {\n          anchorElement = selection.anchorNode;\n        } else {\n          anchorElement = selection.anchorNode?.parentElement;\n        }\n        if (selection.focusNode instanceof Element) {\n          focusElement = selection.focusNode;\n        } else {\n          focusElement = selection.focusNode?.parentElement;\n        }\n        if (anchorElement != null && focusElement != null) {\n          console.log(\"step 2\");\n\n          const anchorBlockNode = anchorElement.closest(\".editor-block\");\n          const focusBlockNode = focusElement.closest(\".editor-block\");\n          if (\n            anchorBlockNode != null &&\n            focusBlockNode != null &&\n            anchorBlockNode === focusBlockNode\n          ) {\n            console.log(\"step 3\", anchorBlockNode, focusBlockNode);\n            const blockID = anchorBlockNode.id;\n            const blockIndex = _.findIndex(\n              blocks,\n              (block) => block.id === blockID\n            );\n            window.setTimeout(() => {\n              const html = anchorBlockNode.innerHTML;\n              setBlocks((old) => {\n                return produce(old, (draft: BlockModel[]) => {\n                  draft[blockIndex].content = convertDomToModel(html);\n                });\n              });\n            });\n            return;\n          }\n        }\n      }\n      e.preventDefault();\n    },\n    [blocks]\n  );\n\n  return (\n    <S.Wrapper\n      contentEditable\n      onKeyDown={onContentUpdate}\n      suppressContentEditableWarning\n      onPaste={(e) => {\n        console.group(\"Pasted:\");\n        const items = e.clipboardData.items;\n        for (let i = 0; i < items.length; i++) {\n          const item = items[i];\n          const loggedObject = {\n            data: e.clipboardData.getData(item.type),\n            asFile: item.getAsFile(),\n            asEntry: item.webkitGetAsEntry(),\n          };\n          item.getAsString((s) => {\n            (loggedObject as any).asString = s;\n          });\n          console.group(`${item.type} (${item.kind})`);\n          console.log(loggedObject);\n          console.groupEnd();\n        }\n        console.groupEnd();\n      }}\n    >\n      {blocks.map((block, blockIndex) => {\n        let Component: React.FC<any>;\n        switch (block.type) {\n          case \"header\":\n            Component = HeaderBlock;\n            break;\n          case \"paragraph\":\n            Component = ParagraphBlock;\n            break;\n        }\n        return (\n          <Component\n            index={blockIndex}\n            block={block}\n            key={block.id}\n          ></Component>\n        );\n      })}\n    </S.Wrapper>\n  );\n};\n\nexport default TextEditor;\n","import React from \"react\";\nimport TextEditor from \"../components/TextEditor\";\n\nconst TextPage: React.FC = () => {\n  return <TextEditor></TextEditor>;\n};\n\nexport default TextPage;\n","import styled from \"styled-components\";\n\nexport const Input = styled.textarea`\n  padding: 16px;\n  font-family: Source Sans Pro;\n  outline: none;\n  border: none;\n  width: 100%;\n  min-height: 100vh;\n`;\n","import * as S from \"./ClipboardPage.styles\";\n\nimport React from \"react\";\n\nconst ClipboardPage: React.FC = () => {\n  return (\n    <S.Input\n      placeholder=\"Paste anything here!\"\n      onPaste={(e) => {\n        console.group(\"Pasted:\");\n        const items = e.clipboardData.items;\n        for (let i = 0; i < items.length; i++) {\n          const item = items[i];\n          const loggedObject = {\n            data: e.clipboardData.getData(item.type),\n            asFile: item.getAsFile(),\n            asEntry: item.webkitGetAsEntry(),\n          };\n          item.getAsString((s) => {\n            (loggedObject as any).asString = s;\n          });\n          console.group(`${item.type} (${item.kind})`);\n          console.log(loggedObject);\n          console.groupEnd();\n        }\n        console.groupEnd();\n      }}\n    ></S.Input>\n  );\n};\n\nexport default ClipboardPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport QLearningPage from \"./interactive-ml/pages/QLearningPage\";\nimport HomePage from \"./portfolio/pages/HomePage\";\nimport TetrisPage from \"./tetris/pages/TetrisPage\";\nimport TestPage from \"./portfolio/pages/TestPage\";\nimport TextPage from \"./text/pages/TextPage\";\nimport ClipboardPage from \"./clipboard/pages/ClipboardPage\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/tetris\" exact component={TetrisPage}></Route>\n          <Route path=\"/qlearning\" exact component={QLearningPage}></Route>\n          <Route path=\"/text\" exact component={TextPage}></Route>\n          <Route path=\"/clipboard\" exact component={ClipboardPage}></Route>\n          <Route path=\"/\" exact component={HomePage}></Route>\n          <Route component={TestPage}></Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}